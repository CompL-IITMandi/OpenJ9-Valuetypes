<?xml version="1.0" standalone="no"?>
<jitlog>
<!--
MULTIPLE LOG FILES MAY EXIST
Please check for ADDITIONAL log files named:  BT4loglog.log.1  BT4loglog.log.2  BT4loglog.log.3  BT4loglog.log.4  BT4loglog.log.5  BT4loglog.log.6
-->
<compile
	method="BT4.main([Ljava/lang/String;)V"
	hotness="warm"
	isProfilingCompile=0>
</compile>


=======>BT4.main([Ljava/lang/String;)V
<ilgen
	method="BT4.main([Ljava/lang/String;)V">
   <request> {OrdinaryMethod(<NULL>)} </request>

        +------------- Byte Code Index
        |  +-------------------- OpCode
        |  |                        +------------- First Field
        |  |                        |     +------------- Branch Target
        |  |                        |     |      +------- Const Pool Index
        |  |                        |     |      |    +------------- Constant
        |  |                        |     |      |    |
        V  V                        V     V      V    V

        0, JBnewdup                              3
        3, JBdup                
        4, JBinvokespecial          4
        7, JBastore1            
        8, JBgetstatic                           5
       11, JBaload1             
       12, JBinvokevirtual          7
       15, JBinvokevirtual          8
       18, JBinvokevirtual         10
       21, JBreturn0            

genIL() returned 1
<trees
	title="Pre IlGenOpt Trees"
	method="BT4.main([Ljava/lang/String;)V"
	hotness="warm">

Pre IlGenOpt Trees: for BT4.main([Ljava/lang/String;)V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n1n       BBStart <block_2>                                                                   [0x7fc34b0044f0] bci=[-1,0,4] rc=0 vc=0 vn=- li=- udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7fc34b0045e0] bci=[-1,0,4] rc=0 vc=0 vn=- li=- udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7fc34b004590] bci=[-1,0,4] rc=2 vc=0 vn=- li=- udi=- nc=0
n6n       treetop                                                                             [0x7fc34b004680] bci=[-1,0,4] rc=0 vc=0 vn=- li=- udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ]                          [0x7fc34b004630] bci=[-1,0,4] rc=4 vc=0 vn=- li=- udi=- nc=1
n3n           ==>loadaddr
n9n       astore  <pending push temp 0>[#384  Auto] [flags 0x7 0x800 ]                        [0x7fc34b004770] bci=[-1,4,4] rc=0 vc=0 vn=- li=- udi=- nc=1
n5n         ==>new
n8n       ResolveAndNULLCHK on n5n [#32]                                                      [0x7fc34b004720] bci=[-1,4,4] rc=0 vc=0 vn=- li=- udi=- nc=1
n7n         call  BRandom.<init>()V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ]  [0x7fc34b0046d0] bci=[-1,4,4] rc=1 vc=0 vn=- li=- udi=- nc=1
n5n           ==>new
n11n      treetop                                                                             [0x7fc34b004810] bci=[-1,4,4] rc=0 vc=0 vn=- li=- udi=- nc=1
n10n        call  <potentialOSRPointHelper>[#341  helper Method] [flags 0x400 0x0 ]           [0x7fc34b0047c0] bci=[-1,4,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n12n      astore  <auto slot 1>[#385  Auto] [flags 0x7 0x0 ]                                  [0x7fc34b004860] bci=[-1,7,4] rc=0 vc=0 vn=- li=- udi=- nc=1
n5n         ==>new
n14n      ResolveCHK [#314]                                                                   [0x7fc34b004900] bci=[-1,8,5] rc=0 vc=0 vn=- li=- udi=- nc=1
n13n        aload  java/lang/System.out Ljava/io/PrintStream;[#386  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ]  [0x7fc34b0048b0] bci=[-1,8,5] rc=4 vc=0 vn=- li=- udi=- nc=0
n19n      astore  <pending push temp 0>[#384  Auto] [flags 0x7 0x800 ]                        [0x7fc34b004a90] bci=[-1,12,5] rc=0 vc=0 vn=- li=- udi=- nc=1
n13n        ==>aload
n18n      ResolveAndNULLCHK on n15n [#32]                                                     [0x7fc34b004a40] bci=[-1,12,5] rc=0 vc=0 vn=- li=- udi=- nc=1
n17n        acalli  BRandom.getP()QBPoint;[#387  unresolved virtual Method] [flags 0x400 0x0 ]  [0x7fc34b0049f0] bci=[-1,12,5] rc=4 vc=0 vn=- li=- udi=- nc=2
n16n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]                         [0x7fc34b0049a0] bci=[-1,12,5] rc=1 vc=0 vn=- li=- udi=- nc=1
n15n            aload  <auto slot 1>[#385  Auto] [flags 0x7 0x0 ]                             [0x7fc34b004950] bci=[-1,11,5] rc=2 vc=0 vn=- li=- udi=- nc=0
n15n          ==>aload
n20n      astore  <pending push temp 1>[#388  Auto] [flags 0x7 0x800 ]                        [0x7fc34b004ae0] bci=[-1,12,5] rc=0 vc=0 vn=- li=- udi=- nc=1
n17n        ==>acalli
n22n      treetop                                                                             [0x7fc34b004b80] bci=[-1,12,5] rc=0 vc=0 vn=- li=- udi=- nc=1
n21n        call  <potentialOSRPointHelper>[#341  helper Method] [flags 0x400 0x0 ]           [0x7fc34b004b30] bci=[-1,12,5] rc=1 vc=0 vn=- li=- udi=- nc=0
n25n      ResolveAndNULLCHK on n17n [#32]                                                     [0x7fc34b004c70] bci=[-1,15,5] rc=0 vc=0 vn=- li=- udi=- nc=1
n24n        icalli  BPoint.getX()I[#389  unresolved virtual Method] [flags 0x400 0x0 ]        [0x7fc34b004c20] bci=[-1,15,5] rc=3 vc=0 vn=- li=- udi=- nc=2
n23n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]                         [0x7fc34b004bd0] bci=[-1,15,5] rc=1 vc=0 vn=- li=- udi=- nc=1
n17n            ==>acalli
n17n          ==>acalli
n26n      istore  <pending push temp 1>[#390  Auto] [flags 0x3 0x800 ]                        [0x7fc34b004cc0] bci=[-1,15,5] rc=0 vc=0 vn=- li=- udi=- nc=1
n24n        ==>icalli
n28n      treetop                                                                             [0x7fc34b004d60] bci=[-1,15,5] rc=0 vc=0 vn=- li=- udi=- nc=1
n27n        call  <potentialOSRPointHelper>[#341  helper Method] [flags 0x400 0x0 ]           [0x7fc34b004d10] bci=[-1,15,5] rc=1 vc=0 vn=- li=- udi=- nc=0
n31n      ResolveAndNULLCHK on n13n [#32]                                                     [0x7fc34b004e50] bci=[-1,18,5] rc=0 vc=0 vn=- li=- udi=- nc=1
n30n        calli  java/io/PrintStream.println(I)V[#391  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7fc34b004e00] bci=[-1,18,5] rc=1 vc=0 vn=- li=- udi=- nc=3 flg=0x20
n29n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]                         [0x7fc34b004db0] bci=[-1,18,5] rc=1 vc=0 vn=- li=- udi=- nc=1
n13n            ==>aload
n13n          ==>aload
n24n          ==>icalli
n33n      treetop                                                                             [0x7fc34b004ef0] bci=[-1,18,5] rc=0 vc=0 vn=- li=- udi=- nc=1
n32n        call  <potentialOSRPointHelper>[#341  helper Method] [flags 0x400 0x0 ]           [0x7fc34b004ea0] bci=[-1,18,5] rc=1 vc=0 vn=- li=- udi=- nc=0
n34n      return                                                                              [0x7fc34b004f40] bci=[-1,21,6] rc=0 vc=0 vn=- li=- udi=- nc=0
n2n       BBEnd </block_2> =====                                                              [0x7fc34b004540] bci=[-1,21,6] rc=0 vc=0 vn=- li=- udi=- nc=0

n37n      BBStart <block_3> (freq 0) (catches ...) (OSR handler) (cold)                       [0x7fc34b005030] bci=[-1,0,4] rc=0 vc=0 vn=- li=- udi=- nc=0
n38n      BBEnd </block_3> (cold) =====                                                       [0x7fc34b005080] bci=[-1,0,4] rc=0 vc=0 vn=- li=- udi=- nc=0

n35n      BBStart <block_4> (freq 0) (cold)                                                   [0x7fc34b004f90] bci=[-1,0,4] rc=0 vc=0 vn=- li=- udi=- nc=0
n57n      treetop                                                                             [0x7fc34b0a0190] bci=[-1,0,4] rc=0 vc=0 vn=- li=- udi=- nc=1
n56n        call  prepareForOSR[#55  helper Method] [flags 0x400 0x0 ] ()                     [0x7fc34b0a0140] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=17 flg=0x20
n39n          loadaddr  vmThread[#392  MethodMeta] [flags 0x200 0x0 ]                         [0x7fc34b0050d0] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n40n          iconst -1                                                                       [0x7fc34b005120] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n41n          aload  <pending push temp 0>[#384  Auto] [flags 0x7 0x800 ]                     [0x7fc34b005170] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n42n          iconst 384                                                                      [0x7fc34b0051c0] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n43n          iconst -1                                                                       [0x7fc34b005210] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n44n          iload  <pending push temp 1>[#390  Auto] [flags 0x3 0x800 ]                     [0x7fc34b005260] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n45n          iconst 390                                                                      [0x7fc34b0052b0] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n46n          iconst 0                                                                        [0x7fc34b005300] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n47n          aload  <pending push temp 1>[#388  Auto] [flags 0x7 0x800 ]                     [0x7fc34b005350] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n48n          iconst 388                                                                      [0x7fc34b0053a0] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n49n          iconst 1                                                                        [0x7fc34b0053f0] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n50n          aload  <parm 0 [Ljava/lang/String;>[#381  Parm] [flags 0x40000107 0x0 ]         [0x7fc34b005440] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n51n          iconst 381                                                                      [0x7fc34b005490] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n52n          iconst -1                                                                       [0x7fc34b0a0000] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n53n          aload  <auto slot 1>[#385  Auto] [flags 0x7 0x0 ]                               [0x7fc34b0a0050] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n54n          iconst 385                                                                      [0x7fc34b0a00a0] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n55n          iconst -1                                                                       [0x7fc34b0a00f0] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n59n      igoto                                                                               [0x7fc34b0a0230] bci=[-1,0,4] rc=0 vc=0 vn=- li=- udi=- nc=1
n58n        aload  osrReturnAddress[#340  MethodMeta +2408] [flags 0x10207 0x0 ]              [0x7fc34b0a01e0] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n36n      BBEnd </block_4> (cold)                                                             [0x7fc34b004fe0] bci=[-1,0,4] rc=0 vc=0 vn=- li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Symbol References (incremental):
--------------------------------
#32:   jitThrowNullPointerException[ helper Method] [flags 0x400 0x0 ] [0x7fc34b050350] (NoType)
#55:   prepareForOSR[ helper Method] [flags 0x400 0x0 ] [0x7fc34b090650] (NoType)
#91:   jitNewObject[ helper Method] [flags 0x400 0x0 ] [0x7fc34b050470] (NoType)
#309:  <vft-symbol>[ Shadow] [flags 0x18607 0x0 ] [0x7fc34b050d20] (Address)
#314:  <resolve check>[ helper Method] [flags 0x400 0x0 ] [0x7fc34b050350] (NoType)
#340:  osrReturnAddress[ MethodMeta +2408] [flags 0x10207 0x0 ] [0x7fc34b0908c0] (Address)
#341:  <potentialOSRPointHelper>[ helper Method] [flags 0x400 0x0 ] [0x7fc34b050920] (NoType)
#381:  <parm 0 [Ljava/lang/String;>[ Parm] [flags 0x40000107 0x0 ] [0x7fc34b0056a0] (Address)
#382:  unknown class object[ unresolved Static] [flags 0x18307 0x0 ] [0x7fc34b050260] (Address)
#383:  BRandom.<init>()V[ unresolved notAccessed special Method] [flags 0x400 0x0 ] [0x7fc34b050590] (NoType)
#384:  <pending push temp 0>[ Auto] [flags 0x7 0x800 ] [0x7fc34b050750] (Address)
#385:  <auto slot 1>[ Auto] [flags 0x7 0x0 ] [0x7fc34b0509d0] (Address)
#386:  java/lang/System.out Ljava/io/PrintStream;[ unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] [0x7fc34b050af0] (Address) [volatile]
#387:  BRandom.getP()QBPoint;[ unresolved virtual Method] [flags 0x400 0x0 ] [0x7fc34b050c50] (NoType)
#388:  <pending push temp 1>[ Auto] [flags 0x7 0x800 ] [0x7fc34b050e30] (Address)
#389:  BPoint.getX()I[ unresolved virtual Method] [flags 0x400 0x0 ] [0x7fc34b051010] (NoType)
#390:  <pending push temp 1>[ Auto] [flags 0x3 0x800 ] [0x7fc34b051100] (Int32)
#391:  java/io/PrintStream.println(I)V[ unresolved virtual Method] [flags 0x400 0x0 ] [0x7fc34b0512e0] (NoType)
#392:  vmThread[ MethodMeta] [flags 0x200 0x0 ] [0x7fc34b0905d0] (NoType)

Number of nodes = 59, symRefCount = 393
</trees>

<cfg>
         0 [0x7fc34b022230] entry
                 in        = []
                 out       = [2(0) ]
                 exception in  = []
                 exception out = []
         1 [0x7fc34b022140] exit
                 in        = [4(0) 2(0) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7fc34b050170] BBStart at 0x7fc34b0044f0
                 in        = [0(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = [3(0) ]
         3 [0x7fc34b0901b0] BBStart at 0x7fc34b005030, frequency = 0
                 in        = []
                 out       = [4(0) ]
                 exception in  = [2(0) ]
                 exception out = []
         4 [0x7fc34b090080] BBStart at 0x7fc34b004f90, frequency = 0
                 in        = [3(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []

</cfg>
<knownObjectTable size="1"> // 00007FC34B00B9E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
<optimize
	method="BT4.main([Ljava/lang/String;)V"
	hotness="warm">
<optimization id=1 name=osrLiveRangeAnalysis method=BT4.main([Ljava/lang/String;)V>
Performing 1: osrLiveRangeAnalysis
              (Invalidating structure)
<trees
	title="Trees after osrLiveRangeAnalysis"
	method="BT4.main([Ljava/lang/String;)V"
	hotness="warm">

Trees after osrLiveRangeAnalysis: for BT4.main([Ljava/lang/String;)V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n1n       BBStart <block_2>                                                                   [0x7fc34b0044f0] bci=[-1,0,4] rc=0 vc=3 vn=- li=- udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7fc34b0045e0] bci=[-1,0,4] rc=0 vc=4 vn=- li=- udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7fc34b004590] bci=[-1,0,4] rc=2 vc=4 vn=- li=- udi=- nc=0
n6n       treetop                                                                             [0x7fc34b004680] bci=[-1,0,4] rc=0 vc=4 vn=- li=- udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ]                          [0x7fc34b004630] bci=[-1,0,4] rc=4 vc=4 vn=- li=- udi=- nc=1
n3n           ==>loadaddr
n9n       astore  <pending push temp 0>[#384  Auto] [flags 0x7 0x800 ]                        [0x7fc34b004770] bci=[-1,4,4] rc=0 vc=4 vn=- li=- udi=- nc=1
n5n         ==>new
n8n       ResolveAndNULLCHK on n5n [#32]                                                      [0x7fc34b004720] bci=[-1,4,4] rc=0 vc=4 vn=- li=- udi=- nc=1
n7n         call  BRandom.<init>()V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ]  [0x7fc34b0046d0] bci=[-1,4,4] rc=1 vc=4 vn=- li=- udi=- nc=1
n5n           ==>new
n11n      treetop                                                                             [0x7fc34b004810] bci=[-1,4,4] rc=0 vc=4 vn=- li=- udi=- nc=1
n10n        call  <potentialOSRPointHelper>[#341  helper Method] [flags 0x400 0x0 ]           [0x7fc34b0047c0] bci=[-1,4,4] rc=1 vc=4 vn=- li=- udi=- nc=0
n12n      astore  <auto slot 1>[#385  Auto] [flags 0x7 0x0 ]                                  [0x7fc34b004860] bci=[-1,7,4] rc=0 vc=4 vn=- li=- udi=- nc=1
n5n         ==>new
n14n      ResolveCHK [#314]                                                                   [0x7fc34b004900] bci=[-1,8,5] rc=0 vc=4 vn=- li=- udi=- nc=1
n13n        aload  java/lang/System.out Ljava/io/PrintStream;[#386  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ]  [0x7fc34b0048b0] bci=[-1,8,5] rc=4 vc=4 vn=- li=- udi=- nc=0
n19n      astore  <pending push temp 0>[#384  Auto] [flags 0x7 0x800 ]                        [0x7fc34b004a90] bci=[-1,12,5] rc=0 vc=4 vn=- li=- udi=- nc=1
n13n        ==>aload
n18n      ResolveAndNULLCHK on n15n [#32]                                                     [0x7fc34b004a40] bci=[-1,12,5] rc=0 vc=4 vn=- li=- udi=- nc=1
n17n        acalli  BRandom.getP()QBPoint;[#387  unresolved virtual Method] [flags 0x400 0x0 ]  [0x7fc34b0049f0] bci=[-1,12,5] rc=4 vc=4 vn=- li=- udi=- nc=2
n16n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]                         [0x7fc34b0049a0] bci=[-1,12,5] rc=1 vc=4 vn=- li=- udi=- nc=1
n15n            aload  <auto slot 1>[#385  Auto] [flags 0x7 0x0 ]                             [0x7fc34b004950] bci=[-1,11,5] rc=2 vc=4 vn=- li=- udi=- nc=0
n15n          ==>aload
n20n      astore  <pending push temp 1>[#388  Auto] [flags 0x7 0x800 ]                        [0x7fc34b004ae0] bci=[-1,12,5] rc=0 vc=4 vn=- li=- udi=- nc=1
n17n        ==>acalli
n22n      treetop                                                                             [0x7fc34b004b80] bci=[-1,12,5] rc=0 vc=4 vn=- li=- udi=- nc=1
n21n        call  <potentialOSRPointHelper>[#341  helper Method] [flags 0x400 0x0 ]           [0x7fc34b004b30] bci=[-1,12,5] rc=1 vc=4 vn=- li=- udi=- nc=0
n25n      ResolveAndNULLCHK on n17n [#32]                                                     [0x7fc34b004c70] bci=[-1,15,5] rc=0 vc=4 vn=- li=- udi=- nc=1
n24n        icalli  BPoint.getX()I[#389  unresolved virtual Method] [flags 0x400 0x0 ]        [0x7fc34b004c20] bci=[-1,15,5] rc=3 vc=4 vn=- li=- udi=- nc=2
n23n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]                         [0x7fc34b004bd0] bci=[-1,15,5] rc=1 vc=4 vn=- li=- udi=- nc=1
n17n            ==>acalli
n17n          ==>acalli
n26n      istore  <pending push temp 1>[#390  Auto] [flags 0x3 0x800 ]                        [0x7fc34b004cc0] bci=[-1,15,5] rc=0 vc=4 vn=- li=- udi=- nc=1
n24n        ==>icalli
n28n      treetop                                                                             [0x7fc34b004d60] bci=[-1,15,5] rc=0 vc=4 vn=- li=- udi=- nc=1
n27n        call  <potentialOSRPointHelper>[#341  helper Method] [flags 0x400 0x0 ]           [0x7fc34b004d10] bci=[-1,15,5] rc=1 vc=4 vn=- li=- udi=- nc=0
n31n      ResolveAndNULLCHK on n13n [#32]                                                     [0x7fc34b004e50] bci=[-1,18,5] rc=0 vc=4 vn=- li=- udi=- nc=1
n30n        calli  java/io/PrintStream.println(I)V[#391  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7fc34b004e00] bci=[-1,18,5] rc=1 vc=4 vn=- li=- udi=- nc=3 flg=0x20
n29n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]                         [0x7fc34b004db0] bci=[-1,18,5] rc=1 vc=4 vn=- li=- udi=- nc=1
n13n            ==>aload
n13n          ==>aload
n24n          ==>icalli
n33n      treetop                                                                             [0x7fc34b004ef0] bci=[-1,18,5] rc=0 vc=4 vn=- li=- udi=- nc=1
n32n        call  <potentialOSRPointHelper>[#341  helper Method] [flags 0x400 0x0 ]           [0x7fc34b004ea0] bci=[-1,18,5] rc=1 vc=4 vn=- li=- udi=- nc=0
n34n      return                                                                              [0x7fc34b004f40] bci=[-1,21,6] rc=0 vc=4 vn=- li=- udi=- nc=0
n2n       BBEnd </block_2> =====                                                              [0x7fc34b004540] bci=[-1,21,6] rc=0 vc=4 vn=- li=- udi=- nc=0

n37n      BBStart <block_3> (freq 0) (catches ...) (OSR handler) (cold)                       [0x7fc34b005030] bci=[-1,0,4] rc=0 vc=0 vn=- li=- udi=- nc=0
n38n      BBEnd </block_3> (cold) =====                                                       [0x7fc34b005080] bci=[-1,0,4] rc=0 vc=0 vn=- li=- udi=- nc=0

n35n      BBStart <block_4> (freq 0) (cold)                                                   [0x7fc34b004f90] bci=[-1,0,4] rc=0 vc=0 vn=- li=- udi=- nc=0
n57n      treetop                                                                             [0x7fc34b0a0190] bci=[-1,0,4] rc=0 vc=0 vn=- li=- udi=- nc=1
n56n        call  prepareForOSR[#55  helper Method] [flags 0x400 0x0 ] ()                     [0x7fc34b0a0140] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=17 flg=0x20
n39n          loadaddr  vmThread[#392  MethodMeta] [flags 0x200 0x0 ]                         [0x7fc34b0050d0] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n40n          iconst -1                                                                       [0x7fc34b005120] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n41n          aload  <pending push temp 0>[#384  Auto] [flags 0x7 0x800 ]                     [0x7fc34b005170] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n42n          iconst 384                                                                      [0x7fc34b0051c0] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n43n          iconst -1                                                                       [0x7fc34b005210] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n44n          iload  <pending push temp 1>[#390  Auto] [flags 0x3 0x800 ]                     [0x7fc34b005260] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n45n          iconst 390                                                                      [0x7fc34b0052b0] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n46n          iconst 0                                                                        [0x7fc34b005300] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n47n          aload  <pending push temp 1>[#388  Auto] [flags 0x7 0x800 ]                     [0x7fc34b005350] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n48n          iconst 388                                                                      [0x7fc34b0053a0] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n49n          iconst 1                                                                        [0x7fc34b0053f0] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n50n          aload  <parm 0 [Ljava/lang/String;>[#381  Parm] [flags 0x40000107 0x0 ]         [0x7fc34b005440] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n51n          iconst 381                                                                      [0x7fc34b005490] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n52n          iconst -1                                                                       [0x7fc34b0a0000] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n53n          aload  <auto slot 1>[#385  Auto] [flags 0x7 0x0 ]                               [0x7fc34b0a0050] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n54n          iconst 385                                                                      [0x7fc34b0a00a0] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n55n          iconst -1                                                                       [0x7fc34b0a00f0] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n59n      igoto                                                                               [0x7fc34b0a0230] bci=[-1,0,4] rc=0 vc=0 vn=- li=- udi=- nc=1
n58n        aload  osrReturnAddress[#340  MethodMeta +2408] [flags 0x10207 0x0 ]              [0x7fc34b0a01e0] bci=[-1,0,4] rc=1 vc=0 vn=- li=- udi=- nc=0
n36n      BBEnd </block_4> (cold)                                                             [0x7fc34b004fe0] bci=[-1,0,4] rc=0 vc=0 vn=- li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 59, symRefCount = 393
</trees>

<cfg>
         0 [0x7fc34b022230] entry
                 in        = []
                 out       = [2(0) ]
                 exception in  = []
                 exception out = []
         1 [0x7fc34b022140] exit
                 in        = [4(0) 2(0) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7fc34b050170] BBStart at 0x7fc34b0044f0
                 in        = [0(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = [3(0) ]
         3 [0x7fc34b0901b0] BBStart at 0x7fc34b005030, frequency = 0
                 in        = []
                 out       = [4(0) ]
                 exception in  = [2(0) ]
                 exception out = []
         4 [0x7fc34b090080] BBStart at 0x7fc34b004f90, frequency = 0
                 in        = [3(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []

</cfg>
<knownObjectTable size="1"> // 00007FC34B00B9E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

<optimization id=3 name=methodHandleTransformer method=BT4.main([Ljava/lang/String;)V>
Performing 3: methodHandleTransformer
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=4 name=varHandleTransformer method=BT4.main([Ljava/lang/String;)V>
Performing 4: varHandleTransformer mustBeDone
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=5 name=handleRecompilationOps method=BT4.main([Ljava/lang/String;)V>
Performing 5: handleRecompilationOps mustBeDone
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=6 name=unsafeFastPath method=BT4.main([Ljava/lang/String;)V>
Performing 6: unsafeFastPath
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=7 name=recognizedCallTransformer method=BT4.main([Ljava/lang/String;)V>
Performing 7: recognizedCallTransformer
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=8 name=coldBlockMarker method=BT4.main([Ljava/lang/String;)V>
Performing 8: coldBlockMarker
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=9 name=CFGSimplification method=BT4.main([Ljava/lang/String;)V>
Performing 9: CFGSimplification
            (Building alias info)
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=10 name=allocationSinking method=BT4.main([Ljava/lang/String;)V>
Performing 10: allocationSinking
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=11 name=invariantArgumentPreexistence method=BT4.main([Ljava/lang/String;)V>
Performing 11: invariantArgumentPreexistence
         No transformations done by this pass -- omitting listings
</optimization>

</optimize>
</ilgen>
<trees
	title="Initial Trees"
	method="BT4.main([Ljava/lang/String;)V"
	hotness="warm">

Initial Trees: for BT4.main([Ljava/lang/String;)V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n1n       BBStart <block_2>                                                                   [0x7fc34b0044f0] bci=[-1,0,4] rc=0 vc=12 vn=- li=- udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7fc34b0045e0] bci=[-1,0,4] rc=0 vc=12 vn=- li=- udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7fc34b004590] bci=[-1,0,4] rc=2 vc=12 vn=- li=2 udi=- nc=0
n6n       treetop                                                                             [0x7fc34b004680] bci=[-1,0,4] rc=0 vc=12 vn=- li=- udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ]                          [0x7fc34b004630] bci=[-1,0,4] rc=4 vc=12 vn=- li=4 udi=- nc=1
n3n           ==>loadaddr
n9n       astore  <pending push temp 0>[#384  Auto] [flags 0x7 0x800 ]                        [0x7fc34b004770] bci=[-1,4,4] rc=0 vc=12 vn=- li=- udi=- nc=1
n5n         ==>new
n8n       ResolveAndNULLCHK on n5n [#32]                                                      [0x7fc34b004720] bci=[-1,4,4] rc=0 vc=12 vn=- li=- udi=- nc=1
n7n         call  BRandom.<init>()V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ]  [0x7fc34b0046d0] bci=[-1,4,4] rc=1 vc=12 vn=- li=1 udi=- nc=1
n5n           ==>new
n11n      treetop                                                                             [0x7fc34b004810] bci=[-1,4,4] rc=0 vc=12 vn=- li=- udi=- nc=1
n10n        call  <potentialOSRPointHelper>[#341  helper Method] [flags 0x400 0x0 ]           [0x7fc34b0047c0] bci=[-1,4,4] rc=1 vc=12 vn=- li=1 udi=- nc=0
n12n      astore  <auto slot 1>[#385  Auto] [flags 0x7 0x0 ]                                  [0x7fc34b004860] bci=[-1,7,4] rc=0 vc=12 vn=- li=- udi=- nc=1
n5n         ==>new
n14n      ResolveCHK [#314]                                                                   [0x7fc34b004900] bci=[-1,8,5] rc=0 vc=12 vn=- li=- udi=- nc=1
n13n        aload  java/lang/System.out Ljava/io/PrintStream;[#386  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ]  [0x7fc34b0048b0] bci=[-1,8,5] rc=4 vc=12 vn=- li=4 udi=- nc=0
n19n      astore  <pending push temp 0>[#384  Auto] [flags 0x7 0x800 ]                        [0x7fc34b004a90] bci=[-1,12,5] rc=0 vc=12 vn=- li=- udi=- nc=1
n13n        ==>aload
n18n      ResolveAndNULLCHK on n15n [#32]                                                     [0x7fc34b004a40] bci=[-1,12,5] rc=0 vc=12 vn=- li=- udi=- nc=1
n17n        acalli  BRandom.getP()QBPoint;[#387  unresolved virtual Method] [flags 0x400 0x0 ]  [0x7fc34b0049f0] bci=[-1,12,5] rc=4 vc=12 vn=- li=4 udi=- nc=2
n16n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]                         [0x7fc34b0049a0] bci=[-1,12,5] rc=1 vc=12 vn=- li=1 udi=- nc=1
n15n            aload  <auto slot 1>[#385  Auto] [flags 0x7 0x0 ]                             [0x7fc34b004950] bci=[-1,11,5] rc=2 vc=12 vn=- li=2 udi=- nc=0
n15n          ==>aload
n20n      astore  <pending push temp 1>[#388  Auto] [flags 0x7 0x800 ]                        [0x7fc34b004ae0] bci=[-1,12,5] rc=0 vc=12 vn=- li=- udi=- nc=1
n17n        ==>acalli
n22n      treetop                                                                             [0x7fc34b004b80] bci=[-1,12,5] rc=0 vc=12 vn=- li=- udi=- nc=1
n21n        call  <potentialOSRPointHelper>[#341  helper Method] [flags 0x400 0x0 ]           [0x7fc34b004b30] bci=[-1,12,5] rc=1 vc=12 vn=- li=1 udi=- nc=0
n25n      ResolveAndNULLCHK on n17n [#32]                                                     [0x7fc34b004c70] bci=[-1,15,5] rc=0 vc=12 vn=- li=- udi=- nc=1
n24n        icalli  BPoint.getX()I[#389  unresolved virtual Method] [flags 0x400 0x0 ]        [0x7fc34b004c20] bci=[-1,15,5] rc=3 vc=12 vn=- li=3 udi=- nc=2
n23n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]                         [0x7fc34b004bd0] bci=[-1,15,5] rc=1 vc=12 vn=- li=1 udi=- nc=1
n17n            ==>acalli
n17n          ==>acalli
n26n      istore  <pending push temp 1>[#390  Auto] [flags 0x3 0x800 ]                        [0x7fc34b004cc0] bci=[-1,15,5] rc=0 vc=12 vn=- li=- udi=- nc=1
n24n        ==>icalli
n28n      treetop                                                                             [0x7fc34b004d60] bci=[-1,15,5] rc=0 vc=12 vn=- li=- udi=- nc=1
n27n        call  <potentialOSRPointHelper>[#341  helper Method] [flags 0x400 0x0 ]           [0x7fc34b004d10] bci=[-1,15,5] rc=1 vc=12 vn=- li=1 udi=- nc=0
n31n      ResolveAndNULLCHK on n13n [#32]                                                     [0x7fc34b004e50] bci=[-1,18,5] rc=0 vc=12 vn=- li=- udi=- nc=1
n30n        calli  java/io/PrintStream.println(I)V[#391  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7fc34b004e00] bci=[-1,18,5] rc=1 vc=12 vn=- li=1 udi=- nc=3 flg=0x20
n29n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]                         [0x7fc34b004db0] bci=[-1,18,5] rc=1 vc=12 vn=- li=1 udi=- nc=1
n13n            ==>aload
n13n          ==>aload
n24n          ==>icalli
n33n      treetop                                                                             [0x7fc34b004ef0] bci=[-1,18,5] rc=0 vc=12 vn=- li=- udi=- nc=1
n32n        call  <potentialOSRPointHelper>[#341  helper Method] [flags 0x400 0x0 ]           [0x7fc34b004ea0] bci=[-1,18,5] rc=1 vc=12 vn=- li=1 udi=- nc=0
n34n      return                                                                              [0x7fc34b004f40] bci=[-1,21,6] rc=0 vc=12 vn=- li=- udi=- nc=0
n2n       BBEnd </block_2> =====                                                              [0x7fc34b004540] bci=[-1,21,6] rc=0 vc=12 vn=- li=- udi=- nc=0

n37n      BBStart <block_3> (freq 0) (catches ...) (OSR handler) (cold)                       [0x7fc34b005030] bci=[-1,0,4] rc=0 vc=12 vn=- li=- udi=- nc=0
n38n      BBEnd </block_3> (cold) =====                                                       [0x7fc34b005080] bci=[-1,0,4] rc=0 vc=12 vn=- li=- udi=- nc=0

n35n      BBStart <block_4> (freq 0) (cold)                                                   [0x7fc34b004f90] bci=[-1,0,4] rc=0 vc=12 vn=- li=- udi=- nc=0
n57n      treetop                                                                             [0x7fc34b0a0190] bci=[-1,0,4] rc=0 vc=12 vn=- li=- udi=- nc=1
n56n        call  prepareForOSR[#55  helper Method] [flags 0x400 0x0 ] ()                     [0x7fc34b0a0140] bci=[-1,0,4] rc=1 vc=12 vn=- li=1 udi=- nc=17 flg=0x20
n39n          loadaddr  vmThread[#392  MethodMeta] [flags 0x200 0x0 ]                         [0x7fc34b0050d0] bci=[-1,0,4] rc=1 vc=12 vn=- li=1 udi=- nc=0
n40n          iconst -1                                                                       [0x7fc34b005120] bci=[-1,0,4] rc=1 vc=12 vn=- li=1 udi=- nc=0
n41n          aload  <pending push temp 0>[#384  Auto] [flags 0x7 0x800 ]                     [0x7fc34b005170] bci=[-1,0,4] rc=1 vc=12 vn=- li=1 udi=- nc=0
n42n          iconst 384                                                                      [0x7fc34b0051c0] bci=[-1,0,4] rc=1 vc=12 vn=- li=1 udi=- nc=0
n43n          iconst -1                                                                       [0x7fc34b005210] bci=[-1,0,4] rc=1 vc=12 vn=- li=1 udi=- nc=0
n44n          iload  <pending push temp 1>[#390  Auto] [flags 0x3 0x800 ]                     [0x7fc34b005260] bci=[-1,0,4] rc=1 vc=12 vn=- li=1 udi=- nc=0
n45n          iconst 390                                                                      [0x7fc34b0052b0] bci=[-1,0,4] rc=1 vc=12 vn=- li=1 udi=- nc=0
n46n          iconst 0                                                                        [0x7fc34b005300] bci=[-1,0,4] rc=1 vc=12 vn=- li=1 udi=- nc=0
n47n          aload  <pending push temp 1>[#388  Auto] [flags 0x7 0x800 ]                     [0x7fc34b005350] bci=[-1,0,4] rc=1 vc=12 vn=- li=1 udi=- nc=0
n48n          iconst 388                                                                      [0x7fc34b0053a0] bci=[-1,0,4] rc=1 vc=12 vn=- li=1 udi=- nc=0
n49n          iconst 1                                                                        [0x7fc34b0053f0] bci=[-1,0,4] rc=1 vc=12 vn=- li=1 udi=- nc=0
n50n          aload  <parm 0 [Ljava/lang/String;>[#381  Parm] [flags 0x40000107 0x0 ]         [0x7fc34b005440] bci=[-1,0,4] rc=1 vc=12 vn=- li=1 udi=- nc=0
n51n          iconst 381                                                                      [0x7fc34b005490] bci=[-1,0,4] rc=1 vc=12 vn=- li=1 udi=- nc=0
n52n          iconst -1                                                                       [0x7fc34b0a0000] bci=[-1,0,4] rc=1 vc=12 vn=- li=1 udi=- nc=0
n53n          aload  <auto slot 1>[#385  Auto] [flags 0x7 0x0 ]                               [0x7fc34b0a0050] bci=[-1,0,4] rc=1 vc=12 vn=- li=1 udi=- nc=0
n54n          iconst 385                                                                      [0x7fc34b0a00a0] bci=[-1,0,4] rc=1 vc=12 vn=- li=1 udi=- nc=0
n55n          iconst -1                                                                       [0x7fc34b0a00f0] bci=[-1,0,4] rc=1 vc=12 vn=- li=1 udi=- nc=0
n59n      igoto                                                                               [0x7fc34b0a0230] bci=[-1,0,4] rc=0 vc=12 vn=- li=- udi=- nc=1
n58n        aload  osrReturnAddress[#340  MethodMeta +2408] [flags 0x10207 0x0 ]              [0x7fc34b0a01e0] bci=[-1,0,4] rc=1 vc=12 vn=- li=1 udi=- nc=0
n36n      BBEnd </block_4> (cold)                                                             [0x7fc34b004fe0] bci=[-1,0,4] rc=0 vc=12 vn=- li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 59, symRefCount = 393
</trees>

<cfg>
         0 [0x7fc34b022230] entry
                 in        = []
                 out       = [2(0) ]
                 exception in  = []
                 exception out = []
         1 [0x7fc34b022140] exit
                 in        = [4(0) 2(0) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7fc34b050170] BBStart at 0x7fc34b0044f0
                 in        = [0(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = [3(0) ]
         3 [0x7fc34b0901b0] BBStart at 0x7fc34b005030, frequency = 0
                 in        = []
                 out       = [4(0) ]
                 exception in  = [2(0) ]
                 exception out = []
         4 [0x7fc34b090080] BBStart at 0x7fc34b004f90, frequency = 0
                 in        = [3(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []

</cfg>
<knownObjectTable size="1"> // 00007FC34B00B9E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>

This method is warm
<optimize
	method="BT4.main([Ljava/lang/String;)V"
	hotness="warm">
<optimization id=13 name=coldBlockOutlining method=BT4.main([Ljava/lang/String;)V>
Performing 13: coldBlockOutlining
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=14 name=stringBuilderTransformer method=BT4.main([Ljava/lang/String;)V>
Performing 14: stringBuilderTransformer
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=15 name=stringPeepholes method=BT4.main([Ljava/lang/String;)V>
Performing 15: stringPeepholes
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=16 name=inlining method=BT4.main([Ljava/lang/String;)V>
Performing 16: inlining
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=18 name=staticFinalFieldFolding method=BT4.main([Ljava/lang/String;)V>
Performing 18: staticFinalFieldFolding
            (Building alias info)
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=19 name=osrGuardInsertion method=BT4.main([Ljava/lang/String;)V>
Performing 19: osrGuardInsertion mustBeDone
         O^O OSR GUARD INS: Remove potentialOSRPointHelper call n11n 00007FC34B004810
         O^O OSR GUARD INS: Remove potentialOSRPointHelper call n22n 00007FC34B004B80
         O^O OSR GUARD INS: Remove potentialOSRPointHelper call n28n 00007FC34B004D60
         O^O OSR GUARD INS: Remove potentialOSRPointHelper call n33n 00007FC34B004EF0
<trees
	title="Trees after osrGuardInsertion"
	method="BT4.main([Ljava/lang/String;)V"
	hotness="warm">

Trees after osrGuardInsertion: for BT4.main([Ljava/lang/String;)V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n1n       BBStart <block_2>                                                                   [0x7fc34b0044f0] bci=[-1,0,4] rc=0 vc=17 vn=- li=- udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7fc34b0045e0] bci=[-1,0,4] rc=0 vc=17 vn=- li=- udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7fc34b004590] bci=[-1,0,4] rc=2 vc=17 vn=- li=- udi=- nc=0
n6n       treetop                                                                             [0x7fc34b004680] bci=[-1,0,4] rc=0 vc=17 vn=- li=- udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ]                          [0x7fc34b004630] bci=[-1,0,4] rc=4 vc=17 vn=- li=- udi=- nc=1
n3n           ==>loadaddr
n9n       astore  <pending push temp 0>[#384  Auto] [flags 0x7 0x800 ]                        [0x7fc34b004770] bci=[-1,4,4] rc=0 vc=17 vn=- li=- udi=- nc=1
n5n         ==>new
n8n       ResolveAndNULLCHK on n5n [#32]                                                      [0x7fc34b004720] bci=[-1,4,4] rc=0 vc=17 vn=- li=- udi=- nc=1
n7n         call  BRandom.<init>()V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ]  [0x7fc34b0046d0] bci=[-1,4,4] rc=1 vc=17 vn=- li=- udi=- nc=1
n5n           ==>new
n12n      astore  <auto slot 1>[#385  Auto] [flags 0x7 0x0 ]                                  [0x7fc34b004860] bci=[-1,7,4] rc=0 vc=17 vn=- li=- udi=- nc=1
n5n         ==>new
n14n      ResolveCHK [#314]                                                                   [0x7fc34b004900] bci=[-1,8,5] rc=0 vc=17 vn=- li=- udi=- nc=1
n13n        aload  java/lang/System.out Ljava/io/PrintStream;[#386  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ]  [0x7fc34b0048b0] bci=[-1,8,5] rc=4 vc=17 vn=- li=- udi=- nc=0
n19n      astore  <pending push temp 0>[#384  Auto] [flags 0x7 0x800 ]                        [0x7fc34b004a90] bci=[-1,12,5] rc=0 vc=17 vn=- li=- udi=- nc=1
n13n        ==>aload
n18n      ResolveAndNULLCHK on n15n [#32]                                                     [0x7fc34b004a40] bci=[-1,12,5] rc=0 vc=17 vn=- li=- udi=- nc=1
n17n        acalli  BRandom.getP()QBPoint;[#387  unresolved virtual Method] [flags 0x400 0x0 ]  [0x7fc34b0049f0] bci=[-1,12,5] rc=4 vc=17 vn=- li=- udi=- nc=2
n16n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]                         [0x7fc34b0049a0] bci=[-1,12,5] rc=1 vc=17 vn=- li=- udi=- nc=1
n15n            aload  <auto slot 1>[#385  Auto] [flags 0x7 0x0 ]                             [0x7fc34b004950] bci=[-1,11,5] rc=2 vc=17 vn=- li=- udi=- nc=0
n15n          ==>aload
n20n      astore  <pending push temp 1>[#388  Auto] [flags 0x7 0x800 ]                        [0x7fc34b004ae0] bci=[-1,12,5] rc=0 vc=17 vn=- li=- udi=- nc=1
n17n        ==>acalli
n25n      ResolveAndNULLCHK on n17n [#32]                                                     [0x7fc34b004c70] bci=[-1,15,5] rc=0 vc=17 vn=- li=- udi=- nc=1
n24n        icalli  BPoint.getX()I[#389  unresolved virtual Method] [flags 0x400 0x0 ]        [0x7fc34b004c20] bci=[-1,15,5] rc=3 vc=17 vn=- li=- udi=- nc=2
n23n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]                         [0x7fc34b004bd0] bci=[-1,15,5] rc=1 vc=17 vn=- li=- udi=- nc=1
n17n            ==>acalli
n17n          ==>acalli
n26n      istore  <pending push temp 1>[#390  Auto] [flags 0x3 0x800 ]                        [0x7fc34b004cc0] bci=[-1,15,5] rc=0 vc=17 vn=- li=- udi=- nc=1
n24n        ==>icalli
n31n      ResolveAndNULLCHK on n13n [#32]                                                     [0x7fc34b004e50] bci=[-1,18,5] rc=0 vc=17 vn=- li=- udi=- nc=1
n30n        calli  java/io/PrintStream.println(I)V[#391  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7fc34b004e00] bci=[-1,18,5] rc=1 vc=17 vn=- li=- udi=- nc=3 flg=0x20
n29n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]                         [0x7fc34b004db0] bci=[-1,18,5] rc=1 vc=17 vn=- li=- udi=- nc=1
n13n            ==>aload
n13n          ==>aload
n24n          ==>icalli
n34n      return                                                                              [0x7fc34b004f40] bci=[-1,21,6] rc=0 vc=17 vn=- li=- udi=- nc=0
n2n       BBEnd </block_2> =====                                                              [0x7fc34b004540] bci=[-1,21,6] rc=0 vc=17 vn=- li=- udi=- nc=0

n37n      BBStart <block_3> (freq 0) (catches ...) (OSR handler) (cold)                       [0x7fc34b005030] bci=[-1,0,4] rc=0 vc=19 vn=- li=- udi=- nc=0
n38n      BBEnd </block_3> (cold) =====                                                       [0x7fc34b005080] bci=[-1,0,4] rc=0 vc=17 vn=- li=- udi=- nc=0

n35n      BBStart <block_4> (freq 0) (cold)                                                   [0x7fc34b004f90] bci=[-1,0,4] rc=0 vc=19 vn=- li=- udi=- nc=0
n57n      treetop                                                                             [0x7fc34b0a0190] bci=[-1,0,4] rc=0 vc=19 vn=- li=- udi=- nc=1
n56n        call  prepareForOSR[#55  helper Method] [flags 0x400 0x0 ] ()                     [0x7fc34b0a0140] bci=[-1,0,4] rc=1 vc=19 vn=- li=- udi=- nc=17 flg=0x20
n39n          loadaddr  vmThread[#392  MethodMeta] [flags 0x200 0x0 ]                         [0x7fc34b0050d0] bci=[-1,0,4] rc=1 vc=19 vn=- li=- udi=- nc=0
n40n          iconst -1                                                                       [0x7fc34b005120] bci=[-1,0,4] rc=1 vc=19 vn=- li=- udi=- nc=0
n41n          aload  <pending push temp 0>[#384  Auto] [flags 0x7 0x800 ]                     [0x7fc34b005170] bci=[-1,0,4] rc=1 vc=19 vn=- li=- udi=- nc=0
n42n          iconst 384                                                                      [0x7fc34b0051c0] bci=[-1,0,4] rc=1 vc=19 vn=- li=- udi=- nc=0
n43n          iconst -1                                                                       [0x7fc34b005210] bci=[-1,0,4] rc=1 vc=19 vn=- li=- udi=- nc=0
n44n          iload  <pending push temp 1>[#390  Auto] [flags 0x3 0x800 ]                     [0x7fc34b005260] bci=[-1,0,4] rc=1 vc=19 vn=- li=- udi=- nc=0
n45n          iconst 390                                                                      [0x7fc34b0052b0] bci=[-1,0,4] rc=1 vc=19 vn=- li=- udi=- nc=0
n46n          iconst 0                                                                        [0x7fc34b005300] bci=[-1,0,4] rc=1 vc=19 vn=- li=- udi=- nc=0
n47n          aload  <pending push temp 1>[#388  Auto] [flags 0x7 0x800 ]                     [0x7fc34b005350] bci=[-1,0,4] rc=1 vc=19 vn=- li=- udi=- nc=0
n48n          iconst 388                                                                      [0x7fc34b0053a0] bci=[-1,0,4] rc=1 vc=19 vn=- li=- udi=- nc=0
n49n          iconst 1                                                                        [0x7fc34b0053f0] bci=[-1,0,4] rc=1 vc=19 vn=- li=- udi=- nc=0
n50n          aload  <parm 0 [Ljava/lang/String;>[#381  Parm] [flags 0x40000107 0x0 ]         [0x7fc34b005440] bci=[-1,0,4] rc=1 vc=19 vn=- li=- udi=- nc=0
n51n          iconst 381                                                                      [0x7fc34b005490] bci=[-1,0,4] rc=1 vc=19 vn=- li=- udi=- nc=0
n52n          iconst -1                                                                       [0x7fc34b0a0000] bci=[-1,0,4] rc=1 vc=19 vn=- li=- udi=- nc=0
n53n          aload  <auto slot 1>[#385  Auto] [flags 0x7 0x0 ]                               [0x7fc34b0a0050] bci=[-1,0,4] rc=1 vc=19 vn=- li=- udi=- nc=0
n54n          iconst 385                                                                      [0x7fc34b0a00a0] bci=[-1,0,4] rc=1 vc=19 vn=- li=- udi=- nc=0
n55n          iconst -1                                                                       [0x7fc34b0a00f0] bci=[-1,0,4] rc=1 vc=19 vn=- li=- udi=- nc=0
n59n      igoto                                                                               [0x7fc34b0a0230] bci=[-1,0,4] rc=0 vc=19 vn=- li=- udi=- nc=1
n58n        aload  osrReturnAddress[#340  MethodMeta +2408] [flags 0x10207 0x0 ]              [0x7fc34b0a01e0] bci=[-1,0,4] rc=1 vc=19 vn=- li=- udi=- nc=0
n36n      BBEnd </block_4> (cold)                                                             [0x7fc34b004fe0] bci=[-1,0,4] rc=0 vc=17 vn=- li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Symbol References (incremental):
--------------------------------
#393:  java/lang/String[ Static] [flags 0x18307 0x0 ] [0x7fc34b096b80] (Address)

Number of nodes = 51, symRefCount = 394
</trees>

<cfg>
         0 [0x7fc34b022230] entry
                 in        = []
                 out       = [2(0) ]
                 exception in  = []
                 exception out = []
         1 [0x7fc34b022140] exit
                 in        = [4(0) 2(0) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7fc34b050170] BBStart at 0x7fc34b0044f0
                 in        = [0(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = [3(0) ]
         3 [0x7fc34b0901b0] BBStart at 0x7fc34b005030, frequency = 0
                 in        = []
                 out       = [4(0) ]
                 exception in  = [2(0) ]
                 exception out = []
         4 [0x7fc34b090080] BBStart at 0x7fc34b004f90, frequency = 0
                 in        = [3(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []

</cfg>
<knownObjectTable size="1"> // 00007FC34B00B9E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

<optimization id=20 name=osrExceptionEdgeRemoval method=BT4.main([Ljava/lang/String;)V>
Performing 20: osrExceptionEdgeRemoval
[     1] O^O OSR LIVE RANGE ANALYSIS: : Remove redundant exception edge from block_2 at [00007FC34B050170] to OSR catch block_3 at [00007FC34B0901B0]
<trees
	title="Trees after osrExceptionEdgeRemoval"
	method="BT4.main([Ljava/lang/String;)V"
	hotness="warm">

Trees after osrExceptionEdgeRemoval: for BT4.main([Ljava/lang/String;)V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n1n       BBStart <block_2>                                                                   [0x7fc34b0044f0] bci=[-1,0,4] rc=0 vc=17 vn=- li=- udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7fc34b0045e0] bci=[-1,0,4] rc=0 vc=17 vn=- li=- udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7fc34b004590] bci=[-1,0,4] rc=2 vc=17 vn=- li=- udi=- nc=0
n6n       treetop                                                                             [0x7fc34b004680] bci=[-1,0,4] rc=0 vc=17 vn=- li=- udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ]                          [0x7fc34b004630] bci=[-1,0,4] rc=4 vc=17 vn=- li=- udi=- nc=1
n3n           ==>loadaddr
n9n       astore  <pending push temp 0>[#384  Auto] [flags 0x7 0x800 ]                        [0x7fc34b004770] bci=[-1,4,4] rc=0 vc=17 vn=- li=- udi=- nc=1
n5n         ==>new
n8n       ResolveAndNULLCHK on n5n [#32]                                                      [0x7fc34b004720] bci=[-1,4,4] rc=0 vc=17 vn=- li=- udi=- nc=1
n7n         call  BRandom.<init>()V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ]  [0x7fc34b0046d0] bci=[-1,4,4] rc=1 vc=17 vn=- li=- udi=- nc=1
n5n           ==>new
n12n      astore  <auto slot 1>[#385  Auto] [flags 0x7 0x0 ]                                  [0x7fc34b004860] bci=[-1,7,4] rc=0 vc=17 vn=- li=- udi=- nc=1
n5n         ==>new
n14n      ResolveCHK [#314]                                                                   [0x7fc34b004900] bci=[-1,8,5] rc=0 vc=17 vn=- li=- udi=- nc=1
n13n        aload  java/lang/System.out Ljava/io/PrintStream;[#386  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ]  [0x7fc34b0048b0] bci=[-1,8,5] rc=4 vc=17 vn=- li=- udi=- nc=0
n19n      astore  <pending push temp 0>[#384  Auto] [flags 0x7 0x800 ]                        [0x7fc34b004a90] bci=[-1,12,5] rc=0 vc=17 vn=- li=- udi=- nc=1
n13n        ==>aload
n18n      ResolveAndNULLCHK on n15n [#32]                                                     [0x7fc34b004a40] bci=[-1,12,5] rc=0 vc=17 vn=- li=- udi=- nc=1
n17n        acalli  BRandom.getP()QBPoint;[#387  unresolved virtual Method] [flags 0x400 0x0 ]  [0x7fc34b0049f0] bci=[-1,12,5] rc=4 vc=17 vn=- li=- udi=- nc=2
n16n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]                         [0x7fc34b0049a0] bci=[-1,12,5] rc=1 vc=17 vn=- li=- udi=- nc=1
n15n            aload  <auto slot 1>[#385  Auto] [flags 0x7 0x0 ]                             [0x7fc34b004950] bci=[-1,11,5] rc=2 vc=17 vn=- li=- udi=- nc=0
n15n          ==>aload
n20n      astore  <pending push temp 1>[#388  Auto] [flags 0x7 0x800 ]                        [0x7fc34b004ae0] bci=[-1,12,5] rc=0 vc=17 vn=- li=- udi=- nc=1
n17n        ==>acalli
n25n      ResolveAndNULLCHK on n17n [#32]                                                     [0x7fc34b004c70] bci=[-1,15,5] rc=0 vc=17 vn=- li=- udi=- nc=1
n24n        icalli  BPoint.getX()I[#389  unresolved virtual Method] [flags 0x400 0x0 ]        [0x7fc34b004c20] bci=[-1,15,5] rc=3 vc=17 vn=- li=- udi=- nc=2
n23n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]                         [0x7fc34b004bd0] bci=[-1,15,5] rc=1 vc=17 vn=- li=- udi=- nc=1
n17n            ==>acalli
n17n          ==>acalli
n26n      istore  <pending push temp 1>[#390  Auto] [flags 0x3 0x800 ]                        [0x7fc34b004cc0] bci=[-1,15,5] rc=0 vc=17 vn=- li=- udi=- nc=1
n24n        ==>icalli
n31n      ResolveAndNULLCHK on n13n [#32]                                                     [0x7fc34b004e50] bci=[-1,18,5] rc=0 vc=17 vn=- li=- udi=- nc=1
n30n        calli  java/io/PrintStream.println(I)V[#391  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7fc34b004e00] bci=[-1,18,5] rc=1 vc=17 vn=- li=- udi=- nc=3 flg=0x20
n29n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]                         [0x7fc34b004db0] bci=[-1,18,5] rc=1 vc=17 vn=- li=- udi=- nc=1
n13n            ==>aload
n13n          ==>aload
n24n          ==>icalli
n34n      return                                                                              [0x7fc34b004f40] bci=[-1,21,6] rc=0 vc=17 vn=- li=- udi=- nc=0
n2n       BBEnd </block_2>                                                                    [0x7fc34b004540] bci=[-1,21,6] rc=0 vc=17 vn=- li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 26, symRefCount = 394
</trees>

<cfg>
         0 [0x7fc34b022230] entry
                 in        = []
                 out       = [2(0) ]
                 exception in  = []
                 exception out = []
         1 [0x7fc34b022140] exit
                 in        = [2(0) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7fc34b050170] BBStart at 0x7fc34b0044f0
                 in        = [0(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []

</cfg>
<knownObjectTable size="1"> // 00007FC34B00B9E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

<optimization id=21 name=jProfilingBlock method=BT4.main([Ljava/lang/String;)V>
Performing 21: jProfilingBlock
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=22 name=virtualGuardTailSplitter method=BT4.main([Ljava/lang/String;)V>
Performing 22: virtualGuardTailSplitter
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=23 name=treeSimplification method=BT4.main([Ljava/lang/String;)V>
Performing 23: treeSimplification
         No transformations done by this pass -- omitting listings
</optimization>

   <optgroup name=cheapGlobalValuePropagationGroup>
<optimization id=29 name=localValuePropagation method=BT4.main([Ljava/lang/String;)V>
Performing 29: localValuePropagation
[     2] O^O VALUE PROPAGATION: Changing ResolveAndNULLCHK node into a ResolveCHK node [00007FC34B004720]
<trees
	title="Trees after localValuePropagation"
	method="BT4.main([Ljava/lang/String;)V"
	hotness="warm">

Trees after localValuePropagation: for BT4.main([Ljava/lang/String;)V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n1n       BBStart <block_2>                                                                   [0x7fc34b0044f0] bci=[-1,0,4] rc=0 vc=26 vn=- li=- udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7fc34b0045e0] bci=[-1,0,4] rc=0 vc=26 vn=- li=- udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7fc34b004590] bci=[-1,0,4] rc=2 vc=26 vn=- li=- udi=- nc=0
n6n       treetop                                                                             [0x7fc34b004680] bci=[-1,0,4] rc=0 vc=26 vn=- li=- udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 sharedMemory )     [0x7fc34b004630] bci=[-1,0,4] rc=4 vc=26 vn=- li=- udi=- nc=1 flg=0x4
n3n           ==>loadaddr
n9n       astore  <pending push temp 0>[#384  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7fc34b004770] bci=[-1,4,4] rc=0 vc=26 vn=- li=- udi=- nc=1 flg=0x4
n5n         ==>new
n8n       ResolveCHK [#32]                                                                    [0x7fc34b004720] bci=[-1,4,4] rc=0 vc=26 vn=- li=- udi=- nc=1
n7n         call  BRandom.<init>()V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ]  [0x7fc34b0046d0] bci=[-1,4,4] rc=1 vc=26 vn=- li=- udi=- nc=1
n5n           ==>new
n12n      astore  <auto slot 1>[#385  Auto] [flags 0x7 0x0 ] (X!=0 sharedMemory )             [0x7fc34b004860] bci=[-1,7,4] rc=0 vc=26 vn=- li=- udi=- nc=1 flg=0x4
n5n         ==>new
n14n      ResolveCHK [#314]                                                                   [0x7fc34b004900] bci=[-1,8,5] rc=0 vc=26 vn=- li=- udi=- nc=1
n13n        aload  java/lang/System.out Ljava/io/PrintStream;[#386  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7fc34b0048b0] bci=[-1,8,5] rc=4 vc=26 vn=- li=- udi=- nc=0 flg=0x100
n19n      astore  <pending push temp 0>[#384  Auto] [flags 0x7 0x800 ]                        [0x7fc34b004a90] bci=[-1,12,5] rc=0 vc=26 vn=- li=- udi=- nc=1
n13n        ==>aload
n18n      ResolveAndNULLCHK on n15n [#32]                                                     [0x7fc34b004a40] bci=[-1,12,5] rc=0 vc=26 vn=- li=- udi=- nc=1
n17n        acalli  BRandom.getP()QBPoint;[#387  unresolved virtual Method] [flags 0x400 0x0 ] (X>=0 sharedMemory )  [0x7fc34b0049f0] bci=[-1,12,5] rc=4 vc=26 vn=- li=- udi=- nc=2 flg=0x100
n16n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]                         [0x7fc34b0049a0] bci=[-1,12,5] rc=1 vc=26 vn=- li=- udi=- nc=1
n15n            aload  <auto slot 1>[#385  Auto] [flags 0x7 0x0 ] (X>=0 sharedMemory )        [0x7fc34b004950] bci=[-1,11,5] rc=2 vc=26 vn=- li=- udi=- nc=0 flg=0x100
n15n          ==>aload
n20n      astore  <pending push temp 1>[#388  Auto] [flags 0x7 0x800 ]                        [0x7fc34b004ae0] bci=[-1,12,5] rc=0 vc=26 vn=- li=- udi=- nc=1
n17n        ==>acalli
n25n      ResolveAndNULLCHK on n17n [#32]                                                     [0x7fc34b004c70] bci=[-1,15,5] rc=0 vc=26 vn=- li=- udi=- nc=1
n24n        icalli  BPoint.getX()I[#389  unresolved virtual Method] [flags 0x400 0x0 ]        [0x7fc34b004c20] bci=[-1,15,5] rc=3 vc=26 vn=- li=- udi=- nc=2
n23n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b004bd0] bci=[-1,15,5] rc=1 vc=26 vn=- li=- udi=- nc=1 flg=0x4
n17n            ==>acalli
n17n          ==>acalli
n26n      istore  <pending push temp 1>[#390  Auto] [flags 0x3 0x800 ]                        [0x7fc34b004cc0] bci=[-1,15,5] rc=0 vc=26 vn=- li=- udi=- nc=1
n24n        ==>icalli
n31n      ResolveAndNULLCHK on n13n [#32]                                                     [0x7fc34b004e50] bci=[-1,18,5] rc=0 vc=26 vn=- li=- udi=- nc=1
n30n        calli  java/io/PrintStream.println(I)V[#391  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7fc34b004e00] bci=[-1,18,5] rc=1 vc=26 vn=- li=- udi=- nc=3 flg=0x20
n29n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b004db0] bci=[-1,18,5] rc=1 vc=26 vn=- li=- udi=- nc=1 flg=0x4
n13n            ==>aload
n13n          ==>aload
n24n          ==>icalli
n34n      return                                                                              [0x7fc34b004f40] bci=[-1,21,6] rc=0 vc=26 vn=- li=- udi=- nc=0
n2n       BBEnd </block_2>                                                                    [0x7fc34b004540] bci=[-1,21,6] rc=0 vc=25 vn=- li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 26, symRefCount = 394
</trees>

<cfg>
         0 [0x7fc34b022230] entry
                 in        = []
                 out       = [2(0) ]
                 exception in  = []
                 exception out = []
         1 [0x7fc34b022140] exit
                 in        = [2(0) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7fc34b050170] BBStart at 0x7fc34b0044f0
                 in        = [0(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []

</cfg>
<knownObjectTable size="1"> // 00007FC34B00B9E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

      <optgroup name=cheapObjectAllocationGroup>
         <optgroup name=eachEscapeAnalysisPassGroup>
<optimization id=31 name=preEscapeAnalysis method=BT4.main([Ljava/lang/String;)V>
Performing 31: preEscapeAnalysis
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=32 name=escapeAnalysis method=BT4.main([Ljava/lang/String;)V>
Performing 32: escapeAnalysis
            (Doing structural analysis)
            (Building use/def info)
         PREPARTITION VN   (Building value number info)
<trees
	title="Trees after escapeAnalysis"
	method="BT4.main([Ljava/lang/String;)V"
	hotness="warm">

Trees after escapeAnalysis: for BT4.main([Ljava/lang/String;)V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n1n       BBStart <block_2> (freq 10000)                                                      [0x7fc34b0044f0] bci=[-1,0,4] rc=0 vc=35 vn=10 li=- udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7fc34b0045e0] bci=[-1,0,4] rc=0 vc=35 vn=12 li=- udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7fc34b004590] bci=[-1,0,4] rc=2 vc=35 vn=11 li=- udi=- nc=0
n6n       treetop                                                                             [0x7fc34b004680] bci=[-1,0,4] rc=0 vc=35 vn=14 li=- udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 sharedMemory )     [0x7fc34b004630] bci=[-1,0,4] rc=4 vc=35 vn=2 li=- udi=- nc=1 flg=0x4
n3n           ==>loadaddr
n9n       astore  <pending push temp 0>[#384  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7fc34b004770] bci=[-1,4,4] rc=0 vc=35 vn=2 li=- udi=1 nc=1 flg=0x4
n5n         ==>new
n8n       ResolveCHK [#32]                                                                    [0x7fc34b004720] bci=[-1,4,4] rc=0 vc=35 vn=16 li=- udi=- nc=1
n7n         call  BRandom.<init>()V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ]  [0x7fc34b0046d0] bci=[-1,4,4] rc=1 vc=35 vn=15 li=- udi=- nc=1
n5n           ==>new
n12n      astore  <auto slot 1>[#385  Auto] [flags 0x7 0x0 ] (X!=0 sharedMemory )             [0x7fc34b004860] bci=[-1,7,4] rc=0 vc=35 vn=2 li=1 udi=2 nc=1 flg=0x4
n5n         ==>new
n14n      ResolveCHK [#314]                                                                   [0x7fc34b004900] bci=[-1,8,5] rc=0 vc=35 vn=18 li=- udi=- nc=1
n13n        aload  java/lang/System.out Ljava/io/PrintStream;[#386  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7fc34b0048b0] bci=[-1,8,5] rc=4 vc=35 vn=3 li=- udi=- nc=0 flg=0x100
n19n      astore  <pending push temp 0>[#384  Auto] [flags 0x7 0x800 ]                        [0x7fc34b004a90] bci=[-1,12,5] rc=0 vc=35 vn=3 li=- udi=3 nc=1
n13n        ==>aload
n18n      ResolveAndNULLCHK on n15n [#32]                                                     [0x7fc34b004a40] bci=[-1,12,5] rc=0 vc=35 vn=20 li=- udi=- nc=1
n17n        acalli  BRandom.getP()QBPoint;[#387  unresolved virtual Method] [flags 0x400 0x0 ] (X>=0 sharedMemory )  [0x7fc34b0049f0] bci=[-1,12,5] rc=4 vc=35 vn=5 li=- udi=- nc=2 flg=0x100
n16n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]                         [0x7fc34b0049a0] bci=[-1,12,5] rc=1 vc=35 vn=4 li=- udi=- nc=1
n15n            aload  <auto slot 1>[#385  Auto] [flags 0x7 0x0 ] (X>=0 sharedMemory )        [0x7fc34b004950] bci=[-1,11,5] rc=2 vc=35 vn=2 li=2 udi=6 nc=0 flg=0x100
n15n          ==>aload
n20n      astore  <pending push temp 1>[#388  Auto] [flags 0x7 0x800 ]                        [0x7fc34b004ae0] bci=[-1,12,5] rc=0 vc=35 vn=5 li=- udi=4 nc=1
n17n        ==>acalli
n25n      ResolveAndNULLCHK on n17n [#32]                                                     [0x7fc34b004c70] bci=[-1,15,5] rc=0 vc=35 vn=22 li=- udi=- nc=1
n24n        icalli  BPoint.getX()I[#389  unresolved virtual Method] [flags 0x400 0x0 ]        [0x7fc34b004c20] bci=[-1,15,5] rc=3 vc=35 vn=7 li=- udi=- nc=2
n23n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b004bd0] bci=[-1,15,5] rc=1 vc=35 vn=6 li=- udi=- nc=1 flg=0x4
n17n            ==>acalli
n17n          ==>acalli
n26n      istore  <pending push temp 1>[#390  Auto] [flags 0x3 0x800 ]                        [0x7fc34b004cc0] bci=[-1,15,5] rc=0 vc=35 vn=7 li=- udi=5 nc=1
n24n        ==>icalli
n31n      ResolveAndNULLCHK on n13n [#32]                                                     [0x7fc34b004e50] bci=[-1,18,5] rc=0 vc=35 vn=24 li=- udi=- nc=1
n30n        calli  java/io/PrintStream.println(I)V[#391  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7fc34b004e00] bci=[-1,18,5] rc=1 vc=35 vn=23 li=- udi=- nc=3 flg=0x20
n29n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b004db0] bci=[-1,18,5] rc=1 vc=35 vn=8 li=- udi=- nc=1 flg=0x4
n13n            ==>aload
n13n          ==>aload
n24n          ==>icalli
n34n      return                                                                              [0x7fc34b004f40] bci=[-1,21,6] rc=0 vc=35 vn=25 li=- udi=- nc=0
n2n       BBEnd </block_2>                                                                    [0x7fc34b004540] bci=[-1,21,6] rc=0 vc=35 vn=26 li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 26, symRefCount = 394
</trees>

<cfg>
         0 [0x7fc34b022230] entry
                 in        = []
                 out       = [2(10000) ]
                 exception in  = []
                 exception out = []
         1 [0x7fc34b022140] exit
                 in        = [2(10000) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7fc34b050170] BBStart at 0x7fc34b0044f0, frequency = 10000
                 in        = [0(10000) ]
                 out       = [1(10000) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7fc34b020190] Acyclic region
         Subgraph: (* = exit edge)
               (0x7fc34b020260:0x7fc34b020130)0 --> 2(0x7fc34b0202f0)
               (0x7fc34b0202f0:0x7fc34b020070)2 --> 1(0x7fc34b0203d0)
               (0x7fc34b0203d0:0x7fc34b0200d0)1 -->
         0 [0x7fc34b020130] Block
         2 [0x7fc34b020070] Block
         1 [0x7fc34b0200d0] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007FC34B00B9E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

<optimization id=33 name=postEscapeAnalysis method=BT4.main([Ljava/lang/String;)V>
Performing 33: postEscapeAnalysis
         No transformations done by this pass -- omitting listings
</optimization>

         </optgroup>
<optimization id=35 name=explicitNewInitialization method=BT4.main([Ljava/lang/String;)V>
Performing 35: explicitNewInitialization
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=36 name=localDeadStoreElimination method=BT4.main([Ljava/lang/String;)V>
Performing 36: localDeadStoreElimination
         No transformations done by this pass -- omitting listings
</optimization>

      </optgroup>
<optimization id=39 name=catchBlockRemoval method=BT4.main([Ljava/lang/String;)V>
Performing 39: catchBlockRemoval
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=40 name=osrExceptionEdgeRemoval method=BT4.main([Ljava/lang/String;)V>
Performing 40: osrExceptionEdgeRemoval
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=45 name=CFGSimplification method=BT4.main([Ljava/lang/String;)V>
Performing 45: CFGSimplification
         No transformations done by this pass -- omitting listings
</optimization>

   </optgroup>
<optimization id=47 name=dataAccessAccelerator method=BT4.main([Ljava/lang/String;)V>
Performing 47: dataAccessAccelerator
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=51 name=blockSplitter method=BT4.main([Ljava/lang/String;)V>
Performing 51: blockSplitter
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=52 name=treeSimplification method=BT4.main([Ljava/lang/String;)V>
Performing 52: treeSimplification
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=53 name=virtualGuardHeadMerger method=BT4.main([Ljava/lang/String;)V>
Performing 53: virtualGuardHeadMerger
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=54 name=recognizedCallTransformer method=BT4.main([Ljava/lang/String;)V>
Performing 54: recognizedCallTransformer
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=55 name=basicBlockExtension method=BT4.main([Ljava/lang/String;)V>
Performing 55: basicBlockExtension
[     3] O^O ORDER BLOCKS:  Propagating coldness information
[     4] O^O ORDER BLOCKS:  choose best successor for block_0 (freq:10000)
[     5] O^O ORDER BLOCKS:  choose best successor for block_2 (freq:10000)
[     6] O^O ORDER BLOCKS:  choose best successor for block_1 (freq:10000)
<trees
	title="Trees after basicBlockExtension"
	method="BT4.main([Ljava/lang/String;)V"
	hotness="warm">

Trees after basicBlockExtension: for BT4.main([Ljava/lang/String;)V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n1n       BBStart <block_2> (freq 10000)                                                      [0x7fc34b0044f0] bci=[-1,0,4] rc=0 vc=60 vn=10 li=- udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7fc34b0045e0] bci=[-1,0,4] rc=0 vc=60 vn=12 li=- udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7fc34b004590] bci=[-1,0,4] rc=2 vc=60 vn=11 li=- udi=- nc=0
n6n       treetop                                                                             [0x7fc34b004680] bci=[-1,0,4] rc=0 vc=60 vn=14 li=- udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 sharedMemory )     [0x7fc34b004630] bci=[-1,0,4] rc=4 vc=60 vn=2 li=- udi=- nc=1 flg=0x4
n3n           ==>loadaddr
n9n       astore  <pending push temp 0>[#384  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7fc34b004770] bci=[-1,4,4] rc=0 vc=60 vn=2 li=- udi=1 nc=1 flg=0x4
n5n         ==>new
n8n       ResolveCHK [#32]                                                                    [0x7fc34b004720] bci=[-1,4,4] rc=0 vc=60 vn=16 li=- udi=- nc=1
n7n         call  BRandom.<init>()V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ]  [0x7fc34b0046d0] bci=[-1,4,4] rc=1 vc=60 vn=15 li=- udi=- nc=1
n5n           ==>new
n12n      astore  <auto slot 1>[#385  Auto] [flags 0x7 0x0 ] (X!=0 sharedMemory )             [0x7fc34b004860] bci=[-1,7,4] rc=0 vc=60 vn=2 li=- udi=2 nc=1 flg=0x4
n5n         ==>new
n14n      ResolveCHK [#314]                                                                   [0x7fc34b004900] bci=[-1,8,5] rc=0 vc=60 vn=18 li=- udi=- nc=1
n13n        aload  java/lang/System.out Ljava/io/PrintStream;[#386  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7fc34b0048b0] bci=[-1,8,5] rc=4 vc=60 vn=3 li=- udi=- nc=0 flg=0x100
n19n      astore  <pending push temp 0>[#384  Auto] [flags 0x7 0x800 ]                        [0x7fc34b004a90] bci=[-1,12,5] rc=0 vc=60 vn=3 li=- udi=3 nc=1
n13n        ==>aload
n18n      ResolveAndNULLCHK on n15n [#32]                                                     [0x7fc34b004a40] bci=[-1,12,5] rc=0 vc=60 vn=20 li=- udi=- nc=1
n17n        acalli  BRandom.getP()QBPoint;[#387  unresolved virtual Method] [flags 0x400 0x0 ] (X>=0 sharedMemory )  [0x7fc34b0049f0] bci=[-1,12,5] rc=4 vc=60 vn=5 li=- udi=- nc=2 flg=0x100
n16n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]                         [0x7fc34b0049a0] bci=[-1,12,5] rc=1 vc=60 vn=4 li=- udi=- nc=1
n15n            aload  <auto slot 1>[#385  Auto] [flags 0x7 0x0 ] (X>=0 sharedMemory )        [0x7fc34b004950] bci=[-1,11,5] rc=2 vc=60 vn=2 li=- udi=6 nc=0 flg=0x100
n15n          ==>aload
n20n      astore  <pending push temp 1>[#388  Auto] [flags 0x7 0x800 ]                        [0x7fc34b004ae0] bci=[-1,12,5] rc=0 vc=60 vn=5 li=- udi=4 nc=1
n17n        ==>acalli
n25n      ResolveAndNULLCHK on n17n [#32]                                                     [0x7fc34b004c70] bci=[-1,15,5] rc=0 vc=60 vn=22 li=- udi=- nc=1
n24n        icalli  BPoint.getX()I[#389  unresolved virtual Method] [flags 0x400 0x0 ]        [0x7fc34b004c20] bci=[-1,15,5] rc=3 vc=60 vn=7 li=- udi=- nc=2
n23n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b004bd0] bci=[-1,15,5] rc=1 vc=60 vn=6 li=- udi=- nc=1 flg=0x4
n17n            ==>acalli
n17n          ==>acalli
n26n      istore  <pending push temp 1>[#390  Auto] [flags 0x3 0x800 ]                        [0x7fc34b004cc0] bci=[-1,15,5] rc=0 vc=60 vn=7 li=- udi=5 nc=1
n24n        ==>icalli
n31n      ResolveAndNULLCHK on n13n [#32]                                                     [0x7fc34b004e50] bci=[-1,18,5] rc=0 vc=60 vn=24 li=- udi=- nc=1
n30n        calli  java/io/PrintStream.println(I)V[#391  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7fc34b004e00] bci=[-1,18,5] rc=1 vc=60 vn=23 li=- udi=- nc=3 flg=0x20
n29n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b004db0] bci=[-1,18,5] rc=1 vc=60 vn=8 li=- udi=- nc=1 flg=0x4
n13n            ==>aload
n13n          ==>aload
n24n          ==>icalli
n34n      return                                                                              [0x7fc34b004f40] bci=[-1,21,6] rc=0 vc=60 vn=25 li=- udi=- nc=0
n2n       BBEnd </block_2>                                                                    [0x7fc34b004540] bci=[-1,21,6] rc=0 vc=60 vn=26 li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 26, symRefCount = 394
</trees>

<cfg>
         0 [0x7fc34b022230] entry
                 in        = []
                 out       = [2(10000) ]
                 exception in  = []
                 exception out = []
         1 [0x7fc34b022140] exit
                 in        = [2(10000) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7fc34b050170] BBStart at 0x7fc34b0044f0, frequency = 10000
                 in        = [0(10000) ]
                 out       = [1(10000) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7fc34b020190] Acyclic region
         Subgraph: (* = exit edge)
               (0x7fc34b020260:0x7fc34b020130)0 --> 2(0x7fc34b0202f0)
               (0x7fc34b0202f0:0x7fc34b020070)2 --> 1(0x7fc34b0203d0)
               (0x7fc34b0203d0:0x7fc34b0200d0)1 -->
         0 [0x7fc34b020130] Block
         2 [0x7fc34b020070] Block
         1 [0x7fc34b0200d0] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007FC34B00B9E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

   <optgroup name=localValuePropagationGroup>
<optimization id=56 name=localCSE method=BT4.main([Ljava/lang/String;)V>
Performing 56: localCSE
[     7] O^O LOCAL COMMON SUBEXPRESSION ELIMINATION:    Local Common Subexpression Elimination propagating local #385 in node : 00007FC34B004950 PARENT : 00007FC34B0049A0 from node 00007FC34B004860
         O^O LOCAL COMMON SUBEXPRESSION ELIMINATION:    Rhs of store def node : 00007FC34B004630
[     8] O^O LOCAL COMMON SUBEXPRESSION ELIMINATION:    Local Common Subexpression Elimination commoning node : 00007FC34B004950 again
              (Invalidating use/def info)
<trees
	title="Trees after localCSE"
	method="BT4.main([Ljava/lang/String;)V"
	hotness="warm">

Trees after localCSE: for BT4.main([Ljava/lang/String;)V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n1n       BBStart <block_2> (freq 10000)                                                      [0x7fc34b0044f0] bci=[-1,0,4] rc=0 vc=60 vn=10 li=- udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7fc34b0045e0] bci=[-1,0,4] rc=0 vc=68 vn=12 li=- udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7fc34b004590] bci=[-1,0,4] rc=2 vc=68 vn=11 li=- udi=- nc=0
n6n       treetop                                                                             [0x7fc34b004680] bci=[-1,0,4] rc=0 vc=68 vn=14 li=- udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 sharedMemory )     [0x7fc34b004630] bci=[-1,0,4] rc=6 vc=68 vn=2 li=- udi=- nc=1 flg=0x4
n3n           ==>loadaddr
n9n       astore  <pending push temp 0>[#384  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7fc34b004770] bci=[-1,4,4] rc=0 vc=68 vn=2 li=- udi=1 nc=1 flg=0x4
n5n         ==>new
n8n       ResolveCHK [#32]                                                                    [0x7fc34b004720] bci=[-1,4,4] rc=0 vc=68 vn=16 li=- udi=- nc=1
n7n         call  BRandom.<init>()V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ]  [0x7fc34b0046d0] bci=[-1,4,4] rc=1 vc=68 vn=15 li=- udi=- nc=1
n5n           ==>new
n12n      astore  <auto slot 1>[#385  Auto] [flags 0x7 0x0 ] (X!=0 sharedMemory )             [0x7fc34b004860] bci=[-1,7,4] rc=0 vc=68 vn=2 li=- udi=2 nc=1 flg=0x4
n5n         ==>new
n14n      ResolveCHK [#314]                                                                   [0x7fc34b004900] bci=[-1,8,5] rc=0 vc=68 vn=18 li=- udi=- nc=1
n13n        aload  java/lang/System.out Ljava/io/PrintStream;[#386  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7fc34b0048b0] bci=[-1,8,5] rc=4 vc=68 vn=3 li=- udi=- nc=0 flg=0x100
n19n      astore  <pending push temp 0>[#384  Auto] [flags 0x7 0x800 ]                        [0x7fc34b004a90] bci=[-1,12,5] rc=0 vc=68 vn=3 li=- udi=3 nc=1
n13n        ==>aload
n18n      ResolveAndNULLCHK on n5n [#32]                                                      [0x7fc34b004a40] bci=[-1,12,5] rc=0 vc=68 vn=20 li=- udi=- nc=1
n17n        acalli  BRandom.getP()QBPoint;[#387  unresolved virtual Method] [flags 0x400 0x0 ] (X>=0 sharedMemory )  [0x7fc34b0049f0] bci=[-1,12,5] rc=4 vc=68 vn=5 li=- udi=- nc=2 flg=0x100
n16n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]                         [0x7fc34b0049a0] bci=[-1,12,5] rc=1 vc=68 vn=4 li=- udi=- nc=1
n5n             ==>new
n5n           ==>new
n20n      astore  <pending push temp 1>[#388  Auto] [flags 0x7 0x800 ]                        [0x7fc34b004ae0] bci=[-1,12,5] rc=0 vc=68 vn=5 li=- udi=4 nc=1
n17n        ==>acalli
n25n      ResolveAndNULLCHK on n17n [#32]                                                     [0x7fc34b004c70] bci=[-1,15,5] rc=0 vc=68 vn=22 li=- udi=- nc=1
n24n        icalli  BPoint.getX()I[#389  unresolved virtual Method] [flags 0x400 0x0 ]        [0x7fc34b004c20] bci=[-1,15,5] rc=3 vc=68 vn=7 li=- udi=- nc=2
n23n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b004bd0] bci=[-1,15,5] rc=1 vc=68 vn=6 li=- udi=- nc=1 flg=0x4
n17n            ==>acalli
n17n          ==>acalli
n26n      istore  <pending push temp 1>[#390  Auto] [flags 0x3 0x800 ]                        [0x7fc34b004cc0] bci=[-1,15,5] rc=0 vc=68 vn=7 li=- udi=5 nc=1
n24n        ==>icalli
n31n      ResolveAndNULLCHK on n13n [#32]                                                     [0x7fc34b004e50] bci=[-1,18,5] rc=0 vc=68 vn=24 li=- udi=- nc=1
n30n        calli  java/io/PrintStream.println(I)V[#391  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7fc34b004e00] bci=[-1,18,5] rc=1 vc=68 vn=23 li=- udi=- nc=3 flg=0x20
n29n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b004db0] bci=[-1,18,5] rc=1 vc=68 vn=8 li=- udi=- nc=1 flg=0x4
n13n            ==>aload
n13n          ==>aload
n24n          ==>icalli
n34n      return                                                                              [0x7fc34b004f40] bci=[-1,21,6] rc=0 vc=68 vn=25 li=- udi=- nc=0
n2n       BBEnd </block_2>                                                                    [0x7fc34b004540] bci=[-1,21,6] rc=0 vc=68 vn=26 li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 25, symRefCount = 394
</trees>

<cfg>
         0 [0x7fc34b022230] entry
                 in        = []
                 out       = [2(10000) ]
                 exception in  = []
                 exception out = []
         1 [0x7fc34b022140] exit
                 in        = [2(10000) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7fc34b050170] BBStart at 0x7fc34b0044f0, frequency = 10000
                 in        = [0(10000) ]
                 out       = [1(10000) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7fc34b020190] Acyclic region
         Subgraph: (* = exit edge)
               (0x7fc34b020260:0x7fc34b020130)0 --> 2(0x7fc34b0202f0)
               (0x7fc34b0202f0:0x7fc34b020070)2 --> 1(0x7fc34b0203d0)
               (0x7fc34b0203d0:0x7fc34b0200d0)1 -->
         0 [0x7fc34b020130] Block
         2 [0x7fc34b020070] Block
         1 [0x7fc34b0200d0] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007FC34B00B9E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

<optimization id=57 name=localValuePropagation method=BT4.main([Ljava/lang/String;)V>
Performing 57: localValuePropagation
[     9] O^O VALUE PROPAGATION: Changing ResolveAndNULLCHK node into a ResolveCHK node [00007FC34B004A40]
              (Invalidating value number info)
<trees
	title="Trees after localValuePropagation"
	method="BT4.main([Ljava/lang/String;)V"
	hotness="warm">

Trees after localValuePropagation: for BT4.main([Ljava/lang/String;)V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n1n       BBStart <block_2> (freq 10000)                                                      [0x7fc34b0044f0] bci=[-1,0,4] rc=0 vc=70 vn=- li=- udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7fc34b0045e0] bci=[-1,0,4] rc=0 vc=70 vn=- li=- udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7fc34b004590] bci=[-1,0,4] rc=2 vc=70 vn=- li=- udi=- nc=0
n6n       treetop                                                                             [0x7fc34b004680] bci=[-1,0,4] rc=0 vc=70 vn=- li=- udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 sharedMemory )     [0x7fc34b004630] bci=[-1,0,4] rc=6 vc=70 vn=- li=- udi=- nc=1 flg=0x4
n3n           ==>loadaddr
n9n       astore  <pending push temp 0>[#384  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7fc34b004770] bci=[-1,4,4] rc=0 vc=70 vn=- li=- udi=1 nc=1 flg=0x4
n5n         ==>new
n8n       ResolveCHK [#32]                                                                    [0x7fc34b004720] bci=[-1,4,4] rc=0 vc=70 vn=- li=- udi=- nc=1
n7n         call  BRandom.<init>()V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ]  [0x7fc34b0046d0] bci=[-1,4,4] rc=1 vc=70 vn=- li=- udi=- nc=1
n5n           ==>new
n12n      astore  <auto slot 1>[#385  Auto] [flags 0x7 0x0 ] (X!=0 sharedMemory )             [0x7fc34b004860] bci=[-1,7,4] rc=0 vc=70 vn=- li=- udi=2 nc=1 flg=0x4
n5n         ==>new
n14n      ResolveCHK [#314]                                                                   [0x7fc34b004900] bci=[-1,8,5] rc=0 vc=70 vn=- li=- udi=- nc=1
n13n        aload  java/lang/System.out Ljava/io/PrintStream;[#386  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7fc34b0048b0] bci=[-1,8,5] rc=4 vc=70 vn=- li=- udi=- nc=0 flg=0x100
n19n      astore  <pending push temp 0>[#384  Auto] [flags 0x7 0x800 ]                        [0x7fc34b004a90] bci=[-1,12,5] rc=0 vc=70 vn=- li=- udi=3 nc=1
n13n        ==>aload
n18n      ResolveCHK [#32]                                                                    [0x7fc34b004a40] bci=[-1,12,5] rc=0 vc=70 vn=- li=- udi=- nc=1
n17n        acalli  BRandom.getP()QBPoint;[#387  unresolved virtual Method] [flags 0x400 0x0 ] (X>=0 sharedMemory )  [0x7fc34b0049f0] bci=[-1,12,5] rc=4 vc=70 vn=- li=- udi=- nc=2 flg=0x100
n16n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b0049a0] bci=[-1,12,5] rc=1 vc=70 vn=- li=- udi=- nc=1 flg=0x4
n5n             ==>new
n5n           ==>new
n20n      astore  <pending push temp 1>[#388  Auto] [flags 0x7 0x800 ]                        [0x7fc34b004ae0] bci=[-1,12,5] rc=0 vc=70 vn=- li=- udi=4 nc=1
n17n        ==>acalli
n25n      ResolveAndNULLCHK on n17n [#32]                                                     [0x7fc34b004c70] bci=[-1,15,5] rc=0 vc=70 vn=- li=- udi=- nc=1
n24n        icalli  BPoint.getX()I[#389  unresolved virtual Method] [flags 0x400 0x0 ]        [0x7fc34b004c20] bci=[-1,15,5] rc=3 vc=70 vn=- li=- udi=- nc=2
n23n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b004bd0] bci=[-1,15,5] rc=1 vc=70 vn=- li=- udi=- nc=1 flg=0x4
n17n            ==>acalli
n17n          ==>acalli
n26n      istore  <pending push temp 1>[#390  Auto] [flags 0x3 0x800 ]                        [0x7fc34b004cc0] bci=[-1,15,5] rc=0 vc=70 vn=- li=- udi=5 nc=1
n24n        ==>icalli
n31n      ResolveAndNULLCHK on n13n [#32]                                                     [0x7fc34b004e50] bci=[-1,18,5] rc=0 vc=70 vn=- li=- udi=- nc=1
n30n        calli  java/io/PrintStream.println(I)V[#391  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7fc34b004e00] bci=[-1,18,5] rc=1 vc=70 vn=- li=- udi=- nc=3 flg=0x20
n29n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b004db0] bci=[-1,18,5] rc=1 vc=70 vn=- li=- udi=- nc=1 flg=0x4
n13n            ==>aload
n13n          ==>aload
n24n          ==>icalli
n34n      return                                                                              [0x7fc34b004f40] bci=[-1,21,6] rc=0 vc=70 vn=- li=- udi=- nc=0
n2n       BBEnd </block_2>                                                                    [0x7fc34b004540] bci=[-1,21,6] rc=0 vc=69 vn=- li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 25, symRefCount = 394
</trees>

<cfg>
         0 [0x7fc34b022230] entry
                 in        = []
                 out       = [2(10000) ]
                 exception in  = []
                 exception out = []
         1 [0x7fc34b022140] exit
                 in        = [2(10000) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7fc34b050170] BBStart at 0x7fc34b0044f0, frequency = 10000
                 in        = [0(10000) ]
                 out       = [1(10000) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7fc34b020190] Acyclic region
         Subgraph: (* = exit edge)
               (0x7fc34b020260:0x7fc34b020130)0 --> 2(0x7fc34b0202f0)
               (0x7fc34b0202f0:0x7fc34b020070)2 --> 1(0x7fc34b0203d0)
               (0x7fc34b0203d0:0x7fc34b0200d0)1 -->
         0 [0x7fc34b020130] Block
         2 [0x7fc34b020070] Block
         1 [0x7fc34b0200d0] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007FC34B00B9E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

   </optgroup>
<optimization id=60 name=explicitNewInitialization method=BT4.main([Ljava/lang/String;)V>
Performing 60: explicitNewInitialization
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=61 name=arraycopyTransformation method=BT4.main([Ljava/lang/String;)V>
Performing 61: arraycopyTransformation
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=62 name=treeSimplification method=BT4.main([Ljava/lang/String;)V>
Performing 62: treeSimplification
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=63 name=asyncCheckInsertion method=BT4.main([Ljava/lang/String;)V>
Performing 63: asyncCheckInsertion
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=64 name=localCSE method=BT4.main([Ljava/lang/String;)V>
Performing 64: localCSE
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=65 name=treeSimplification method=BT4.main([Ljava/lang/String;)V>
Performing 65: treeSimplification
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=67 name=compactNullChecks method=BT4.main([Ljava/lang/String;)V>
Performing 67: compactNullChecks
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=74 name=dynamicLiteralPool method=BT4.main([Ljava/lang/String;)V>
Performing 74: dynamicLiteralPool
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=76 name=trivialBlockExtension method=BT4.main([Ljava/lang/String;)V>
Performing 76: trivialBlockExtension
         No transformations done by this pass -- omitting listings
</optimization>

   <optgroup name=cheapTacticalGlobalRegisterAllocatorGroup>
<optimization id=86 name=redundantGotoElimination method=BT4.main([Ljava/lang/String;)V>
Performing 86: redundantGotoElimination
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=87 name=tacticalGlobalRegisterAllocator method=BT4.main([Ljava/lang/String;)V>
Performing 87: tacticalGlobalRegisterAllocator
         Weight of candidate (symRef #390 ) is 0
         Weight of candidate (symRef #388 ) is 0
         Weight of candidate (symRef #385 ) is 0
         Weight of candidate (symRef #384 ) is 0
<trees
	title="Trees after tacticalGlobalRegisterAllocator"
	method="BT4.main([Ljava/lang/String;)V"
	hotness="warm">

Trees after tacticalGlobalRegisterAllocator: for BT4.main([Ljava/lang/String;)V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n1n       BBStart <block_2> (freq 10000)                                                      [0x7fc34b0044f0] bci=[-1,0,4] rc=0 vc=83 vn=- li=-1 udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7fc34b0045e0] bci=[-1,0,4] rc=0 vc=83 vn=- li=-1 udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7fc34b004590] bci=[-1,0,4] rc=2 vc=83 vn=- li=-2 udi=- nc=0
n6n       treetop                                                                             [0x7fc34b004680] bci=[-1,0,4] rc=0 vc=83 vn=- li=-1 udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7fc34b004630] bci=[-1,0,4] rc=6 vc=83 vn=- li=-6 udi=- nc=1 flg=0x104
n3n           ==>loadaddr
n9n       astore  <pending push temp 0>[#384  Auto] [flags 0x7 0x800 ] (X!=0 sharedMemory )   [0x7fc34b004770] bci=[-1,4,4] rc=0 vc=83 vn=- li=-1 udi=1 nc=1 flg=0x4
n5n         ==>new
n8n       ResolveCHK [#32]                                                                    [0x7fc34b004720] bci=[-1,4,4] rc=0 vc=83 vn=- li=-1 udi=- nc=1
n7n         call  BRandom.<init>()V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ]  [0x7fc34b0046d0] bci=[-1,4,4] rc=1 vc=83 vn=- li=-1 udi=- nc=1
n5n           ==>new
n12n      astore  <auto slot 1>[#385  Auto] [flags 0x7 0x0 ] (X!=0 sharedMemory )             [0x7fc34b004860] bci=[-1,7,4] rc=0 vc=83 vn=- li=-1 udi=2 nc=1 flg=0x4
n5n         ==>new
n14n      ResolveCHK [#314]                                                                   [0x7fc34b004900] bci=[-1,8,5] rc=0 vc=83 vn=- li=-1 udi=- nc=1
n13n        aload  java/lang/System.out Ljava/io/PrintStream;[#386  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7fc34b0048b0] bci=[-1,8,5] rc=4 vc=83 vn=- li=-4 udi=- nc=0 flg=0x100
n19n      astore  <pending push temp 0>[#384  Auto] [flags 0x7 0x800 ]                        [0x7fc34b004a90] bci=[-1,12,5] rc=0 vc=83 vn=- li=-1 udi=3 nc=1
n13n        ==>aload
n18n      ResolveCHK [#32]                                                                    [0x7fc34b004a40] bci=[-1,12,5] rc=0 vc=83 vn=- li=-1 udi=- nc=1
n17n        acalli  BRandom.getP()QBPoint;[#387  unresolved virtual Method] [flags 0x400 0x0 ] (X>=0 sharedMemory )  [0x7fc34b0049f0] bci=[-1,12,5] rc=4 vc=83 vn=- li=-4 udi=- nc=2 flg=0x100
n16n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b0049a0] bci=[-1,12,5] rc=1 vc=83 vn=- li=-1 udi=- nc=1 flg=0x4
n5n             ==>new
n5n           ==>new
n20n      astore  <pending push temp 1>[#388  Auto] [flags 0x7 0x800 ]                        [0x7fc34b004ae0] bci=[-1,12,5] rc=0 vc=83 vn=- li=-1 udi=4 nc=1
n17n        ==>acalli
n25n      ResolveAndNULLCHK on n17n [#32]                                                     [0x7fc34b004c70] bci=[-1,15,5] rc=0 vc=83 vn=- li=-1 udi=- nc=1
n24n        icalli  BPoint.getX()I[#389  unresolved virtual Method] [flags 0x400 0x0 ]        [0x7fc34b004c20] bci=[-1,15,5] rc=3 vc=83 vn=- li=-3 udi=- nc=2
n23n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b004bd0] bci=[-1,15,5] rc=1 vc=83 vn=- li=-1 udi=- nc=1 flg=0x4
n17n            ==>acalli
n17n          ==>acalli
n26n      istore  <pending push temp 1>[#390  Auto] [flags 0x3 0x800 ]                        [0x7fc34b004cc0] bci=[-1,15,5] rc=0 vc=83 vn=- li=-1 udi=5 nc=1
n24n        ==>icalli
n31n      ResolveAndNULLCHK on n13n [#32]                                                     [0x7fc34b004e50] bci=[-1,18,5] rc=0 vc=83 vn=- li=-1 udi=- nc=1
n30n        calli  java/io/PrintStream.println(I)V[#391  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7fc34b004e00] bci=[-1,18,5] rc=1 vc=83 vn=- li=-1 udi=- nc=3 flg=0x20
n29n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b004db0] bci=[-1,18,5] rc=1 vc=83 vn=- li=-1 udi=- nc=1 flg=0x4
n13n            ==>aload
n13n          ==>aload
n24n          ==>icalli
n34n      return                                                                              [0x7fc34b004f40] bci=[-1,21,6] rc=0 vc=83 vn=- li=- udi=- nc=0
n2n       BBEnd </block_2>                                                                    [0x7fc34b004540] bci=[-1,21,6] rc=0 vc=83 vn=- li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 25, symRefCount = 394
</trees>

<cfg>
         0 [0x7fc34b022230] entry
                 in        = []
                 out       = [2(10000) ]
                 exception in  = []
                 exception out = []
         1 [0x7fc34b022140] exit
                 in        = [2(10000) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7fc34b050170] BBStart at 0x7fc34b0044f0, frequency = 10000
                 in        = [0(10000) ]
                 out       = [1(10000) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7fc34b020190] Acyclic region
         Subgraph: (* = exit edge)
               (0x7fc34b020260:0x7fc34b020130)0 --> 2(0x7fc34b0202f0)
               (0x7fc34b0202f0:0x7fc34b020070)2 --> 1(0x7fc34b0203d0)
               (0x7fc34b0203d0:0x7fc34b0200d0)1 -->
         0 [0x7fc34b020130] Block
         2 [0x7fc34b020070] Block
         1 [0x7fc34b0200d0] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007FC34B00B9E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

   </optgroup>
<optimization id=88 name=jProfilingValue method=BT4.main([Ljava/lang/String;)V>
Performing 88: jProfilingValue mustBeDone
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=89 name=treeLowering method=BT4.main([Ljava/lang/String;)V>
Performing 89: treeLowering mustBeDone
         No transformations done by this pass -- omitting listings
</optimization>

   <optgroup name=globalDeadStoreGroup>
<optimization id=91 name=deadTreesElimination method=BT4.main([Ljava/lang/String;)V>
Performing 91: deadTreesElimination
         No transformations done by this pass -- omitting listings
</optimization>

   </optgroup>
<optimization id=96 name=compactLocals method=BT4.main([Ljava/lang/String;)V>
Performing 96: compactLocals
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=97 name=globalLiveVariablesForGC method=BT4.main([Ljava/lang/String;)V>
Performing 97: globalLiveVariablesForGC
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=100 name=hotFieldMarking method=BT4.main([Ljava/lang/String;)V>
Performing 100: hotFieldMarking
         No transformations done by this pass -- omitting listings
</optimization>

<trees
	title="Post Optimization Trees"
	method="BT4.main([Ljava/lang/String;)V"
	hotness="warm">

Post Optimization Trees: for BT4.main([Ljava/lang/String;)V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n1n       BBStart <block_2> (freq 10000)                                                      [0x7fc34b0044f0] bci=[-1,0,4] rc=0 vc=92 vn=- li=-1 udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7fc34b0045e0] bci=[-1,0,4] rc=0 vc=92 vn=- li=-1 udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7fc34b004590] bci=[-1,0,4] rc=2 vc=92 vn=- li=- udi=- nc=0
n6n       treetop                                                                             [0x7fc34b004680] bci=[-1,0,4] rc=0 vc=92 vn=- li=-1 udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7fc34b004630] bci=[-1,0,4] rc=6 vc=92 vn=- li=- udi=- nc=1 flg=0x104
n3n           ==>loadaddr
n9n       astore  <pending push temp 0>[#384  Auto] [flags 0x4007 0x800 ] (X!=0 sharedMemory )  [0x7fc34b004770] bci=[-1,4,4] rc=0 vc=92 vn=- li=-1 udi=1 nc=1 flg=0x4
n5n         ==>new
n8n       ResolveCHK [#32]                                                                    [0x7fc34b004720] bci=[-1,4,4] rc=0 vc=92 vn=- li=-1 udi=- nc=1
n7n         call  BRandom.<init>()V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ]  [0x7fc34b0046d0] bci=[-1,4,4] rc=1 vc=92 vn=- li=- udi=- nc=1
n5n           ==>new
n12n      astore  <auto slot 1>[#385  Auto] [flags 0x4007 0x0 ] (X!=0 sharedMemory )          [0x7fc34b004860] bci=[-1,7,4] rc=0 vc=92 vn=- li=-1 udi=2 nc=1 flg=0x4
n5n         ==>new
n14n      ResolveCHK [#314]                                                                   [0x7fc34b004900] bci=[-1,8,5] rc=0 vc=92 vn=- li=-1 udi=- nc=1
n13n        aload  java/lang/System.out Ljava/io/PrintStream;[#386  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7fc34b0048b0] bci=[-1,8,5] rc=4 vc=92 vn=- li=- udi=- nc=0 flg=0x100
n19n      astore  <pending push temp 0>[#384  Auto] [flags 0x4007 0x800 ]                     [0x7fc34b004a90] bci=[-1,12,5] rc=0 vc=92 vn=- li=-1 udi=3 nc=1
n13n        ==>aload
n18n      ResolveCHK [#32]                                                                    [0x7fc34b004a40] bci=[-1,12,5] rc=0 vc=92 vn=- li=-1 udi=- nc=1
n17n        acalli  BRandom.getP()QBPoint;[#387  unresolved virtual Method] [flags 0x400 0x0 ] (X>=0 sharedMemory )  [0x7fc34b0049f0] bci=[-1,12,5] rc=4 vc=92 vn=- li=- udi=- nc=2 flg=0x100
n16n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b0049a0] bci=[-1,12,5] rc=1 vc=92 vn=- li=- udi=- nc=1 flg=0x4
n5n             ==>new
n5n           ==>new
n20n      astore  <pending push temp 1>[#388  Auto] [flags 0x4007 0x800 ]                     [0x7fc34b004ae0] bci=[-1,12,5] rc=0 vc=92 vn=- li=-1 udi=4 nc=1
n17n        ==>acalli
n25n      ResolveAndNULLCHK on n17n [#32]                                                     [0x7fc34b004c70] bci=[-1,15,5] rc=0 vc=92 vn=- li=-1 udi=- nc=1
n24n        icalli  BPoint.getX()I[#389  unresolved virtual Method] [flags 0x400 0x0 ]        [0x7fc34b004c20] bci=[-1,15,5] rc=3 vc=92 vn=- li=- udi=- nc=2
n23n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b004bd0] bci=[-1,15,5] rc=1 vc=92 vn=- li=- udi=- nc=1 flg=0x4
n17n            ==>acalli
n17n          ==>acalli
n26n      istore  <pending push temp 1>[#390  Auto] [flags 0x3 0x800 ]                        [0x7fc34b004cc0] bci=[-1,15,5] rc=0 vc=92 vn=- li=-1 udi=5 nc=1
n24n        ==>icalli
n31n      ResolveAndNULLCHK on n13n [#32]                                                     [0x7fc34b004e50] bci=[-1,18,5] rc=0 vc=92 vn=- li=-1 udi=- nc=1
n30n        calli  java/io/PrintStream.println(I)V[#391  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7fc34b004e00] bci=[-1,18,5] rc=1 vc=92 vn=- li=- udi=- nc=3 flg=0x20
n29n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b004db0] bci=[-1,18,5] rc=1 vc=92 vn=- li=- udi=- nc=1 flg=0x4
n13n            ==>aload
n13n          ==>aload
n24n          ==>icalli
n34n      return                                                                              [0x7fc34b004f40] bci=[-1,21,6] rc=0 vc=92 vn=- li=-1 udi=- nc=0
n2n       BBEnd </block_2>                                                                    [0x7fc34b004540] bci=[-1,21,6] rc=0 vc=92 vn=- li=-1 udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 25, symRefCount = 394
</trees>

<cfg>
         0 [0x7fc34b022230] entry
                 in        = []
                 out       = [2(10000) ]
                 exception in  = []
                 exception out = []
         1 [0x7fc34b022140] exit
                 in        = [2(10000) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7fc34b050170] BBStart at 0x7fc34b0044f0, frequency = 10000
                 in        = [0(10000) ]
                 out       = [1(10000) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7fc34b020190] Acyclic region
         Subgraph: (* = exit edge)
               (0x7fc34b020260:0x7fc34b020130)0 --> 2(0x7fc34b0202f0)
               (0x7fc34b0202f0:0x7fc34b020070)2 --> 1(0x7fc34b0203d0)
               (0x7fc34b0203d0:0x7fc34b0200d0)1 -->
         0 [0x7fc34b020130] Block
         2 [0x7fc34b020070] Block
         1 [0x7fc34b0200d0] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007FC34B00B9E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimize>
         No anchor found for load/store [00007FC34B004DB0]
         field at [00007FC34B004DB0] need not be compressed
         No anchor found for load/store [00007FC34B004BD0]
         field at [00007FC34B004BD0] need not be compressed
         No anchor found for load/store [00007FC34B0049A0]
         field at [00007FC34B0049A0] need not be compressed
         successfully verified compressedRefs anchors
<codegen
	method="BT4.main([Ljava/lang/String;)V"
	hotness="warm">
<LowerTrees>
</LowerTrees>
<trees
	title="Post Lower Trees"
	method="BT4.main([Ljava/lang/String;)V"
	hotness="warm">

Post Lower Trees: for BT4.main([Ljava/lang/String;)V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n1n       BBStart <block_2> (freq 10000)                                                      [0x7fc34b0044f0] bci=[-1,0,4] rc=0 vc=95 vn=- li=2 udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7fc34b0045e0] bci=[-1,0,4] rc=0 vc=95 vn=- li=2 udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7fc34b004590] bci=[-1,0,4] rc=2 vc=95 vn=- li=2 udi=- nc=0
n6n       treetop                                                                             [0x7fc34b004680] bci=[-1,0,4] rc=0 vc=95 vn=- li=2 udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7fc34b004630] bci=[-1,0,4] rc=6 vc=95 vn=- li=2 udi=- nc=1 flg=0x104
n3n           ==>loadaddr
n9n       astore  <pending push temp 0>[#384  Auto] [flags 0x4007 0x800 ] (X!=0 sharedMemory )  [0x7fc34b004770] bci=[-1,4,4] rc=0 vc=95 vn=- li=2 udi=1 nc=1 flg=0x4
n5n         ==>new
n8n       ResolveCHK [#32]                                                                    [0x7fc34b004720] bci=[-1,4,4] rc=0 vc=95 vn=- li=2 udi=- nc=1
n7n         call  BRandom.<init>()V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ]  [0x7fc34b0046d0] bci=[-1,4,4] rc=1 vc=95 vn=- li=2 udi=- nc=1
n5n           ==>new
n12n      astore  <auto slot 1>[#385  Auto] [flags 0x4007 0x0 ] (X!=0 sharedMemory )          [0x7fc34b004860] bci=[-1,7,4] rc=0 vc=95 vn=- li=2 udi=2 nc=1 flg=0x4
n5n         ==>new
n14n      ResolveCHK [#314]                                                                   [0x7fc34b004900] bci=[-1,8,5] rc=0 vc=95 vn=- li=2 udi=- nc=1
n13n        aload  java/lang/System.out Ljava/io/PrintStream;[#386  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7fc34b0048b0] bci=[-1,8,5] rc=4 vc=95 vn=- li=2 udi=- nc=0 flg=0x100
n19n      astore  <pending push temp 0>[#384  Auto] [flags 0x4007 0x800 ]                     [0x7fc34b004a90] bci=[-1,12,5] rc=0 vc=95 vn=- li=2 udi=3 nc=1
n13n        ==>aload
n18n      ResolveCHK [#32]                                                                    [0x7fc34b004a40] bci=[-1,12,5] rc=0 vc=95 vn=- li=2 udi=- nc=1
n17n        acalli  BRandom.getP()QBPoint;[#387  unresolved virtual Method] [flags 0x400 0x0 ] (X>=0 sharedMemory )  [0x7fc34b0049f0] bci=[-1,12,5] rc=4 vc=95 vn=- li=2 udi=- nc=2 flg=0x100
n16n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b0049a0] bci=[-1,12,5] rc=1 vc=95 vn=- li=2 udi=- nc=1 flg=0x4
n5n             ==>new
n5n           ==>new
n20n      astore  <pending push temp 1>[#388  Auto] [flags 0x4007 0x800 ]                     [0x7fc34b004ae0] bci=[-1,12,5] rc=0 vc=95 vn=- li=2 udi=4 nc=1
n17n        ==>acalli
n25n      ResolveAndNULLCHK on n17n [#32]                                                     [0x7fc34b004c70] bci=[-1,15,5] rc=0 vc=95 vn=- li=2 udi=- nc=1
n24n        icalli  BPoint.getX()I[#389  unresolved virtual Method] [flags 0x400 0x0 ]        [0x7fc34b004c20] bci=[-1,15,5] rc=3 vc=95 vn=- li=2 udi=- nc=2
n23n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b004bd0] bci=[-1,15,5] rc=1 vc=95 vn=- li=2 udi=- nc=1 flg=0x4
n17n            ==>acalli
n17n          ==>acalli
n26n      istore  <pending push temp 1>[#390  Auto] [flags 0x3 0x800 ]                        [0x7fc34b004cc0] bci=[-1,15,5] rc=0 vc=95 vn=- li=2 udi=5 nc=1
n24n        ==>icalli
n31n      ResolveAndNULLCHK on n13n [#32]                                                     [0x7fc34b004e50] bci=[-1,18,5] rc=0 vc=95 vn=- li=2 udi=- nc=1
n30n        calli  java/io/PrintStream.println(I)V[#391  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7fc34b004e00] bci=[-1,18,5] rc=1 vc=95 vn=- li=2 udi=- nc=3 flg=0x20
n29n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b004db0] bci=[-1,18,5] rc=1 vc=95 vn=- li=2 udi=- nc=1 flg=0x4
n13n            ==>aload
n13n          ==>aload
n24n          ==>icalli
n34n      return                                                                              [0x7fc34b004f40] bci=[-1,21,6] rc=0 vc=95 vn=- li=2 udi=- nc=0
n2n       BBEnd </block_2>                                                                    [0x7fc34b004540] bci=[-1,21,6] rc=0 vc=95 vn=- li=2 udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 25, symRefCount = 394
</trees>

<cfg>
         0 [0x7fc34b022230] entry
                 in        = []
                 out       = [2(10000) ]
                 exception in  = []
                 exception out = []
         1 [0x7fc34b022140] exit
                 in        = [2(10000) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7fc34b050170] BBStart at 0x7fc34b0044f0, frequency = 10000
                 in        = [0(10000) ]
                 out       = [1(10000) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7fc34b020190] Acyclic region
         Subgraph: (* = exit edge)
               (0x7fc34b020260:0x7fc34b020130)0 --> 2(0x7fc34b0202f0)
               (0x7fc34b0202f0:0x7fc34b020070)2 --> 1(0x7fc34b0203d0)
               (0x7fc34b0203d0:0x7fc34b0200d0)1 -->
         0 [0x7fc34b020130] Block
         2 [0x7fc34b020070] Block
         1 [0x7fc34b0200d0] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007FC34B00B9E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
<trees
	title="Trees before this remat phase"
	method="BT4.main([Ljava/lang/String;)V"
	hotness="warm">

Trees before this remat phase: for BT4.main([Ljava/lang/String;)V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n1n       BBStart <block_2> (freq 10000)                                                      [0x7fc34b0044f0] bci=[-1,0,4] rc=0 vc=95 vn=- li=2 udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7fc34b0045e0] bci=[-1,0,4] rc=0 vc=95 vn=- li=2 udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7fc34b004590] bci=[-1,0,4] rc=2 vc=95 vn=- li=2 udi=- nc=0
n6n       treetop                                                                             [0x7fc34b004680] bci=[-1,0,4] rc=0 vc=95 vn=- li=2 udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7fc34b004630] bci=[-1,0,4] rc=6 vc=95 vn=- li=2 udi=- nc=1 flg=0x104
n3n           ==>loadaddr
n9n       astore  <pending push temp 0>[#384  Auto] [flags 0x4007 0x800 ] (X!=0 sharedMemory )  [0x7fc34b004770] bci=[-1,4,4] rc=0 vc=95 vn=- li=2 udi=1 nc=1 flg=0x4
n5n         ==>new
n8n       ResolveCHK [#32]                                                                    [0x7fc34b004720] bci=[-1,4,4] rc=0 vc=95 vn=- li=2 udi=- nc=1
n7n         call  BRandom.<init>()V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ]  [0x7fc34b0046d0] bci=[-1,4,4] rc=1 vc=95 vn=- li=2 udi=- nc=1
n5n           ==>new
n12n      astore  <auto slot 1>[#385  Auto] [flags 0x4007 0x0 ] (X!=0 sharedMemory )          [0x7fc34b004860] bci=[-1,7,4] rc=0 vc=95 vn=- li=2 udi=2 nc=1 flg=0x4
n5n         ==>new
n14n      ResolveCHK [#314]                                                                   [0x7fc34b004900] bci=[-1,8,5] rc=0 vc=95 vn=- li=2 udi=- nc=1
n13n        aload  java/lang/System.out Ljava/io/PrintStream;[#386  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7fc34b0048b0] bci=[-1,8,5] rc=4 vc=95 vn=- li=2 udi=- nc=0 flg=0x100
n19n      astore  <pending push temp 0>[#384  Auto] [flags 0x4007 0x800 ]                     [0x7fc34b004a90] bci=[-1,12,5] rc=0 vc=95 vn=- li=2 udi=3 nc=1
n13n        ==>aload
n18n      ResolveCHK [#32]                                                                    [0x7fc34b004a40] bci=[-1,12,5] rc=0 vc=95 vn=- li=2 udi=- nc=1
n17n        acalli  BRandom.getP()QBPoint;[#387  unresolved virtual Method] [flags 0x400 0x0 ] (X>=0 sharedMemory )  [0x7fc34b0049f0] bci=[-1,12,5] rc=4 vc=95 vn=- li=2 udi=- nc=2 flg=0x100
n16n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b0049a0] bci=[-1,12,5] rc=1 vc=95 vn=- li=2 udi=- nc=1 flg=0x4
n5n             ==>new
n5n           ==>new
n20n      astore  <pending push temp 1>[#388  Auto] [flags 0x4007 0x800 ]                     [0x7fc34b004ae0] bci=[-1,12,5] rc=0 vc=95 vn=- li=2 udi=4 nc=1
n17n        ==>acalli
n25n      ResolveAndNULLCHK on n17n [#32]                                                     [0x7fc34b004c70] bci=[-1,15,5] rc=0 vc=95 vn=- li=2 udi=- nc=1
n24n        icalli  BPoint.getX()I[#389  unresolved virtual Method] [flags 0x400 0x0 ]        [0x7fc34b004c20] bci=[-1,15,5] rc=3 vc=95 vn=- li=2 udi=- nc=2
n23n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b004bd0] bci=[-1,15,5] rc=1 vc=95 vn=- li=2 udi=- nc=1 flg=0x4
n17n            ==>acalli
n17n          ==>acalli
n26n      istore  <pending push temp 1>[#390  Auto] [flags 0x3 0x800 ]                        [0x7fc34b004cc0] bci=[-1,15,5] rc=0 vc=95 vn=- li=2 udi=5 nc=1
n24n        ==>icalli
n31n      ResolveAndNULLCHK on n13n [#32]                                                     [0x7fc34b004e50] bci=[-1,18,5] rc=0 vc=95 vn=- li=2 udi=- nc=1
n30n        calli  java/io/PrintStream.println(I)V[#391  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7fc34b004e00] bci=[-1,18,5] rc=1 vc=95 vn=- li=2 udi=- nc=3 flg=0x20
n29n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b004db0] bci=[-1,18,5] rc=1 vc=95 vn=- li=2 udi=- nc=1 flg=0x4
n13n            ==>aload
n13n          ==>aload
n24n          ==>icalli
n34n      return                                                                              [0x7fc34b004f40] bci=[-1,21,6] rc=0 vc=95 vn=- li=2 udi=- nc=0
n2n       BBEnd </block_2>                                                                    [0x7fc34b004540] bci=[-1,21,6] rc=0 vc=95 vn=- li=2 udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 25, symRefCount = 394
</trees>

<cfg>
         0 [0x7fc34b022230] entry
                 in        = []
                 out       = [2(10000) ]
                 exception in  = []
                 exception out = []
         1 [0x7fc34b022140] exit
                 in        = [2(10000) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7fc34b050170] BBStart at 0x7fc34b0044f0, frequency = 10000
                 in        = [0(10000) ]
                 out       = [1(10000) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7fc34b020190] Acyclic region
         Subgraph: (* = exit edge)
               (0x7fc34b020260:0x7fc34b020130)0 --> 2(0x7fc34b0202f0)
               (0x7fc34b0202f0:0x7fc34b020070)2 --> 1(0x7fc34b0203d0)
               (0x7fc34b0203d0:0x7fc34b0200d0)1 -->
         0 [0x7fc34b020130] Block
         2 [0x7fc34b020070] Block
         1 [0x7fc34b0200d0] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007FC34B00B9E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
<trees
	title="Trees after this remat phase"
	method="BT4.main([Ljava/lang/String;)V"
	hotness="warm">

Trees after this remat phase: for BT4.main([Ljava/lang/String;)V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n1n       BBStart <block_2> (freq 10000)                                                      [0x7fc34b0044f0] bci=[-1,0,4] rc=0 vc=96 vn=- li=2 udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7fc34b0045e0] bci=[-1,0,4] rc=0 vc=96 vn=- li=2 udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7fc34b004590] bci=[-1,0,4] rc=2 vc=96 vn=- li=2 udi=- nc=0
n6n       treetop                                                                             [0x7fc34b004680] bci=[-1,0,4] rc=0 vc=96 vn=- li=2 udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7fc34b004630] bci=[-1,0,4] rc=6 vc=96 vn=- li=2 udi=- nc=1 flg=0x104
n3n           ==>loadaddr
n9n       astore  <pending push temp 0>[#384  Auto] [flags 0x4007 0x800 ] (X!=0 sharedMemory )  [0x7fc34b004770] bci=[-1,4,4] rc=0 vc=96 vn=- li=2 udi=1 nc=1 flg=0x4
n5n         ==>new
n8n       ResolveCHK [#32]                                                                    [0x7fc34b004720] bci=[-1,4,4] rc=0 vc=96 vn=- li=2 udi=- nc=1
n7n         call  BRandom.<init>()V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ]  [0x7fc34b0046d0] bci=[-1,4,4] rc=1 vc=96 vn=- li=2 udi=- nc=1
n5n           ==>new
n12n      astore  <auto slot 1>[#385  Auto] [flags 0x4007 0x0 ] (X!=0 sharedMemory )          [0x7fc34b004860] bci=[-1,7,4] rc=0 vc=96 vn=- li=2 udi=2 nc=1 flg=0x4
n5n         ==>new
n14n      ResolveCHK [#314]                                                                   [0x7fc34b004900] bci=[-1,8,5] rc=0 vc=96 vn=- li=2 udi=- nc=1
n13n        aload  java/lang/System.out Ljava/io/PrintStream;[#386  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7fc34b0048b0] bci=[-1,8,5] rc=4 vc=96 vn=- li=2 udi=- nc=0 flg=0x100
n19n      astore  <pending push temp 0>[#384  Auto] [flags 0x4007 0x800 ]                     [0x7fc34b004a90] bci=[-1,12,5] rc=0 vc=96 vn=- li=2 udi=3 nc=1
n13n        ==>aload
n18n      ResolveCHK [#32]                                                                    [0x7fc34b004a40] bci=[-1,12,5] rc=0 vc=96 vn=- li=2 udi=- nc=1
n17n        acalli  BRandom.getP()QBPoint;[#387  unresolved virtual Method] [flags 0x400 0x0 ] (X>=0 sharedMemory )  [0x7fc34b0049f0] bci=[-1,12,5] rc=4 vc=96 vn=- li=2 udi=- nc=2 flg=0x100
n16n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b0049a0] bci=[-1,12,5] rc=1 vc=96 vn=- li=2 udi=- nc=1 flg=0x4
n5n             ==>new
n5n           ==>new
n20n      astore  <pending push temp 1>[#388  Auto] [flags 0x4007 0x800 ]                     [0x7fc34b004ae0] bci=[-1,12,5] rc=0 vc=96 vn=- li=2 udi=4 nc=1
n17n        ==>acalli
n25n      ResolveAndNULLCHK on n17n [#32]                                                     [0x7fc34b004c70] bci=[-1,15,5] rc=0 vc=96 vn=- li=2 udi=- nc=1
n24n        icalli  BPoint.getX()I[#389  unresolved virtual Method] [flags 0x400 0x0 ]        [0x7fc34b004c20] bci=[-1,15,5] rc=3 vc=96 vn=- li=2 udi=- nc=2
n23n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b004bd0] bci=[-1,15,5] rc=1 vc=96 vn=- li=2 udi=- nc=1 flg=0x4
n17n            ==>acalli
n17n          ==>acalli
n26n      istore  <pending push temp 1>[#390  Auto] [flags 0x3 0x800 ]                        [0x7fc34b004cc0] bci=[-1,15,5] rc=0 vc=96 vn=- li=2 udi=5 nc=1
n24n        ==>icalli
n31n      ResolveAndNULLCHK on n13n [#32]                                                     [0x7fc34b004e50] bci=[-1,18,5] rc=0 vc=96 vn=- li=2 udi=- nc=1
n30n        calli  java/io/PrintStream.println(I)V[#391  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7fc34b004e00] bci=[-1,18,5] rc=1 vc=96 vn=- li=2 udi=- nc=3 flg=0x20
n29n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b004db0] bci=[-1,18,5] rc=1 vc=96 vn=- li=2 udi=- nc=1 flg=0x4
n13n            ==>aload
n13n          ==>aload
n24n          ==>icalli
n34n      return                                                                              [0x7fc34b004f40] bci=[-1,21,6] rc=0 vc=96 vn=- li=2 udi=- nc=0
n2n       BBEnd </block_2>                                                                    [0x7fc34b004540] bci=[-1,21,6] rc=0 vc=96 vn=- li=2 udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 25, symRefCount = 394
</trees>

<cfg>
         0 [0x7fc34b022230] entry
                 in        = []
                 out       = [2(10000) ]
                 exception in  = []
                 exception out = []
         1 [0x7fc34b022140] exit
                 in        = [2(10000) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7fc34b050170] BBStart at 0x7fc34b0044f0, frequency = 10000
                 in        = [0(10000) ]
                 out       = [1(10000) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7fc34b020190] Acyclic region
         Subgraph: (* = exit edge)
               (0x7fc34b020260:0x7fc34b020130)0 --> 2(0x7fc34b0202f0)
               (0x7fc34b0202f0:0x7fc34b020070)2 --> 1(0x7fc34b0203d0)
               (0x7fc34b0203d0:0x7fc34b0200d0)1 -->
         0 [0x7fc34b020130] Block
         2 [0x7fc34b020070] Block
         1 [0x7fc34b0200d0] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007FC34B00B9E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
<AllocateLinkageRegisters>
           Initial globalRegsWithRegLoad: {}         
</AllocateLinkageRegisters>
[    10] O^O CODE GENERATION:  ===>   Identify and mark Unneeded b2i/i2b conversions  <===
<trees
	title="Pre Uncommon Call Constant Node Trees"
	method="BT4.main([Ljava/lang/String;)V"
	hotness="warm">

Pre Uncommon Call Constant Node Trees: for BT4.main([Ljava/lang/String;)V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n1n       BBStart <block_2> (freq 10000)                                                      [0x7fc34b0044f0] bci=[-1,0,4] rc=0 vc=96 vn=- li=2 udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7fc34b0045e0] bci=[-1,0,4] rc=0 vc=97 vn=- li=2 udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7fc34b004590] bci=[-1,0,4] rc=2 vc=97 vn=- li=2 udi=- nc=0
n6n       treetop                                                                             [0x7fc34b004680] bci=[-1,0,4] rc=0 vc=97 vn=- li=2 udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7fc34b004630] bci=[-1,0,4] rc=6 vc=97 vn=- li=2 udi=- nc=1 flg=0x104
n3n           ==>loadaddr
n9n       astore  <pending push temp 0>[#384  Auto] [flags 0x4007 0x800 ] (X!=0 sharedMemory )  [0x7fc34b004770] bci=[-1,4,4] rc=0 vc=97 vn=- li=2 udi=1 nc=1 flg=0x4
n5n         ==>new
n8n       ResolveCHK [#32]                                                                    [0x7fc34b004720] bci=[-1,4,4] rc=0 vc=97 vn=- li=2 udi=- nc=1
n7n         call  BRandom.<init>()V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ]  [0x7fc34b0046d0] bci=[-1,4,4] rc=1 vc=97 vn=- li=2 udi=- nc=1
n5n           ==>new
n12n      astore  <auto slot 1>[#385  Auto] [flags 0x4007 0x0 ] (X!=0 sharedMemory )          [0x7fc34b004860] bci=[-1,7,4] rc=0 vc=97 vn=- li=2 udi=2 nc=1 flg=0x4
n5n         ==>new
n14n      ResolveCHK [#314]                                                                   [0x7fc34b004900] bci=[-1,8,5] rc=0 vc=97 vn=- li=2 udi=- nc=1
n13n        aload  java/lang/System.out Ljava/io/PrintStream;[#386  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7fc34b0048b0] bci=[-1,8,5] rc=4 vc=97 vn=- li=2 udi=- nc=0 flg=0x100
n19n      astore  <pending push temp 0>[#384  Auto] [flags 0x4007 0x800 ]                     [0x7fc34b004a90] bci=[-1,12,5] rc=0 vc=97 vn=- li=2 udi=3 nc=1
n13n        ==>aload
n18n      ResolveCHK [#32]                                                                    [0x7fc34b004a40] bci=[-1,12,5] rc=0 vc=97 vn=- li=2 udi=- nc=1
n17n        acalli  BRandom.getP()QBPoint;[#387  unresolved virtual Method] [flags 0x400 0x0 ] (X>=0 sharedMemory )  [0x7fc34b0049f0] bci=[-1,12,5] rc=4 vc=97 vn=- li=2 udi=- nc=2 flg=0x100
n16n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b0049a0] bci=[-1,12,5] rc=1 vc=97 vn=- li=2 udi=- nc=1 flg=0x4
n5n             ==>new
n5n           ==>new
n20n      astore  <pending push temp 1>[#388  Auto] [flags 0x4007 0x800 ]                     [0x7fc34b004ae0] bci=[-1,12,5] rc=0 vc=97 vn=- li=2 udi=4 nc=1
n17n        ==>acalli
n25n      ResolveAndNULLCHK on n17n [#32]                                                     [0x7fc34b004c70] bci=[-1,15,5] rc=0 vc=97 vn=- li=2 udi=- nc=1
n24n        icalli  BPoint.getX()I[#389  unresolved virtual Method] [flags 0x400 0x0 ]        [0x7fc34b004c20] bci=[-1,15,5] rc=3 vc=97 vn=- li=2 udi=- nc=2
n23n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b004bd0] bci=[-1,15,5] rc=1 vc=97 vn=- li=2 udi=- nc=1 flg=0x4
n17n            ==>acalli
n17n          ==>acalli
n26n      istore  <pending push temp 1>[#390  Auto] [flags 0x3 0x800 ]                        [0x7fc34b004cc0] bci=[-1,15,5] rc=0 vc=97 vn=- li=2 udi=5 nc=1
n24n        ==>icalli
n31n      ResolveAndNULLCHK on n13n [#32]                                                     [0x7fc34b004e50] bci=[-1,18,5] rc=0 vc=97 vn=- li=2 udi=- nc=1
n30n        calli  java/io/PrintStream.println(I)V[#391  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7fc34b004e00] bci=[-1,18,5] rc=1 vc=97 vn=- li=2 udi=- nc=3 flg=0x20
n29n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b004db0] bci=[-1,18,5] rc=1 vc=97 vn=- li=2 udi=- nc=1 flg=0x4
n13n            ==>aload
n13n          ==>aload
n24n          ==>icalli
n34n      return                                                                              [0x7fc34b004f40] bci=[-1,21,6] rc=0 vc=97 vn=- li=2 udi=- nc=0
n2n       BBEnd </block_2>                                                                    [0x7fc34b004540] bci=[-1,21,6] rc=0 vc=97 vn=- li=2 udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 25, symRefCount = 394
</trees>

<cfg>
         0 [0x7fc34b022230] entry
                 in        = []
                 out       = [2(10000) ]
                 exception in  = []
                 exception out = []
         1 [0x7fc34b022140] exit
                 in        = [2(10000) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7fc34b050170] BBStart at 0x7fc34b0044f0, frequency = 10000
                 in        = [0(10000) ]
                 out       = [1(10000) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7fc34b020190] Acyclic region
         Subgraph: (* = exit edge)
               (0x7fc34b020260:0x7fc34b020130)0 --> 2(0x7fc34b0202f0)
               (0x7fc34b0202f0:0x7fc34b020070)2 --> 1(0x7fc34b0203d0)
               (0x7fc34b0203d0:0x7fc34b0200d0)1 -->
         0 [0x7fc34b020130] Block
         2 [0x7fc34b020070] Block
         1 [0x7fc34b0200d0] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007FC34B00B9E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
Performing uncommon call constant nodes
Skipping previously visited call node 17
Skipping previously visited call node 24
<trees
	title="Post Uncommon Call Constant Node Trees"
	method="BT4.main([Ljava/lang/String;)V"
	hotness="warm">

Post Uncommon Call Constant Node Trees: for BT4.main([Ljava/lang/String;)V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n1n       BBStart <block_2> (freq 10000)                                                      [0x7fc34b0044f0] bci=[-1,0,4] rc=0 vc=96 vn=- li=2 udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7fc34b0045e0] bci=[-1,0,4] rc=0 vc=97 vn=- li=2 udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7fc34b004590] bci=[-1,0,4] rc=2 vc=97 vn=- li=2 udi=- nc=0
n6n       treetop                                                                             [0x7fc34b004680] bci=[-1,0,4] rc=0 vc=97 vn=- li=2 udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7fc34b004630] bci=[-1,0,4] rc=6 vc=97 vn=- li=2 udi=- nc=1 flg=0x104
n3n           ==>loadaddr
n9n       astore  <pending push temp 0>[#384  Auto] [flags 0x4007 0x800 ] (X!=0 sharedMemory )  [0x7fc34b004770] bci=[-1,4,4] rc=0 vc=97 vn=- li=2 udi=1 nc=1 flg=0x4
n5n         ==>new
n8n       ResolveCHK [#32]                                                                    [0x7fc34b004720] bci=[-1,4,4] rc=0 vc=97 vn=- li=2 udi=- nc=1
n7n         call  BRandom.<init>()V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ]  [0x7fc34b0046d0] bci=[-1,4,4] rc=1 vc=97 vn=- li=2 udi=- nc=1
n5n           ==>new
n12n      astore  <auto slot 1>[#385  Auto] [flags 0x4007 0x0 ] (X!=0 sharedMemory )          [0x7fc34b004860] bci=[-1,7,4] rc=0 vc=97 vn=- li=2 udi=2 nc=1 flg=0x4
n5n         ==>new
n14n      ResolveCHK [#314]                                                                   [0x7fc34b004900] bci=[-1,8,5] rc=0 vc=97 vn=- li=2 udi=- nc=1
n13n        aload  java/lang/System.out Ljava/io/PrintStream;[#386  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7fc34b0048b0] bci=[-1,8,5] rc=4 vc=97 vn=- li=2 udi=- nc=0 flg=0x100
n19n      astore  <pending push temp 0>[#384  Auto] [flags 0x4007 0x800 ]                     [0x7fc34b004a90] bci=[-1,12,5] rc=0 vc=97 vn=- li=2 udi=3 nc=1
n13n        ==>aload
n18n      ResolveCHK [#32]                                                                    [0x7fc34b004a40] bci=[-1,12,5] rc=0 vc=97 vn=- li=2 udi=- nc=1
n17n        acalli  BRandom.getP()QBPoint;[#387  unresolved virtual Method] [flags 0x400 0x0 ] (X>=0 sharedMemory )  [0x7fc34b0049f0] bci=[-1,12,5] rc=4 vc=97 vn=- li=2 udi=- nc=2 flg=0x100
n16n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b0049a0] bci=[-1,12,5] rc=1 vc=97 vn=- li=2 udi=- nc=1 flg=0x4
n5n             ==>new
n5n           ==>new
n20n      astore  <pending push temp 1>[#388  Auto] [flags 0x4007 0x800 ]                     [0x7fc34b004ae0] bci=[-1,12,5] rc=0 vc=97 vn=- li=2 udi=4 nc=1
n17n        ==>acalli
n25n      ResolveAndNULLCHK on n17n [#32]                                                     [0x7fc34b004c70] bci=[-1,15,5] rc=0 vc=97 vn=- li=2 udi=- nc=1
n24n        icalli  BPoint.getX()I[#389  unresolved virtual Method] [flags 0x400 0x0 ]        [0x7fc34b004c20] bci=[-1,15,5] rc=3 vc=97 vn=- li=2 udi=- nc=2
n23n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b004bd0] bci=[-1,15,5] rc=1 vc=97 vn=- li=2 udi=- nc=1 flg=0x4
n17n            ==>acalli
n17n          ==>acalli
n26n      istore  <pending push temp 1>[#390  Auto] [flags 0x3 0x800 ]                        [0x7fc34b004cc0] bci=[-1,15,5] rc=0 vc=97 vn=- li=2 udi=5 nc=1
n24n        ==>icalli
n31n      ResolveAndNULLCHK on n13n [#32]                                                     [0x7fc34b004e50] bci=[-1,18,5] rc=0 vc=97 vn=- li=2 udi=- nc=1
n30n        calli  java/io/PrintStream.println(I)V[#391  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7fc34b004e00] bci=[-1,18,5] rc=1 vc=97 vn=- li=2 udi=- nc=3 flg=0x20
n29n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b004db0] bci=[-1,18,5] rc=1 vc=97 vn=- li=2 udi=- nc=1 flg=0x4
n13n            ==>aload
n13n          ==>aload
n24n          ==>icalli
n34n      return                                                                              [0x7fc34b004f40] bci=[-1,21,6] rc=0 vc=97 vn=- li=2 udi=- nc=0
n2n       BBEnd </block_2>                                                                    [0x7fc34b004540] bci=[-1,21,6] rc=0 vc=97 vn=- li=2 udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 25, symRefCount = 394
</trees>

<cfg>
         0 [0x7fc34b022230] entry
                 in        = []
                 out       = [2(10000) ]
                 exception in  = []
                 exception out = []
         1 [0x7fc34b022140] exit
                 in        = [2(10000) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7fc34b050170] BBStart at 0x7fc34b0044f0, frequency = 10000
                 in        = [0(10000) ]
                 out       = [1(10000) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7fc34b020190] Acyclic region
         Subgraph: (* = exit edge)
               (0x7fc34b020260:0x7fc34b020130)0 --> 2(0x7fc34b0202f0)
               (0x7fc34b0202f0:0x7fc34b020070)2 --> 1(0x7fc34b0203d0)
               (0x7fc34b0203d0:0x7fc34b0200d0)1 -->
         0 [0x7fc34b020130] Block
         2 [0x7fc34b020070] Block
         1 [0x7fc34b0200d0] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007FC34B00B9E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
<trees
	title="Pre Instruction Selection Trees"
	method="BT4.main([Ljava/lang/String;)V"
	hotness="warm">

Pre Instruction Selection Trees: for BT4.main([Ljava/lang/String;)V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n1n       BBStart <block_2> (freq 10000)                                                      [0x7fc34b0044f0] bci=[-1,0,4] rc=0 vc=100 vn=- li=2 udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7fc34b0045e0] bci=[-1,0,4] rc=0 vc=100 vn=- li=2 udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7fc34b004590] bci=[-1,0,4] rc=2 vc=100 vn=- li=2 udi=- nc=0
n6n       treetop                                                                             [0x7fc34b004680] bci=[-1,0,4] rc=0 vc=100 vn=- li=2 udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7fc34b004630] bci=[-1,0,4] rc=6 vc=100 vn=- li=2 udi=- nc=1 flg=0x104
n3n           ==>loadaddr
n9n       astore  <pending push temp 0>[#384  Auto] [flags 0x4007 0x800 ] (X!=0 sharedMemory )  [0x7fc34b004770] bci=[-1,4,4] rc=0 vc=100 vn=- li=2 udi=- nc=1 flg=0x4
n5n         ==>new
n8n       ResolveCHK [#32]                                                                    [0x7fc34b004720] bci=[-1,4,4] rc=0 vc=100 vn=- li=2 udi=- nc=1
n7n         call  BRandom.<init>()V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ]  [0x7fc34b0046d0] bci=[-1,4,4] rc=1 vc=100 vn=- li=2 udi=- nc=1
n5n           ==>new
n12n      astore  <auto slot 1>[#385  Auto] [flags 0x4007 0x0 ] (X!=0 sharedMemory )          [0x7fc34b004860] bci=[-1,7,4] rc=0 vc=100 vn=- li=2 udi=- nc=1 flg=0x4
n5n         ==>new
n14n      ResolveCHK [#314]                                                                   [0x7fc34b004900] bci=[-1,8,5] rc=0 vc=100 vn=- li=2 udi=- nc=1
n13n        aload  java/lang/System.out Ljava/io/PrintStream;[#386  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7fc34b0048b0] bci=[-1,8,5] rc=4 vc=100 vn=- li=2 udi=- nc=0 flg=0x100
n19n      astore  <pending push temp 0>[#384  Auto] [flags 0x4007 0x800 ]                     [0x7fc34b004a90] bci=[-1,12,5] rc=0 vc=100 vn=- li=2 udi=- nc=1
n13n        ==>aload
n18n      ResolveCHK [#32]                                                                    [0x7fc34b004a40] bci=[-1,12,5] rc=0 vc=100 vn=- li=2 udi=- nc=1
n17n        acalli  BRandom.getP()QBPoint;[#387  unresolved virtual Method] [flags 0x400 0x0 ] (X>=0 sharedMemory )  [0x7fc34b0049f0] bci=[-1,12,5] rc=4 vc=100 vn=- li=2 udi=- nc=2 flg=0x100
n16n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b0049a0] bci=[-1,12,5] rc=1 vc=100 vn=- li=2 udi=- nc=1 flg=0x4
n5n             ==>new
n5n           ==>new
n20n      astore  <pending push temp 1>[#388  Auto] [flags 0x4007 0x800 ]                     [0x7fc34b004ae0] bci=[-1,12,5] rc=0 vc=100 vn=- li=2 udi=- nc=1
n17n        ==>acalli
n25n      ResolveAndNULLCHK on n17n [#32]                                                     [0x7fc34b004c70] bci=[-1,15,5] rc=0 vc=100 vn=- li=2 udi=- nc=1
n24n        icalli  BPoint.getX()I[#389  unresolved virtual Method] [flags 0x400 0x0 ]        [0x7fc34b004c20] bci=[-1,15,5] rc=3 vc=100 vn=- li=2 udi=- nc=2
n23n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b004bd0] bci=[-1,15,5] rc=1 vc=100 vn=- li=2 udi=- nc=1 flg=0x4
n17n            ==>acalli
n17n          ==>acalli
n26n      istore  <pending push temp 1>[#390  Auto] [flags 0x3 0x800 ]                        [0x7fc34b004cc0] bci=[-1,15,5] rc=0 vc=100 vn=- li=2 udi=- nc=1
n24n        ==>icalli
n31n      ResolveAndNULLCHK on n13n [#32]                                                     [0x7fc34b004e50] bci=[-1,18,5] rc=0 vc=100 vn=- li=2 udi=- nc=1
n30n        calli  java/io/PrintStream.println(I)V[#391  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7fc34b004e00] bci=[-1,18,5] rc=1 vc=100 vn=- li=2 udi=- nc=3 flg=0x20
n29n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7fc34b004db0] bci=[-1,18,5] rc=1 vc=100 vn=- li=2 udi=- nc=1 flg=0x4
n13n            ==>aload
n13n          ==>aload
n24n          ==>icalli
n34n      return                                                                              [0x7fc34b004f40] bci=[-1,21,6] rc=0 vc=100 vn=- li=2 udi=- nc=0
n2n       BBEnd </block_2>                                                                    [0x7fc34b004540] bci=[-1,21,6] rc=0 vc=100 vn=- li=2 udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 25, symRefCount = 394
</trees>

<cfg>
         0 [0x7fc34b022230] entry
                 in        = []
                 out       = [2(10000) ]
                 exception in  = []
                 exception out = []
         1 [0x7fc34b022140] exit
                 in        = [2(10000) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7fc34b050170] BBStart at 0x7fc34b0044f0, frequency = 10000
                 in        = [0(10000) ]
                 out       = [1(10000) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7fc34b020190] Acyclic region
         Subgraph: (* = exit edge)
               (0x7fc34b020260:0x7fc34b020130)0 --> 2(0x7fc34b0202f0)
               (0x7fc34b0202f0:0x7fc34b020070)2 --> 1(0x7fc34b0203d0)
               (0x7fc34b0203d0:0x7fc34b0200d0)1 -->
         0 [0x7fc34b020130] Block
         2 [0x7fc34b020070] Block
         1 [0x7fc34b0200d0] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007FC34B00B9E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>

Performing Instruction Selection:


============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n1n      (  0)  BBStart <block_2> (freq 10000)                                                       [0x7fc34b0044f0] bci=[-1,0,4] rc=0 vc=100 vn=- li=2 udi=- nc=0
------------------------------
------------------------------
 n1n      (  0)  BBStart <block_2> (freq 10000)                                                       [0x7fc34b0044f0] bci=[-1,0,4] rc=0 vc=100 vn=- li=2 udi=- nc=0
------------------------------

 [0x7fc34b13b4e0]	Label L0032:			# label
========================================
 [0x7fc34b13b580]	fence Relative [ 00007FC34B050210 ]	# fence BBStart <block_2> (frequency 10000)

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n4n      (  0)  ResolveCHK [#314]                                                                    [0x7fc34b0045e0] bci=[-1,0,4] rc=0 vc=100 vn=- li=2 udi=- nc=1
 n3n      (  2)    loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]       [0x7fc34b004590] bci=[-1,0,4] rc=2 vc=100 vn=- li=2 udi=- nc=0
------------------------------
[    11] O^O OMIT HCR CLASS POINTER ASSUMPTION: class=0000000000000000, for node 00007FC34B004590
------------------------------
 n4n      (  0)  ResolveCHK [#314]                                                                    [0x7fc34b0045e0] bci=[-1,0,4] rc=0 vc=100 vn=- li=2 udi=- nc=1
 n3n      (  1)    loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ] (in GPR_0033)  [0x7fc34b004590] bci=[-1,0,4] rc=1 vc=100 vn=- li=2 udi=47456 nc=0
------------------------------

 [0x7fc34b13ba70]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b13b9e0]	lea	GPR_0033, dword ptr [$0x0000000000000000]		# LEA4RegMem, SymRef  unknown class object[#395  unresolved Static] [flags 0x18307 0x0 ]

============================================================
; Live regs: GPR=1 FPR=0 VRF=0 {GPR_0033}
------------------------------
 n6n      (  0)  treetop                                                                              [0x7fc34b004680] bci=[-1,0,4] rc=0 vc=100 vn=- li=2 udi=- nc=1
 n5n      (  6)    new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7fc34b004630] bci=[-1,0,4] rc=6 vc=100 vn=- li=2 udi=- nc=1 flg=0x104
 n3n      (  1)      ==>loadaddr (in GPR_0033)
------------------------------
X86 HelperCall: [0091] jitNewObject
------------------------------
 n6n      (  0)  treetop                                                                              [0x7fc34b004680] bci=[-1,0,4] rc=0 vc=100 vn=- li=2 udi=- nc=1
 n5n      (  5)    new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (in &GPR_0073) (X!=0 X>=0 sharedMemory )  [0x7fc34b004630] bci=[-1,0,4] rc=5 vc=100 vn=- li=2 udi=56896 nc=1 flg=0x104
 n3n      (  0)      ==>loadaddr (in GPR_0033)
------------------------------

 [0x7fc34b13d520]	mov	GPR_0052, GPR_0033		# MOV8RegReg
 [0x7fc34b13d5b0]	mov	GPR_0051, GPR_0000		# MOV8RegReg
 [0x7fc34b13ddc0]	assocreg                        # assocreg
	POST: None
 [0x7fc34b13db60]	call	jitNewObject            # CALLImm4 (00007FC36FB13DC0)# CALLImm4
	 PRE: [GPR_0048 : eax] [GPR_0049 : ecx] [GPR_0050 : edx] [GPR_0051 : edi] [GPR_0052 : esi] [GPR_0053 : r8d] [GPR_0054 : r9d] [GPR_0055 : r10d] [GPR_0056 : r11d] [FPR_0057 : xmm0] [FPR_0058 : xmm1] [FPR_0059 : xmm2] [FPR_0060 : xmm3] [FPR_0061 : xmm4] [FPR_0062 : xmm5] [FPR_0063 : xmm6] [FPR_0064 : xmm7] [FPR_0065 : xmm8] [FPR_0066 : xmm9] [FPR_0067 : xmm10] [FPR_0068 : xmm11] [FPR_0069 : xmm12] [FPR_0070 : xmm13] [FPR_0071 : xmm14] [FPR_0072 : xmm15] [GPR_0000 : ebp]
	POST: [GPR_0048 : eax] [GPR_0049 : ecx] [GPR_0050 : edx] [GPR_0051 : edi] [GPR_0052 : esi] [GPR_0053 : r8d] [GPR_0054 : r9d] [GPR_0055 : r10d] [GPR_0056 : r11d] [FPR_0057 : xmm0] [FPR_0058 : xmm1] [FPR_0059 : xmm2] [FPR_0060 : xmm3] [FPR_0061 : xmm4] [FPR_0062 : xmm5] [FPR_0063 : xmm6] [FPR_0064 : xmm7] [FPR_0065 : xmm8] [FPR_0066 : xmm9] [FPR_0067 : xmm10] [FPR_0068 : xmm11] [FPR_0069 : xmm12] [FPR_0070 : xmm13] [FPR_0071 : xmm14] [FPR_0072 : xmm15] [GPR_0000 : ebp]
 [0x7fc34b13df00]	mov	&GPR_0073, GPR_0048		# MOV8RegReg

============================================================
; Live regs: GPR=1 FPR=0 VRF=0 {&GPR_0073}
------------------------------
 n9n      (  0)  astore  <pending push temp 0>[#384  Auto] [flags 0x4007 0x800 ] (X!=0 sharedMemory )  [0x7fc34b004770] bci=[-1,4,4] rc=0 vc=100 vn=- li=2 udi=- nc=1 flg=0x4
 n5n      (  5)    ==>new (in &GPR_0073) (X!=0 X>=0 sharedMemory )
------------------------------
------------------------------
 n9n      (  0)  astore  <pending push temp 0>[#384  Auto] [flags 0x4007 0x800 ] (X!=0 sharedMemory )  [0x7fc34b004770] bci=[-1,4,4] rc=0 vc=100 vn=- li=2 udi=- nc=1 flg=0x4
 n5n      (  4)    ==>new (in &GPR_0073) (X!=0 X>=0 sharedMemory )
------------------------------

 [0x7fc34b13e590]	mov	qword ptr [vfp], &GPR_0073		# S8MemReg, SymRef  <pending push temp 0>[#396  Auto] [flags 0x4007 0x800 ]

============================================================
; Live regs: GPR=1 FPR=0 VRF=0 {&GPR_0073}
------------------------------
 n8n      (  0)  ResolveCHK [#32]                                                                     [0x7fc34b004720] bci=[-1,4,4] rc=0 vc=100 vn=- li=2 udi=- nc=1
 n7n      (  1)    call  BRandom.<init>()V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ]  [0x7fc34b0046d0] bci=[-1,4,4] rc=1 vc=100 vn=- li=2 udi=- nc=1
 n5n      (  4)      ==>new (in &GPR_0073) (X!=0 X>=0 sharedMemory )
------------------------------
------------------------------
 n8n      (  0)  ResolveCHK [#32]                                                                     [0x7fc34b004720] bci=[-1,4,4] rc=0 vc=100 vn=- li=2 udi=- nc=1
 n7n      (  0)    call  BRandom.<init>()V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ]  [0x7fc34b0046d0] bci=[-1,4,4] rc=0 vc=100 vn=- li=2 udi=- nc=1
 n5n      (  3)      ==>new (in &GPR_0073) (X!=0 X>=0 sharedMemory )
------------------------------

 [0x7fc34b13f220]	mov	&GPR_0074, &GPR_0073		# MOV8RegReg
 [0x7fc34b13fba0]	Label L0048:			# label	# (Start of internal control flow)
	 PRE: [&GPR_0074 : eax]
 [0x7fc34b13f500]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b13f460]	call	Snippet Label L0050     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7fc34b13fea0]	assocreg                        # assocreg
	POST: [GPR_0048 : eax] [GPR_0049 : ecx] [GPR_0050 : edx] [GPR_0051 : edi] [GPR_0052 : esi] [GPR_0053 : r8d] [GPR_0054 : r9d] [GPR_0055 : r10d] [GPR_0056 : r11d]
 [0x7fc34b13fc40]	Label L0049:			# label	# (End of internal control flow)
	 PRE: [&GPR_0074 : eax]
	POST: [D_GPR_0075 : eax] [D_GPR_0076 : ecx] [D_GPR_0077 : edx] [D_GPR_0078 : edi] [D_GPR_0079 : esi] [D_GPR_0080 : r8d] [D_GPR_0081 : r10d] [D_GPR_0082 : r11d] [D_GPR_0083 : r12d] [D_GPR_0084 : r13d] [D_GPR_0085 : r14d] [D_GPR_0086 : r15d] [GPR_0000 : ebp]

============================================================
; Live regs: GPR=1 FPR=0 VRF=0 {&GPR_0073}
------------------------------
 n12n     (  0)  astore  <auto slot 1>[#385  Auto] [flags 0x4007 0x0 ] (X!=0 sharedMemory )           [0x7fc34b004860] bci=[-1,7,4] rc=0 vc=100 vn=- li=2 udi=- nc=1 flg=0x4
 n5n      (  3)    ==>new (in &GPR_0073) (X!=0 X>=0 sharedMemory )
------------------------------
------------------------------
 n12n     (  0)  astore  <auto slot 1>[#385  Auto] [flags 0x4007 0x0 ] (X!=0 sharedMemory )           [0x7fc34b004860] bci=[-1,7,4] rc=0 vc=100 vn=- li=2 udi=- nc=1 flg=0x4
 n5n      (  2)    ==>new (in &GPR_0073) (X!=0 X>=0 sharedMemory )
------------------------------

 [0x7fc34b0f0460]	mov	qword ptr [vfp], &GPR_0073		# S8MemReg, SymRef  <auto slot 1>[#398  Auto] [flags 0x4007 0x0 ]

============================================================
; Live regs: GPR=1 FPR=0 VRF=0 {&GPR_0073}
------------------------------
 n14n     (  0)  ResolveCHK [#314]                                                                    [0x7fc34b004900] bci=[-1,8,5] rc=0 vc=100 vn=- li=2 udi=- nc=1
 n13n     (  4)    aload  java/lang/System.out Ljava/io/PrintStream;[#386  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7fc34b0048b0] bci=[-1,8,5] rc=4 vc=100 vn=- li=2 udi=- nc=0 flg=0x100
------------------------------
------------------------------
 n14n     (  0)  ResolveCHK [#314]                                                                    [0x7fc34b004900] bci=[-1,8,5] rc=0 vc=100 vn=- li=2 udi=- nc=1
 n13n     (  3)    aload  java/lang/System.out Ljava/io/PrintStream;[#386  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (in &GPR_0088) (X>=0 sharedMemory )  [0x7fc34b0048b0] bci=[-1,8,5] rc=3 vc=100 vn=- li=2 udi=2432 nc=0 flg=0x100
------------------------------

 [0x7fc34b0f0a90]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b0f0a00]	mov	&GPR_0088, qword ptr [$0x0000000000000000]		# L8RegMem, SymRef  java/lang/System.out Ljava/io/PrintStream;[#399  unresolved volatile Static] [flags 0x2307 0x0 ]

============================================================
; Live regs: GPR=2 FPR=0 VRF=0 {&GPR_0088, &GPR_0073}
------------------------------
 n19n     (  0)  astore  <pending push temp 0>[#384  Auto] [flags 0x4007 0x800 ]                      [0x7fc34b004a90] bci=[-1,12,5] rc=0 vc=100 vn=- li=2 udi=- nc=1
 n13n     (  3)    ==>aload (in &GPR_0088) (X>=0 sharedMemory )
------------------------------
------------------------------
 n19n     (  0)  astore  <pending push temp 0>[#384  Auto] [flags 0x4007 0x800 ]                      [0x7fc34b004a90] bci=[-1,12,5] rc=0 vc=100 vn=- li=2 udi=- nc=1
 n13n     (  2)    ==>aload (in &GPR_0088) (X>=0 sharedMemory )
------------------------------

 [0x7fc34b0f0e40]	mov	qword ptr [vfp], &GPR_0088		# S8MemReg, SymRef  <pending push temp 0>[#400  Auto] [flags 0x4007 0x800 ]

============================================================
; Live regs: GPR=2 FPR=0 VRF=0 {&GPR_0088, &GPR_0073}
------------------------------
 n18n     (  0)  ResolveCHK [#32]                                                                     [0x7fc34b004a40] bci=[-1,12,5] rc=0 vc=100 vn=- li=2 udi=- nc=1
 n17n     (  4)    acalli  BRandom.getP()QBPoint;[#387  unresolved virtual Method] [flags 0x400 0x0 ] (X>=0 sharedMemory )  [0x7fc34b0049f0] bci=[-1,12,5] rc=4 vc=100 vn=- li=2 udi=- nc=2 flg=0x100
 n16n     (  1)      aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )     [0x7fc34b0049a0] bci=[-1,12,5] rc=1 vc=100 vn=- li=2 udi=- nc=1 flg=0x4
 n5n      (  2)        ==>new (in &GPR_0073) (X!=0 X>=0 sharedMemory )
 n5n      (  2)      ==>new (in &GPR_0073) (X!=0 X>=0 sharedMemory )
------------------------------
buildVirtualOrComputedCall(00007FC34B0049F0), isComputed=0
------------------------------
 n18n     (  0)  ResolveCHK [#32]                                                                     [0x7fc34b004a40] bci=[-1,12,5] rc=0 vc=100 vn=- li=2 udi=- nc=1
 n17n     (  3)    acalli  BRandom.getP()QBPoint;[#387  unresolved virtual Method] [flags 0x400 0x0 ] (in &GPR_0104) (X>=0 sharedMemory )  [0x7fc34b0049f0] bci=[-1,12,5] rc=3 vc=100 vn=- li=2 udi=10256 nc=2 flg=0x100
 n16n     (  0)      aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (in GPR_0091) (X!=0 sharedMemory )  [0x7fc34b0049a0] bci=[-1,12,5] rc=0 vc=100 vn=- li=2 udi=7152 nc=1 flg=0x4
 n5n      (  0)        ==>new (in &GPR_0073) (X!=0 X>=0 sharedMemory )
 n5n      (  0)      ==>new (in &GPR_0073) (X!=0 X>=0 sharedMemory )
------------------------------

 [0x7fc34b0f1930]	mov	&GPR_0089, &GPR_0073		# MOV8RegReg
 [0x7fc34b0f2890]	Label L0052:			# label	# (Start of internal control flow)
	 PRE: [&GPR_0089 : eax]
 [0x7fc34b0f1c70]	mov	GPR_0091, dword ptr [&GPR_0073]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7fc34b0f1d00]	and	GPR_0091, 0xffffffffffffff00	# AND8RegImm4
 [0x7fc34b0f1fa0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b0f1f00]	mov	GPR_0092, 0x0000000000000000	# MOV8RegImm64
 [0x7fc34b0f2040]	cmp	GPR_0092, GPR_0091		# CMP8RegReg
 [0x7fc34b0f20d0]	jne	Snippet Label L0055		# JNE4	# (VPic Data)
 [0x7fc34b0f2170]	call	populateVPicSlotCall    # CALLImm4 (00007FC36F52A5C0)# CALLImm4
 [0x7fc34b0f2b90]	assocreg                        # assocreg
	POST: [D_GPR_0075 : eax] [&GPR_0073 : ebx] [D_GPR_0076 : ecx] [D_GPR_0077 : edx] [D_GPR_0078 : edi] [D_GPR_0079 : esi] [D_GPR_0080 : r8d] [D_GPR_0081 : r10d] [D_GPR_0082 : r11d] [D_GPR_0083 : r12d] [D_GPR_0084 : r13d] [D_GPR_0085 : r14d] [D_GPR_0086 : r15d]
 [0x7fc34b0f2930]	Label L0053:			# label	# (End of internal control flow)
	 PRE: [&GPR_0089 : eax]
	POST: [D_GPR_0093 : ecx] [D_GPR_0094 : edx] [D_GPR_0095 : edi] [D_GPR_0096 : esi] [D_GPR_0097 : r8d] [D_GPR_0098 : r10d] [D_GPR_0099 : r11d] [D_GPR_0100 : r12d] [D_GPR_0101 : r13d] [D_GPR_0102 : r14d] [D_GPR_0103 : r15d] [GPR_0000 : ebp] [&GPR_0104 : eax]

============================================================
; Live regs: GPR=2 FPR=0 VRF=0 {&GPR_0104, &GPR_0088}
------------------------------
 n20n     (  0)  astore  <pending push temp 1>[#388  Auto] [flags 0x4007 0x800 ]                      [0x7fc34b004ae0] bci=[-1,12,5] rc=0 vc=100 vn=- li=2 udi=- nc=1
 n17n     (  3)    ==>acalli (in &GPR_0104) (X>=0 sharedMemory )
------------------------------
------------------------------
 n20n     (  0)  astore  <pending push temp 1>[#388  Auto] [flags 0x4007 0x800 ]                      [0x7fc34b004ae0] bci=[-1,12,5] rc=0 vc=100 vn=- li=2 udi=- nc=1
 n17n     (  2)    ==>acalli (in &GPR_0104) (X>=0 sharedMemory )
------------------------------

 [0x7fc34b0f32f0]	mov	qword ptr [vfp], &GPR_0104		# S8MemReg, SymRef  <pending push temp 1>[#402  Auto] [flags 0x4007 0x800 ]

============================================================
; Live regs: GPR=2 FPR=0 VRF=0 {&GPR_0104, &GPR_0088}
------------------------------
 n25n     (  0)  ResolveAndNULLCHK on n17n [#32]                                                      [0x7fc34b004c70] bci=[-1,15,5] rc=0 vc=100 vn=- li=2 udi=- nc=1
 n24n     (  3)    icalli  BPoint.getX()I[#389  unresolved virtual Method] [flags 0x400 0x0 ]         [0x7fc34b004c20] bci=[-1,15,5] rc=3 vc=100 vn=- li=2 udi=- nc=2
 n23n     (  1)      aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )     [0x7fc34b004bd0] bci=[-1,15,5] rc=1 vc=100 vn=- li=2 udi=- nc=1 flg=0x4
 n17n     (  2)        ==>acalli (in &GPR_0104) (X>=0 sharedMemory )
 n17n     (  2)      ==>acalli (in &GPR_0104) (X>=0 sharedMemory )
------------------------------
buildVirtualOrComputedCall(00007FC34B004C20), isComputed=0
------------------------------
 n25n     (  0)  ResolveAndNULLCHK on n17n [#32]                                                      [0x7fc34b004c70] bci=[-1,15,5] rc=0 vc=100 vn=- li=2 udi=- nc=1
 n24n     (  2)    icalli  BPoint.getX()I[#389  unresolved virtual Method] [flags 0x400 0x0 ] (in GPR_0120)  [0x7fc34b004c20] bci=[-1,15,5] rc=2 vc=100 vn=- li=2 udi=20576 nc=2
 n23n     (  0)      aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (in GPR_0107) (X!=0 sharedMemory )  [0x7fc34b004bd0] bci=[-1,15,5] rc=0 vc=100 vn=- li=2 udi=17328 nc=1 flg=0x4
 n17n     (  0)        ==>acalli (in &GPR_0104) (X!=0 X>=0 sharedMemory )
 n17n     (  0)      ==>acalli (in &GPR_0104) (X!=0 X>=0 sharedMemory )
------------------------------

 [0x7fc34b0f3e10]	mov	&GPR_0105, &GPR_0104		# MOV8RegReg
 [0x7fc34b0f4430]	mov	GPR_0107, dword ptr [&GPR_0104]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7fc34b0f44c0]	and	GPR_0107, 0xffffffffffffff00	# AND8RegImm4
 [0x7fc34b0f50e0]	Label L0056:			# label	# (Start of internal control flow)
	 PRE: [&GPR_0105 : eax]
 [0x7fc34b0f47f0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b0f4750]	mov	GPR_0108, 0x0000000000000000	# MOV8RegImm64
 [0x7fc34b0f4890]	cmp	GPR_0108, GPR_0107		# CMP8RegReg
 [0x7fc34b0f4920]	jne	Snippet Label L0059		# JNE4	# (VPic Data)
 [0x7fc34b0f49c0]	call	populateVPicSlotCall    # CALLImm4 (00007FC36F52A5C0)# CALLImm4
 [0x7fc34b0f53e0]	assocreg                        # assocreg
	POST: [&GPR_0104 : eax] [&GPR_0088 : ebx] [D_GPR_0093 : ecx] [D_GPR_0094 : edx] [D_GPR_0095 : edi] [D_GPR_0096 : esi] [D_GPR_0097 : r8d] [D_GPR_0098 : r10d] [D_GPR_0099 : r11d] [D_GPR_0100 : r12d] [D_GPR_0101 : r13d] [D_GPR_0102 : r14d] [D_GPR_0103 : r15d]
 [0x7fc34b0f5180]	Label L0057:			# label	# (End of internal control flow)
	 PRE: [&GPR_0105 : eax]
	POST: [D_GPR_0109 : ecx] [D_GPR_0110 : edx] [D_GPR_0111 : edi] [D_GPR_0112 : esi] [D_GPR_0113 : r8d] [D_GPR_0114 : r10d] [D_GPR_0115 : r11d] [D_GPR_0116 : r12d] [D_GPR_0117 : r13d] [D_GPR_0118 : r14d] [D_GPR_0119 : r15d] [GPR_0000 : ebp] [GPR_0120 : eax]

============================================================
; Live regs: GPR=2 FPR=0 VRF=0 {GPR_0120, &GPR_0088}
------------------------------
 n26n     (  0)  istore  <pending push temp 1>[#390  Auto] [flags 0x3 0x800 ]                         [0x7fc34b004cc0] bci=[-1,15,5] rc=0 vc=100 vn=- li=2 udi=- nc=1
 n24n     (  2)    ==>icalli (in GPR_0120)
------------------------------
------------------------------
 n26n     (  0)  istore  <pending push temp 1>[#390  Auto] [flags 0x3 0x800 ]                         [0x7fc34b004cc0] bci=[-1,15,5] rc=0 vc=100 vn=- li=2 udi=- nc=1
 n24n     (  1)    ==>icalli (in GPR_0120)
------------------------------

 [0x7fc34b0f5b40]	mov	dword ptr [vfp], GPR_0120		# S4MemReg, SymRef  <pending push temp 1>[#404  Auto] [flags 0x3 0x800 ]

============================================================
; Live regs: GPR=2 FPR=0 VRF=0 {GPR_0120, &GPR_0088}
------------------------------
 n31n     (  0)  ResolveAndNULLCHK on n13n [#32]                                                      [0x7fc34b004e50] bci=[-1,18,5] rc=0 vc=100 vn=- li=2 udi=- nc=1
 n30n     (  1)    calli  java/io/PrintStream.println(I)V[#391  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7fc34b004e00] bci=[-1,18,5] rc=1 vc=100 vn=- li=2 udi=- nc=3 flg=0x20
 n29n     (  1)      aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )     [0x7fc34b004db0] bci=[-1,18,5] rc=1 vc=100 vn=- li=2 udi=- nc=1 flg=0x4
 n13n     (  2)        ==>aload (in &GPR_0088) (X>=0 sharedMemory )
 n13n     (  2)      ==>aload (in &GPR_0088) (X>=0 sharedMemory )
 n24n     (  1)      ==>icalli (in GPR_0120)
------------------------------
buildVirtualOrComputedCall(00007FC34B004E00), isComputed=0
------------------------------
 n31n     (  0)  ResolveAndNULLCHK on n13n [#32]                                                      [0x7fc34b004e50] bci=[-1,18,5] rc=0 vc=100 vn=- li=2 udi=- nc=1
 n30n     (  0)    calli  java/io/PrintStream.println(I)V[#391  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7fc34b004e00] bci=[-1,18,5] rc=0 vc=100 vn=- li=2 udi=- nc=3 flg=0x20
 n29n     (  0)      aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (in GPR_0123) (X!=0 sharedMemory )  [0x7fc34b004db0] bci=[-1,18,5] rc=0 vc=100 vn=- li=2 udi=26832 nc=1 flg=0x4
 n13n     (  0)        ==>aload (in &GPR_0088) (X!=0 X>=0 sharedMemory )
 n13n     (  0)      ==>aload (in &GPR_0088) (X!=0 X>=0 sharedMemory )
 n24n     (  0)      ==>icalli (in GPR_0120)
------------------------------

 [0x7fc34b0f6630]	mov	&GPR_0121, &GPR_0088		# MOV8RegReg
 [0x7fc34b0f66c0]	mov	GPR_0120, GPR_0120		# MOVZXReg8Reg4
 [0x7fc34b0f6950]	mov	GPR_0123, dword ptr [&GPR_0088]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7fc34b0f69e0]	and	GPR_0123, 0xffffffffffffff00	# AND8RegImm4
 [0x7fc34b0f7600]	Label L0060:			# label	# (Start of internal control flow)
	 PRE: [&GPR_0121 : eax] [GPR_0120 : esi]
 [0x7fc34b0f6d10]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b0f6c70]	mov	GPR_0124, 0x0000000000000000	# MOV8RegImm64
 [0x7fc34b0f6db0]	cmp	GPR_0124, GPR_0123		# CMP8RegReg
 [0x7fc34b0f6e40]	jne	Snippet Label L0063		# JNE4	# (VPic Data)
 [0x7fc34b0f6ee0]	call	populateVPicSlotCall    # CALLImm4 (00007FC36F52A5C0)# CALLImm4
 [0x7fc34b0f7900]	assocreg                        # assocreg
	POST: [GPR_0120 : eax] [&GPR_0088 : ebx] [D_GPR_0109 : ecx] [D_GPR_0110 : edx] [D_GPR_0111 : edi] [D_GPR_0112 : esi] [D_GPR_0113 : r8d] [D_GPR_0114 : r10d] [D_GPR_0115 : r11d] [D_GPR_0116 : r12d] [D_GPR_0117 : r13d] [D_GPR_0118 : r14d] [D_GPR_0119 : r15d]
 [0x7fc34b0f76a0]	Label L0061:			# label	# (End of internal control flow)
	 PRE: [&GPR_0121 : eax] [GPR_0120 : esi]
	POST: [D_GPR_0125 : eax] [D_GPR_0126 : ecx] [D_GPR_0127 : edx] [D_GPR_0128 : edi] [D_GPR_0129 : esi] [D_GPR_0130 : r8d] [D_GPR_0131 : r10d] [D_GPR_0132 : r11d] [D_GPR_0133 : r12d] [D_GPR_0134 : r13d] [D_GPR_0135 : r14d] [D_GPR_0136 : r15d] [GPR_0000 : ebp]

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n34n     (  0)  return                                                                               [0x7fc34b004f40] bci=[-1,21,6] rc=0 vc=100 vn=- li=2 udi=- nc=0
------------------------------
------------------------------
 n34n     (  0)  return                                                                               [0x7fc34b004f40] bci=[-1,21,6] rc=0 vc=100 vn=- li=2 udi=- nc=0
------------------------------

 [0x7fc34b0f7f80]	ret                             # RET

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n2n      (  0)  BBEnd </block_2>                                                                     [0x7fc34b004540] bci=[-1,21,6] rc=0 vc=100 vn=- li=2 udi=- nc=0
------------------------------
------------------------------
 n2n      (  0)  BBEnd </block_2>                                                                     [0x7fc34b004540] bci=[-1,21,6] rc=0 vc=100 vn=- li=2 udi=- nc=0
------------------------------

 [0x7fc34b0f8090]	fence Relative [ 00007FC34B050214 ]	# fence BBEnd </block_2>
 [0x7fc34b0f82e0]	assocreg                        # assocreg
	POST: [D_GPR_0125 : eax] [D_GPR_0126 : ecx] [D_GPR_0127 : edx] [D_GPR_0128 : edi] [D_GPR_0129 : esi] [D_GPR_0130 : r8d] [D_GPR_0131 : r10d] [D_GPR_0132 : r11d] [D_GPR_0133 : r12d] [D_GPR_0134 : r13d] [D_GPR_0135 : r14d] [D_GPR_0136 : r15d]
 [0x7fc34b0f83c0]	Label L0064:			# label

============================================================
	instruction selection is complete so free all symbols in the _variableSizeSymRefPendingFreeList

<instructions
	title="Post Instruction Selection Instructions"
	method="BT4.main([Ljava/lang/String;)V"
	hotness="warm">

                +--------------------------------------- instruction address
                |       +------------------------------------------ 
                |       |       +----------------------------------------- instruction
                |       |       |
                V       V       V
 [0x7fc34b13a4c0]	Label L0016:			# label
 [0x7fc34b13a640]	mov	GPR_0016, 0x0000000000229da8	# MOV8RegImm64
 [0x7fc34b13a990]	mov	qword ptr [GPR_0017+0x8], GPR_0018		# S8MemReg, SymRef [#394 +8]
	 PRE: [GPR_0018 : eax] [GPR_0017 : esp]
	POST: [GPR_0018 : eax] [GPR_0017 : esp]
 [0x7fc34b13ac80]	assocreg                        # assocreg
	POST: None
 [0x7fc34b13aa20]	jmp	j2iTransition           # JMP4 (00007FC36FB393C0)# JMP4
	 PRE: [GPR_0016 : edi]
 [0x7fc34b13ad00]	nop			# Alignment (boundary=8, margin=21)
 [0x7fc34b13ad90]	jmp	Label L0016			# JMP4
 [0x7fc34b13ae30]	.short	0xcccc		# DWImm2
 [0x7fc34b13af50]	call	__samplingRecompileMethod# CALLImm4 (00007FC36F581DB0)# CALLImm4
 [0x7fc34b13aff0]	.quad	0x00007fc34981d050		# DQImm64
 [0x7fc34b13b080]	.int	0x00000000		# DDImm4
 [0x7fc34b13b3a0]	assocreg                        # assocreg
	POST: [GPR_0016 : edi]
 [0x7fc34b13b160]	proc                            # proc
	POST: [GPR_0000 : ebp]
 [0x7fc34b13b4e0]	Label L0032:			# label
========================================
 [0x7fc34b13b580]	fence Relative [ 00007FC34B050210 ]	# fence BBStart <block_2> (frequency 10000)
 [0x7fc34b13ba70]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b13b9e0]	lea	GPR_0033, dword ptr [$0x0000000000000000]		# LEA4RegMem, SymRef  unknown class object[#395  unresolved Static] [flags 0x18307 0x0 ]
 [0x7fc34b13d520]	mov	GPR_0052, GPR_0033		# MOV8RegReg
 [0x7fc34b13d5b0]	mov	GPR_0051, GPR_0000		# MOV8RegReg
 [0x7fc34b13ddc0]	assocreg                        # assocreg
	POST: None
 [0x7fc34b13db60]	call	jitNewObject            # CALLImm4 (00007FC36FB13DC0)# CALLImm4
	 PRE: [GPR_0048 : eax] [GPR_0049 : ecx] [GPR_0050 : edx] [GPR_0051 : edi] [GPR_0052 : esi] [GPR_0053 : r8d] [GPR_0054 : r9d] [GPR_0055 : r10d] [GPR_0056 : r11d] [FPR_0057 : xmm0] [FPR_0058 : xmm1] [FPR_0059 : xmm2] [FPR_0060 : xmm3] [FPR_0061 : xmm4] [FPR_0062 : xmm5] [FPR_0063 : xmm6] [FPR_0064 : xmm7] [FPR_0065 : xmm8] [FPR_0066 : xmm9] [FPR_0067 : xmm10] [FPR_0068 : xmm11] [FPR_0069 : xmm12] [FPR_0070 : xmm13] [FPR_0071 : xmm14] [FPR_0072 : xmm15] [GPR_0000 : ebp]
	POST: [GPR_0048 : eax] [GPR_0049 : ecx] [GPR_0050 : edx] [GPR_0051 : edi] [GPR_0052 : esi] [GPR_0053 : r8d] [GPR_0054 : r9d] [GPR_0055 : r10d] [GPR_0056 : r11d] [FPR_0057 : xmm0] [FPR_0058 : xmm1] [FPR_0059 : xmm2] [FPR_0060 : xmm3] [FPR_0061 : xmm4] [FPR_0062 : xmm5] [FPR_0063 : xmm6] [FPR_0064 : xmm7] [FPR_0065 : xmm8] [FPR_0066 : xmm9] [FPR_0067 : xmm10] [FPR_0068 : xmm11] [FPR_0069 : xmm12] [FPR_0070 : xmm13] [FPR_0071 : xmm14] [FPR_0072 : xmm15] [GPR_0000 : ebp]
 [0x7fc34b13df00]	mov	&GPR_0073, GPR_0048		# MOV8RegReg
 [0x7fc34b13e590]	mov	qword ptr [vfp], &GPR_0073		# S8MemReg, SymRef  <pending push temp 0>[#396  Auto] [flags 0x4007 0x800 ]
 [0x7fc34b13f220]	mov	&GPR_0074, &GPR_0073		# MOV8RegReg
 [0x7fc34b13fba0]	Label L0048:			# label	# (Start of internal control flow)
	 PRE: [&GPR_0074 : eax]
 [0x7fc34b13f500]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b13f460]	call	Snippet Label L0050     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7fc34b13fea0]	assocreg                        # assocreg
	POST: [GPR_0048 : eax] [GPR_0049 : ecx] [GPR_0050 : edx] [GPR_0051 : edi] [GPR_0052 : esi] [GPR_0053 : r8d] [GPR_0054 : r9d] [GPR_0055 : r10d] [GPR_0056 : r11d]
 [0x7fc34b13fc40]	Label L0049:			# label	# (End of internal control flow)
	 PRE: [&GPR_0074 : eax]
	POST: [D_GPR_0075 : eax] [D_GPR_0076 : ecx] [D_GPR_0077 : edx] [D_GPR_0078 : edi] [D_GPR_0079 : esi] [D_GPR_0080 : r8d] [D_GPR_0081 : r10d] [D_GPR_0082 : r11d] [D_GPR_0083 : r12d] [D_GPR_0084 : r13d] [D_GPR_0085 : r14d] [D_GPR_0086 : r15d] [GPR_0000 : ebp]
 [0x7fc34b0f0460]	mov	qword ptr [vfp], &GPR_0073		# S8MemReg, SymRef  <auto slot 1>[#398  Auto] [flags 0x4007 0x0 ]
 [0x7fc34b0f0a90]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b0f0a00]	mov	&GPR_0088, qword ptr [$0x0000000000000000]		# L8RegMem, SymRef  java/lang/System.out Ljava/io/PrintStream;[#399  unresolved volatile Static] [flags 0x2307 0x0 ]
 [0x7fc34b0f0e40]	mov	qword ptr [vfp], &GPR_0088		# S8MemReg, SymRef  <pending push temp 0>[#400  Auto] [flags 0x4007 0x800 ]
 [0x7fc34b0f1930]	mov	&GPR_0089, &GPR_0073		# MOV8RegReg
 [0x7fc34b0f2890]	Label L0052:			# label	# (Start of internal control flow)
	 PRE: [&GPR_0089 : eax]
 [0x7fc34b0f1c70]	mov	GPR_0091, dword ptr [&GPR_0073]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7fc34b0f1d00]	and	GPR_0091, 0xffffffffffffff00	# AND8RegImm4
 [0x7fc34b0f1fa0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b0f1f00]	mov	GPR_0092, 0x0000000000000000	# MOV8RegImm64
 [0x7fc34b0f2040]	cmp	GPR_0092, GPR_0091		# CMP8RegReg
 [0x7fc34b0f20d0]	jne	Snippet Label L0055		# JNE4	# (VPic Data)
 [0x7fc34b0f2170]	call	populateVPicSlotCall    # CALLImm4 (00007FC36F52A5C0)# CALLImm4
 [0x7fc34b0f2b90]	assocreg                        # assocreg
	POST: [D_GPR_0075 : eax] [&GPR_0073 : ebx] [D_GPR_0076 : ecx] [D_GPR_0077 : edx] [D_GPR_0078 : edi] [D_GPR_0079 : esi] [D_GPR_0080 : r8d] [D_GPR_0081 : r10d] [D_GPR_0082 : r11d] [D_GPR_0083 : r12d] [D_GPR_0084 : r13d] [D_GPR_0085 : r14d] [D_GPR_0086 : r15d]
 [0x7fc34b0f2930]	Label L0053:			# label	# (End of internal control flow)
	 PRE: [&GPR_0089 : eax]
	POST: [D_GPR_0093 : ecx] [D_GPR_0094 : edx] [D_GPR_0095 : edi] [D_GPR_0096 : esi] [D_GPR_0097 : r8d] [D_GPR_0098 : r10d] [D_GPR_0099 : r11d] [D_GPR_0100 : r12d] [D_GPR_0101 : r13d] [D_GPR_0102 : r14d] [D_GPR_0103 : r15d] [GPR_0000 : ebp] [&GPR_0104 : eax]
 [0x7fc34b0f32f0]	mov	qword ptr [vfp], &GPR_0104		# S8MemReg, SymRef  <pending push temp 1>[#402  Auto] [flags 0x4007 0x800 ]
 [0x7fc34b0f3e10]	mov	&GPR_0105, &GPR_0104		# MOV8RegReg
 [0x7fc34b0f4430]	mov	GPR_0107, dword ptr [&GPR_0104]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7fc34b0f44c0]	and	GPR_0107, 0xffffffffffffff00	# AND8RegImm4
 [0x7fc34b0f50e0]	Label L0056:			# label	# (Start of internal control flow)
	 PRE: [&GPR_0105 : eax]
 [0x7fc34b0f47f0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b0f4750]	mov	GPR_0108, 0x0000000000000000	# MOV8RegImm64
 [0x7fc34b0f4890]	cmp	GPR_0108, GPR_0107		# CMP8RegReg
 [0x7fc34b0f4920]	jne	Snippet Label L0059		# JNE4	# (VPic Data)
 [0x7fc34b0f49c0]	call	populateVPicSlotCall    # CALLImm4 (00007FC36F52A5C0)# CALLImm4
 [0x7fc34b0f53e0]	assocreg                        # assocreg
	POST: [&GPR_0104 : eax] [&GPR_0088 : ebx] [D_GPR_0093 : ecx] [D_GPR_0094 : edx] [D_GPR_0095 : edi] [D_GPR_0096 : esi] [D_GPR_0097 : r8d] [D_GPR_0098 : r10d] [D_GPR_0099 : r11d] [D_GPR_0100 : r12d] [D_GPR_0101 : r13d] [D_GPR_0102 : r14d] [D_GPR_0103 : r15d]
 [0x7fc34b0f5180]	Label L0057:			# label	# (End of internal control flow)
	 PRE: [&GPR_0105 : eax]
	POST: [D_GPR_0109 : ecx] [D_GPR_0110 : edx] [D_GPR_0111 : edi] [D_GPR_0112 : esi] [D_GPR_0113 : r8d] [D_GPR_0114 : r10d] [D_GPR_0115 : r11d] [D_GPR_0116 : r12d] [D_GPR_0117 : r13d] [D_GPR_0118 : r14d] [D_GPR_0119 : r15d] [GPR_0000 : ebp] [GPR_0120 : eax]
 [0x7fc34b0f5b40]	mov	dword ptr [vfp], GPR_0120		# S4MemReg, SymRef  <pending push temp 1>[#404  Auto] [flags 0x3 0x800 ]
 [0x7fc34b0f6630]	mov	&GPR_0121, &GPR_0088		# MOV8RegReg
 [0x7fc34b0f66c0]	mov	GPR_0120, GPR_0120		# MOVZXReg8Reg4
 [0x7fc34b0f6950]	mov	GPR_0123, dword ptr [&GPR_0088]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7fc34b0f69e0]	and	GPR_0123, 0xffffffffffffff00	# AND8RegImm4
 [0x7fc34b0f7600]	Label L0060:			# label	# (Start of internal control flow)
	 PRE: [&GPR_0121 : eax] [GPR_0120 : esi]
 [0x7fc34b0f6d10]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b0f6c70]	mov	GPR_0124, 0x0000000000000000	# MOV8RegImm64
 [0x7fc34b0f6db0]	cmp	GPR_0124, GPR_0123		# CMP8RegReg
 [0x7fc34b0f6e40]	jne	Snippet Label L0063		# JNE4	# (VPic Data)
 [0x7fc34b0f6ee0]	call	populateVPicSlotCall    # CALLImm4 (00007FC36F52A5C0)# CALLImm4
 [0x7fc34b0f7900]	assocreg                        # assocreg
	POST: [GPR_0120 : eax] [&GPR_0088 : ebx] [D_GPR_0109 : ecx] [D_GPR_0110 : edx] [D_GPR_0111 : edi] [D_GPR_0112 : esi] [D_GPR_0113 : r8d] [D_GPR_0114 : r10d] [D_GPR_0115 : r11d] [D_GPR_0116 : r12d] [D_GPR_0117 : r13d] [D_GPR_0118 : r14d] [D_GPR_0119 : r15d]
 [0x7fc34b0f76a0]	Label L0061:			# label	# (End of internal control flow)
	 PRE: [&GPR_0121 : eax] [GPR_0120 : esi]
	POST: [D_GPR_0125 : eax] [D_GPR_0126 : ecx] [D_GPR_0127 : edx] [D_GPR_0128 : edi] [D_GPR_0129 : esi] [D_GPR_0130 : r8d] [D_GPR_0131 : r10d] [D_GPR_0132 : r11d] [D_GPR_0133 : r12d] [D_GPR_0134 : r13d] [D_GPR_0135 : r14d] [D_GPR_0136 : r15d] [GPR_0000 : ebp]
 [0x7fc34b0f7f80]	ret                             # RET
 [0x7fc34b0f8090]	fence Relative [ 00007FC34B050214 ]	# fence BBEnd </block_2>
 [0x7fc34b0f82e0]	assocreg                        # assocreg
	POST: [D_GPR_0125 : eax] [D_GPR_0126 : ecx] [D_GPR_0127 : edx] [D_GPR_0128 : edi] [D_GPR_0129 : esi] [D_GPR_0130 : r8d] [D_GPR_0131 : r10d] [D_GPR_0132 : r11d] [D_GPR_0133 : r12d] [D_GPR_0134 : r13d] [D_GPR_0135 : r14d] [D_GPR_0136 : r15d]
 [0x7fc34b0f83c0]	Label L0064:			# label
</instructions>
totalSlotsInMap is 4, numLocalObjectPaddingSlots is 0

<instructions
	title="Post Register Assignment Instructions"
	method="BT4.main([Ljava/lang/String;)V"
	hotness="warm">

                +--------------------------------------- instruction address
                |       +------------------------------------------ 
                |       |       +----------------------------------------- instruction
                |       |       |
                V       V       V
 [0x7fc34b13a4c0]	Label L0016:			# label
 [0x7fc34b13a640]	mov	rdi, 0x0000000000229da8	# MOV8RegImm64
 [0x7fc34b13a990]	mov	qword ptr [rsp+0x8], rax		# S8MemReg, SymRef [#394 +8]
 [0x7fc34b13ac80]	assocreg                        # assocreg
 [0x7fc34b13aa20]	jmp	j2iTransition           # JMP4 (00007FC36FB393C0)# JMP4
 [0x7fc34b13ad00]	nop			# Alignment (boundary=8, margin=21)
 [0x7fc34b13ad90]	jmp	Label L0016			# JMP4
 [0x7fc34b13ae30]	.short	0xcccc		# DWImm2
 [0x7fc34b13af50]	call	__samplingRecompileMethod# CALLImm4 (00007FC36F581DB0)# CALLImm4
 [0x7fc34b13aff0]	.quad	0x00007fc34981d050		# DQImm64
 [0x7fc34b13b080]	.int	0x00000000		# DDImm4
 [0x7fc34b13b3a0]	assocreg                        # assocreg
 [0x7fc34b13b160]	proc                            # proc
 [0x7fc34b13b4e0]	Label L0032:			# label
========================================
 [0x7fc34b13b580]	fence Relative [ 00007FC34B050210 ]	# fence BBStart <block_2> (frequency 10000)
 [0x7fc34b13ba70]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b13b9e0]	lea	esi, dword ptr [$0x0000000000000000]		# LEA4RegMem, SymRef  unknown class object[#395  unresolved Static] [flags 0x18307 0x0 ]
 [0x7fc34b13d5b0]	mov	rdi, rbp		# MOV8RegReg
 [0x7fc34b13ddc0]	assocreg                        # assocreg
 [0x7fc34b13db60]	call	jitNewObject            # CALLImm4 (00007FC36FB13DC0)# CALLImm4
 [0x7fc34b0f9d00]	mov	rbx, rax		# MOV8RegReg
 [0x7fc34b13e590]	mov	qword ptr [vfp], rbx		# S8MemReg, SymRef  <pending push temp 0>[#396  Auto] [flags 0x4007 0x800 ]
 [0x7fc34b13f220]	mov	rax, rbx		# MOV8RegReg
 [0x7fc34b13fba0]	Label L0048:			# label	# (Start of internal control flow)
 [0x7fc34b13f500]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b13f460]	call	Snippet Label L0050     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7fc34b13fea0]	assocreg                        # assocreg
 [0x7fc34b13fc40]	Label L0049:			# label	# (End of internal control flow)
 [0x7fc34b0f9c30]	mov	r15, rbx		# MOV8RegReg
 [0x7fc34b0f0460]	mov	qword ptr [vfp], r15		# S8MemReg, SymRef  <auto slot 1>[#398  Auto] [flags 0x4007 0x0 ]
 [0x7fc34b0f0a90]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b0f0a00]	mov	rbx, qword ptr [$0x0000000000000000]		# L8RegMem, SymRef  java/lang/System.out Ljava/io/PrintStream;[#399  unresolved volatile Static] [flags 0x2307 0x0 ]
 [0x7fc34b0f0e40]	mov	qword ptr [vfp], rbx		# S8MemReg, SymRef  <pending push temp 0>[#400  Auto] [flags 0x4007 0x800 ]
 [0x7fc34b0f1930]	mov	rax, r15		# MOV8RegReg
 [0x7fc34b0f2890]	Label L0052:			# label	# (Start of internal control flow)
 [0x7fc34b0f1c70]	mov	edx, dword ptr [r15]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7fc34b0f1d00]	and	rdx, 0xffffffffffffff00	# AND8RegImm4
 [0x7fc34b0f1fa0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b0f1f00]	mov	rcx, 0x0000000000000000	# MOV8RegImm64
 [0x7fc34b0f2040]	cmp	rcx, rdx		# CMP8RegReg
 [0x7fc34b0f20d0]	jne	Snippet Label L0055		# JNE4	# (VPic Data)
 [0x7fc34b0f2170]	call	populateVPicSlotCall    # CALLImm4 (00007FC36F52A5C0)# CALLImm4
 [0x7fc34b0f2b90]	assocreg                        # assocreg
 [0x7fc34b0f2930]	Label L0053:			# label	# (End of internal control flow)
 [0x7fc34b0f9aa0]	mov	rdx, rax		# MOV8RegReg
 [0x7fc34b0f32f0]	mov	qword ptr [vfp], rdx		# S8MemReg, SymRef  <pending push temp 1>[#402  Auto] [flags 0x4007 0x800 ]
 [0x7fc34b0f3e10]	mov	rax, rdx		# MOV8RegReg
 [0x7fc34b0f4430]	mov	edx, dword ptr [rdx]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7fc34b0f44c0]	and	rdx, 0xffffffffffffff00	# AND8RegImm4
 [0x7fc34b0f50e0]	Label L0056:			# label	# (Start of internal control flow)
 [0x7fc34b0f47f0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b0f4750]	mov	rcx, 0x0000000000000000	# MOV8RegImm64
 [0x7fc34b0f4890]	cmp	rcx, rdx		# CMP8RegReg
 [0x7fc34b0f4920]	jne	Snippet Label L0059		# JNE4	# (VPic Data)
 [0x7fc34b0f49c0]	call	populateVPicSlotCall    # CALLImm4 (00007FC36F52A5C0)# CALLImm4
 [0x7fc34b0f53e0]	assocreg                        # assocreg
 [0x7fc34b0f5180]	Label L0057:			# label	# (End of internal control flow)
 [0x7fc34b0f9910]	mov	rsi, rax		# MOV8RegReg
 [0x7fc34b0f5b40]	mov	dword ptr [vfp], esi		# S4MemReg, SymRef  <pending push temp 1>[#404  Auto] [flags 0x3 0x800 ]
 [0x7fc34b0f6630]	mov	rax, rbx		# MOV8RegReg
 [0x7fc34b0f66c0]	mov	esi, esi		# MOVZXReg8Reg4
 [0x7fc34b0f6950]	mov	edx, dword ptr [rbx]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7fc34b0f69e0]	and	rdx, 0xffffffffffffff00	# AND8RegImm4
 [0x7fc34b0f7600]	Label L0060:			# label	# (Start of internal control flow)
 [0x7fc34b0f6d10]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b0f6c70]	mov	rcx, 0x0000000000000000	# MOV8RegImm64
 [0x7fc34b0f6db0]	cmp	rcx, rdx		# CMP8RegReg
 [0x7fc34b0f6e40]	jne	Snippet Label L0063		# JNE4	# (VPic Data)
 [0x7fc34b0f6ee0]	call	populateVPicSlotCall    # CALLImm4 (00007FC36F52A5C0)# CALLImm4
 [0x7fc34b0f7900]	assocreg                        # assocreg
 [0x7fc34b0f76a0]	Label L0061:			# label	# (End of internal control flow)
 [0x7fc34b0f7f80]	ret                             # RET
 [0x7fc34b0f8090]	fence Relative [ 00007FC34B050214 ]	# fence BBEnd </block_2>
 [0x7fc34b0f82e0]	assocreg                        # assocreg
 [0x7fc34b0f83c0]	Label L0064:			# label
</instructions>

<instructions
	title="Post Stack Map"
	method="BT4.main([Ljava/lang/String;)V"
	hotness="warm">

 [0x7fc34b13a4c0]	Label L0016:			# label
 [0x7fc34b13a640]	mov	rdi, 0x0000000000229da8	# MOV8RegImm64
 [0x7fc34b13a990]	mov	qword ptr [rsp+0x8], rax		# S8MemReg, SymRef [#394 +8]
 [0x7fc34b13ac80]	assocreg                        # assocreg
 [0x7fc34b13aa20]	jmp	j2iTransition           # JMP4 (00007FC36FB393C0)# JMP4
 [0x7fc34b13ad00]	nop			# Alignment (boundary=8, margin=21)
 [0x7fc34b13ad90]	jmp	Label L0016			# JMP4
 [0x7fc34b13ae30]	.short	0xcccc		# DWImm2
 [0x7fc34b13af50]	call	__samplingRecompileMethod# CALLImm4 (00007FC36F581DB0)# CALLImm4
 [0x7fc34b13aff0]	.quad	0x00007fc34981d050		# DQImm64
 [0x7fc34b13b080]	.int	0x00000000		# DDImm4
 [0x7fc34b13b3a0]	assocreg                        # assocreg
 [0x7fc34b13b160]	proc                            # proc
 [0x7fc34b13b4e0]	Label L0032:			# label
========================================
 [0x7fc34b13b580]	fence Relative [ 00007FC34B050210 ]	# fence BBStart <block_2> (frequency 10000)
 [0x7fc34b13ba70]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b13b9e0]	lea	esi, dword ptr [$0x0000000000000000]		# LEA4RegMem, SymRef  unknown class object[#395  unresolved Static] [flags 0x18307 0x0 ]
 [0x7fc34b13d5b0]	mov	rdi, rbp		# MOV8RegReg
 [0x7fc34b13ddc0]	assocreg                        # assocreg
 [0x7fc34b13db60]	call	jitNewObject            # CALLImm4 (00007FC36FB13DC0)# CALLImm4
 [0x7fc34b0f9d00]	mov	rbx, rax		# MOV8RegReg
 [0x7fc34b13e590]	mov	qword ptr [vfp-0x8], rbx		# S8MemReg, SymRef  <pending push temp 0>[#396  Auto] [flags 0x4007 0x800 ]
 [0x7fc34b13f220]	mov	rax, rbx		# MOV8RegReg
 [0x7fc34b13fba0]	Label L0048:			# label	# (Start of internal control flow)
 [0x7fc34b13f500]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b13f460]	call	Snippet Label L0050     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7fc34b13fea0]	assocreg                        # assocreg
 [0x7fc34b13fc40]	Label L0049:			# label	# (End of internal control flow)
 [0x7fc34b0f9c30]	mov	r15, rbx		# MOV8RegReg
 [0x7fc34b0f0460]	mov	qword ptr [vfp-0x10], r15		# S8MemReg, SymRef  <auto slot 1>[#398  Auto] [flags 0x4007 0x0 ]
 [0x7fc34b0f0a90]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b0f0a00]	mov	rbx, qword ptr [$0x0000000000000000]		# L8RegMem, SymRef  java/lang/System.out Ljava/io/PrintStream;[#399  unresolved volatile Static] [flags 0x2307 0x0 ]
 [0x7fc34b0f0e40]	mov	qword ptr [vfp-0x8], rbx		# S8MemReg, SymRef  <pending push temp 0>[#400  Auto] [flags 0x4007 0x800 ]
 [0x7fc34b0f1930]	mov	rax, r15		# MOV8RegReg
 [0x7fc34b0f2890]	Label L0052:			# label	# (Start of internal control flow)
 [0x7fc34b0f1c70]	mov	edx, dword ptr [r15]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7fc34b0f1d00]	and	rdx, 0xffffffffffffff00	# AND8RegImm4
 [0x7fc34b0f1fa0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b0f1f00]	mov	rcx, 0x0000000000000000	# MOV8RegImm64
 [0x7fc34b0f2040]	cmp	rcx, rdx		# CMP8RegReg
 [0x7fc34b0f20d0]	jne	Snippet Label L0055		# JNE4	# (VPic Data)
 [0x7fc34b0f2170]	call	populateVPicSlotCall    # CALLImm4 (00007FC36F52A5C0)# CALLImm4
 [0x7fc34b0f2b90]	assocreg                        # assocreg
 [0x7fc34b0f2930]	Label L0053:			# label	# (End of internal control flow)
 [0x7fc34b0f9aa0]	mov	rdx, rax		# MOV8RegReg
 [0x7fc34b0f32f0]	mov	qword ptr [vfp-0x18], rdx		# S8MemReg, SymRef  <pending push temp 1>[#402  Auto] [flags 0x4007 0x800 ]
 [0x7fc34b0f3e10]	mov	rax, rdx		# MOV8RegReg
 [0x7fc34b0f4430]	mov	edx, dword ptr [rdx]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7fc34b0f44c0]	and	rdx, 0xffffffffffffff00	# AND8RegImm4
 [0x7fc34b0f50e0]	Label L0056:			# label	# (Start of internal control flow)
 [0x7fc34b0f47f0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b0f4750]	mov	rcx, 0x0000000000000000	# MOV8RegImm64
 [0x7fc34b0f4890]	cmp	rcx, rdx		# CMP8RegReg
 [0x7fc34b0f4920]	jne	Snippet Label L0059		# JNE4	# (VPic Data)
 [0x7fc34b0f49c0]	call	populateVPicSlotCall    # CALLImm4 (00007FC36F52A5C0)# CALLImm4
 [0x7fc34b0f53e0]	assocreg                        # assocreg
 [0x7fc34b0f5180]	Label L0057:			# label	# (End of internal control flow)
 [0x7fc34b0f9910]	mov	rsi, rax		# MOV8RegReg
 [0x7fc34b0f5b40]	mov	dword ptr [vfp-0x1c], esi		# S4MemReg, SymRef  <pending push temp 1>[#404  Auto] [flags 0x3 0x800 ]
 [0x7fc34b0f6630]	mov	rax, rbx		# MOV8RegReg
 [0x7fc34b0f66c0]	mov	esi, esi		# MOVZXReg8Reg4
 [0x7fc34b0f6950]	mov	edx, dword ptr [rbx]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7fc34b0f69e0]	and	rdx, 0xffffffffffffff00	# AND8RegImm4
 [0x7fc34b0f7600]	Label L0060:			# label	# (Start of internal control flow)
 [0x7fc34b0f6d10]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b0f6c70]	mov	rcx, 0x0000000000000000	# MOV8RegImm64
 [0x7fc34b0f6db0]	cmp	rcx, rdx		# CMP8RegReg
 [0x7fc34b0f6e40]	jne	Snippet Label L0063		# JNE4	# (VPic Data)
 [0x7fc34b0f6ee0]	call	populateVPicSlotCall    # CALLImm4 (00007FC36F52A5C0)# CALLImm4
 [0x7fc34b0f7900]	assocreg                        # assocreg
 [0x7fc34b0f76a0]	Label L0061:			# label	# (End of internal control flow)
 [0x7fc34b0f7f80]	ret                             # RET
 [0x7fc34b0f8090]	fence Relative [ 00007FC34B050214 ]	# fence BBEnd </block_2>
 [0x7fc34b0f82e0]	assocreg                        # assocreg
 [0x7fc34b0f83c0]	Label L0064:			# label
</instructions>

<instructions
	title="Post Instruction Expansion Instructions"
	method="BT4.main([Ljava/lang/String;)V"
	hotness="warm">

                 +--------------------------------------- instruction address
                 |        +----------------------------------------- instruction offset from start of method
                 |        |                   +------------------------------------------ corresponding TR::Instruction instance
                 |        |                   |  +-------------------------------------------------- code bytes
                 |        |                   |  |                          +-------------------------------------- opcode and operands
                 |        |                   |  |                          |				+----------- additional information
                 |        |                   |  |                          |				|
                 V        V                   V  V                          V				V
 [0x7fc34b13a4c0]	Label L0016:			# label
 [0x7fc34b13a640]	mov	rdi, 0x0000000000229da8	# MOV8RegImm64
 [0x7fc34b13a990]	mov	qword ptr [rsp+0x8], rax		# S8MemReg, SymRef [#394 +8]
 [0x7fc34b13ac80]	assocreg                        # assocreg
 [0x7fc34b13aa20]	jmp	j2iTransition           # JMP4 (00007FC36FB393C0)# JMP4
 [0x7fc34b13ad00]	nop			# Alignment (boundary=8, margin=21)
 [0x7fc34b13ad90]	jmp	Label L0016			# JMP4
 [0x7fc34b13ae30]	.short	0xcccc		# DWImm2
 [0x7fc34b13af50]	call	__samplingRecompileMethod# CALLImm4 (00007FC36F581DB0)# CALLImm4
 [0x7fc34b13aff0]	.quad	0x00007fc34981d050		# DQImm64
 [0x7fc34b13b080]	.int	0x00000000		# DDImm4
 [0x7fc34b13b3a0]	assocreg                        # assocreg
 [0x7fc34b13b160]	proc                            # proc
 [0x7fc34b13b4e0]	Label L0032:			# label
========================================
 [0x7fc34b13b580]	fence Relative [ 00007FC34B050210 ]	# fence BBStart <block_2> (frequency 10000)
 [0x7fc34b13ba70]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b13b9e0]	lea	esi, dword ptr [$0x0000000000000000]		# LEA4RegMem, SymRef  unknown class object[#395  unresolved Static] [flags 0x18307 0x0 ]
 [0x7fc34b13d5b0]	mov	rdi, rbp		# MOV8RegReg
 [0x7fc34b13ddc0]	assocreg                        # assocreg
 [0x7fc34b13db60]	call	jitNewObject            # CALLImm4 (00007FC36FB13DC0)# CALLImm4
 [0x7fc34b0f9d00]	mov	rbx, rax		# MOV8RegReg
 [0x7fc34b13e590]	mov	qword ptr [vfp-0x8], rbx		# S8MemReg, SymRef  <pending push temp 0>[#396  Auto -8] [flags 0x4007 0x800 ]
 [0x7fc34b13f220]	mov	rax, rbx		# MOV8RegReg
 [0x7fc34b13fba0]	Label L0048:			# label	# (Start of internal control flow)
 [0x7fc34b13f500]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b13f460]	call	Snippet Label L0050     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7fc34b13fea0]	assocreg                        # assocreg
 [0x7fc34b13fc40]	Label L0049:			# label	# (End of internal control flow)
 [0x7fc34b0f9c30]	mov	r15, rbx		# MOV8RegReg
 [0x7fc34b0f0460]	mov	qword ptr [vfp-0x10], r15		# S8MemReg, SymRef  <auto slot 1>[#398  Auto -16] [flags 0x4007 0x0 ]
 [0x7fc34b0f0a90]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b0f0a00]	mov	rbx, qword ptr [$0x0000000000000000]		# L8RegMem, SymRef  java/lang/System.out Ljava/io/PrintStream;[#399  unresolved volatile Static] [flags 0x2307 0x0 ]
 [0x7fc34b0f0e40]	mov	qword ptr [vfp-0x8], rbx		# S8MemReg, SymRef  <pending push temp 0>[#400  Auto -8] [flags 0x4007 0x800 ]
 [0x7fc34b0f1930]	mov	rax, r15		# MOV8RegReg
 [0x7fc34b0f2890]	Label L0052:			# label	# (Start of internal control flow)
 [0x7fc34b0f1c70]	mov	edx, dword ptr [r15]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7fc34b0f1d00]	and	rdx, 0xffffffffffffff00	# AND8RegImm4
 [0x7fc34b0f1fa0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b0f1f00]	mov	rcx, 0x0000000000000000	# MOV8RegImm64
 [0x7fc34b0f2040]	cmp	rcx, rdx		# CMP8RegReg
 [0x7fc34b0f20d0]	jne	Snippet Label L0055		# JNE4	# (VPic Data)
 [0x7fc34b0f2170]	call	populateVPicSlotCall    # CALLImm4 (00007FC36F52A5C0)# CALLImm4
 [0x7fc34b0f2b90]	assocreg                        # assocreg
 [0x7fc34b0f2930]	Label L0053:			# label	# (End of internal control flow)
 [0x7fc34b0f9aa0]	mov	rdx, rax		# MOV8RegReg
 [0x7fc34b0f32f0]	mov	qword ptr [vfp-0x18], rdx		# S8MemReg, SymRef  <pending push temp 1>[#402  Auto -24] [flags 0x4007 0x800 ]
 [0x7fc34b0f3e10]	mov	rax, rdx		# MOV8RegReg
 [0x7fc34b0f4430]	mov	edx, dword ptr [rdx]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7fc34b0f44c0]	and	rdx, 0xffffffffffffff00	# AND8RegImm4
 [0x7fc34b0f50e0]	Label L0056:			# label	# (Start of internal control flow)
 [0x7fc34b0f47f0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b0f4750]	mov	rcx, 0x0000000000000000	# MOV8RegImm64
 [0x7fc34b0f4890]	cmp	rcx, rdx		# CMP8RegReg
 [0x7fc34b0f4920]	jne	Snippet Label L0059		# JNE4	# (VPic Data)
 [0x7fc34b0f49c0]	call	populateVPicSlotCall    # CALLImm4 (00007FC36F52A5C0)# CALLImm4
 [0x7fc34b0f53e0]	assocreg                        # assocreg
 [0x7fc34b0f5180]	Label L0057:			# label	# (End of internal control flow)
 [0x7fc34b0f9910]	mov	rsi, rax		# MOV8RegReg
 [0x7fc34b0f5b40]	mov	dword ptr [vfp-0x1c], esi		# S4MemReg, SymRef  <pending push temp 1>[#404  Auto -28] [flags 0x3 0x800 ]
 [0x7fc34b0f6630]	mov	rax, rbx		# MOV8RegReg
 [0x7fc34b0f66c0]	mov	esi, esi		# MOVZXReg8Reg4
 [0x7fc34b0f6950]	mov	edx, dword ptr [rbx]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7fc34b0f69e0]	and	rdx, 0xffffffffffffff00	# AND8RegImm4
 [0x7fc34b0f7600]	Label L0060:			# label	# (Start of internal control flow)
 [0x7fc34b0f6d10]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b0f6c70]	mov	rcx, 0x0000000000000000	# MOV8RegImm64
 [0x7fc34b0f6db0]	cmp	rcx, rdx		# CMP8RegReg
 [0x7fc34b0f6e40]	jne	Snippet Label L0063		# JNE4	# (VPic Data)
 [0x7fc34b0f6ee0]	call	populateVPicSlotCall    # CALLImm4 (00007FC36F52A5C0)# CALLImm4
 [0x7fc34b0f7900]	assocreg                        # assocreg
 [0x7fc34b0f76a0]	Label L0061:			# label	# (End of internal control flow)
 [0x7fc34b0f7f80]	ret                             # RET
 [0x7fc34b0f8090]	fence Relative [ 00007FC34B050214 ]	# fence BBEnd </block_2>
 [0x7fc34b0f82e0]	assocreg                        # assocreg
 [0x7fc34b0f83c0]	Label L0064:			# label
</instructions>
<proepilogue>
Stack size was 72, and is adjusted by +8 (alignment 16, return address width 8)

Frame size: S- locals=32 frame=72 peak=80

<instructions
	title="VFP Substitution">
 [0x7fc34b13b160]	proc                            # proc
 [0x7fc34b0fd570]	vfpSave			# AdjustFramePtr
 [0x7fc34b0fd690]	cmp	rsp, qword ptr [rbp+0x50]		# CMP8RegMem, SymRef [#407 +80]
 [0x7fc34b0fd840]	Label L0080:			# label	# (Start of internal control flow)
 [0x7fc34b0fd8e0]	jbe	Outlined Label L0082			# JBE4
 [0x7fc34b0fd980]	Label L0081:			# label	# (End of internal control flow)
 [0x7fc34b0fddf0]	sub	rsp, 0x00000048	# SUB8RegImms
	# VFP=esp+72
 [0x7fc34b0fdf10]	mov	qword ptr [rsp+0x20], r9		# S8MemReg, SymRef [#408 +32]
 [0x7fc34b0fe030]	mov	qword ptr [rsp+0x18], rbx		# S8MemReg, SymRef [#409 +24]
 [0x7fc34b0fe150]	mov	qword ptr [rsp+0x50], rax		# S8MemReg, SymRef [#410 +80]
 [0x7fc34b0fd4e0]	vfpSave			# AdjustFramePtr
 [0x7fc34b13b4e0]	Label L0032:			# label
========================================
 [0x7fc34b13b580]	fence Relative [ 00007FC34B050210 ]	# fence BBStart <block_2> (frequency 10000)
 [0x7fc34b13ba70]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b13b9e0]	lea	esi, dword ptr [$0x0000000000000000]		# LEA4RegMem, SymRef  unknown class object[#395  unresolved Static] [flags 0x18307 0x0 ]
 [0x7fc34b13d5b0]	mov	rdi, rbp		# MOV8RegReg
 [0x7fc34b13ddc0]	assocreg                        # assocreg
 [0x7fc34b13db60]	call	jitNewObject            # CALLImm4 (00007FC36FB13DC0)# CALLImm4
 [0x7fc34b0f9d00]	mov	rbx, rax		# MOV8RegReg
 [0x7fc34b13e590]	mov	qword ptr [rsp+0x40], rbx		# S8MemReg, SymRef  <pending push temp 0>[#396  Auto +64] [flags 0x4007 0x800 ]
 [0x7fc34b13f220]	mov	rax, rbx		# MOV8RegReg
 [0x7fc34b13fba0]	Label L0048:			# label	# (Start of internal control flow)
 [0x7fc34b13f500]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b13f460]	call	Snippet Label L0050     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7fc34b13fea0]	assocreg                        # assocreg
 [0x7fc34b13fc40]	Label L0049:			# label	# (End of internal control flow)
 [0x7fc34b0f9c30]	mov	r15, rbx		# MOV8RegReg
 [0x7fc34b0f0460]	mov	qword ptr [rsp+0x38], r15		# S8MemReg, SymRef  <auto slot 1>[#398  Auto +56] [flags 0x4007 0x0 ]
 [0x7fc34b0f0a90]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b0f0a00]	mov	rbx, qword ptr [$0x0000000000000000]		# L8RegMem, SymRef  java/lang/System.out Ljava/io/PrintStream;[#399  unresolved volatile Static] [flags 0x2307 0x0 ]
 [0x7fc34b0f0e40]	mov	qword ptr [rsp+0x40], rbx		# S8MemReg, SymRef  <pending push temp 0>[#400  Auto +64] [flags 0x4007 0x800 ]
 [0x7fc34b0f1930]	mov	rax, r15		# MOV8RegReg
 [0x7fc34b0f2890]	Label L0052:			# label	# (Start of internal control flow)
 [0x7fc34b0f1c70]	mov	edx, dword ptr [r15]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7fc34b0f1d00]	and	rdx, 0xffffffffffffff00	# AND8RegImm4
 [0x7fc34b0f1fa0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b0f1f00]	mov	rcx, 0x0000000000000000	# MOV8RegImm64
 [0x7fc34b0f2040]	cmp	rcx, rdx		# CMP8RegReg
 [0x7fc34b0f20d0]	jne	Snippet Label L0055		# JNE4	# (VPic Data)
 [0x7fc34b0f2170]	call	populateVPicSlotCall    # CALLImm4 (00007FC36F52A5C0)# CALLImm4
 [0x7fc34b0f2b90]	assocreg                        # assocreg
 [0x7fc34b0f2930]	Label L0053:			# label	# (End of internal control flow)
 [0x7fc34b0f9aa0]	mov	rdx, rax		# MOV8RegReg
 [0x7fc34b0f32f0]	mov	qword ptr [rsp+0x30], rdx		# S8MemReg, SymRef  <pending push temp 1>[#402  Auto +48] [flags 0x4007 0x800 ]
 [0x7fc34b0f3e10]	mov	rax, rdx		# MOV8RegReg
 [0x7fc34b0f4430]	mov	edx, dword ptr [rdx]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7fc34b0f44c0]	and	rdx, 0xffffffffffffff00	# AND8RegImm4
 [0x7fc34b0f50e0]	Label L0056:			# label	# (Start of internal control flow)
 [0x7fc34b0f47f0]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b0f4750]	mov	rcx, 0x0000000000000000	# MOV8RegImm64
 [0x7fc34b0f4890]	cmp	rcx, rdx		# CMP8RegReg
 [0x7fc34b0f4920]	jne	Snippet Label L0059		# JNE4	# (VPic Data)
 [0x7fc34b0f49c0]	call	populateVPicSlotCall    # CALLImm4 (00007FC36F52A5C0)# CALLImm4
 [0x7fc34b0f53e0]	assocreg                        # assocreg
 [0x7fc34b0f5180]	Label L0057:			# label	# (End of internal control flow)
 [0x7fc34b0f9910]	mov	rsi, rax		# MOV8RegReg
 [0x7fc34b0f5b40]	mov	dword ptr [rsp+0x2c], esi		# S4MemReg, SymRef  <pending push temp 1>[#404  Auto +44] [flags 0x3 0x800 ]
 [0x7fc34b0f6630]	mov	rax, rbx		# MOV8RegReg
 [0x7fc34b0f66c0]	mov	esi, esi		# MOVZXReg8Reg4
 [0x7fc34b0f6950]	mov	edx, dword ptr [rbx]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7fc34b0f69e0]	and	rdx, 0xffffffffffffff00	# AND8RegImm4
 [0x7fc34b0f7600]	Label L0060:			# label	# (Start of internal control flow)
 [0x7fc34b0f6d10]	nop			# Avoid boundary @8 [0x0:8]
 [0x7fc34b0f6c70]	mov	rcx, 0x0000000000000000	# MOV8RegImm64
 [0x7fc34b0f6db0]	cmp	rcx, rdx		# CMP8RegReg
 [0x7fc34b0f6e40]	jne	Snippet Label L0063		# JNE4	# (VPic Data)
 [0x7fc34b0f6ee0]	call	populateVPicSlotCall    # CALLImm4 (00007FC36F52A5C0)# CALLImm4
 [0x7fc34b0f7900]	assocreg                        # assocreg
 [0x7fc34b0f76a0]	Label L0061:			# label	# (End of internal control flow)
 [0x7fc34b0ff360]	mov	r9, qword ptr [rsp+0x20]		# L8RegMem, SymRef [#411 +32]
 [0x7fc34b0ff480]	mov	rbx, qword ptr [rsp+0x18]		# L8RegMem, SymRef [#412 +24]
 [0x7fc34b0ff510]	add	rsp, 0x00000048	# ADD8RegImms
	# VFP=esp+0
 [0x7fc34b0f7f80]	ret                             # RET
	# VFP=esp+72
 [0x7fc34b0f8090]	fence Relative [ 00007FC34B050214 ]	# fence BBEnd </block_2>
 [0x7fc34b0f82e0]	assocreg                        # assocreg
 [0x7fc34b0f83c0]	Label L0064:			# label
 [0x7fc34b0fda20]	vfpRestore [0x7fc34b0fd570]			# AdjustFramePtr
	# VFP=esp+0
 [0x7fc34b0fdab0]	Outlined Label L0082:			# label
 [0x7fc34b0fdb50]	mov	edi, 0x00000048	# MOV4RegImm4
 [0x7fc34b0fdc70]	call	jitStackOverflow        # CALLImm4 (00007FC36FB13AF0)# CALLImm4
 [0x7fc34b0fdd10]	jmp	Label L0081			# JMP4
</instructions>
</proepilogue>
<encode>
[    12] O^O OMIT HCR CLASS POINTER ASSUMPTION: class=0000000000000000, in code at 00007FC350624A68
</encode>

<instructions
	title="Post Binary Instructions"
	method="BT4.main([Ljava/lang/String;)V"
	hotness="warm">

                 +--------------------------------------- instruction address
                 |        +----------------------------------------- instruction offset from start of method
                 |        |                   +------------------------------------------ corresponding TR::Instruction instance
                 |        |                   |  +-------------------------------------------------- code bytes
                 |        |                   |  |                          +-------------------------------------- opcode and operands
                 |        |                   |  |                          |				+----------- additional information
                 |        |                   |  |                          |				|
                 V        V                   V  V                          V				V
0x7fc350624a10 ffffffd0 [0x7fc34b13a4c0]                                    Label L0016:			# label
0x7fc350624a10 ffffffd0 [0x7fc34b13a640] 48 bf a8 9d 22 00 00 00 00 00      mov	rdi, 0x0000000000229da8	# MOV8RegImm64
0x7fc350624a1a ffffffda [0x7fc34b13a990] 48 89 44 24 08                     mov	qword ptr [rsp+0x8], rax		# S8MemReg, SymRef [#394 +8]
0x7fc350624a1f ffffffdf [0x7fc34b13ac80]                                    assocreg                        # assocreg
0x7fc350624a1f ffffffdf [0x7fc34b13aa20] e9 9c 49 51 1f                     jmp	j2iTransition           # JMP4 (00007FC36FB393C0)# JMP4
0x7fc350624a24 ffffffe4 [0x7fc34b13ad00] 0f 1f 80 00 00 00 00               nop (7 bytes)		# Alignment (boundary=8, margin=21)
0x7fc350624a2b ffffffeb [0x7fc34b13ad90] eb e3                              jmp	Label L0016			# JMP1
0x7fc350624a2d ffffffed [0x7fc34b13ae30] cc cc                              .short	0xcccc		# DWImm2
0x7fc350624a2f ffffffef [0x7fc34b13af50] e8 7c d3 f5 1e                     call	__samplingRecompileMethod# CALLImm4 (00007FC36F581DB0)# CALLImm4
0x7fc350624a34 fffffff4 [0x7fc34b13aff0] 50 d0 81 49 c3 7f 00 00            .quad	0x00007fc34981d050		# DQImm64
0x7fc350624a3c fffffffc [0x7fc34b13b080] 10 00 05 00                        .int	0x00050010		# DDImm4
0x7fc350624a40 00000000 [0x7fc34b13b3a0]                                    assocreg                        # assocreg
0x7fc350624a40 00000000 [0x7fc34b0fd3b0] 48 8b 44 24 08                     mov	rax, qword ptr [rsp+0x8]		# L8RegMem, SymRef [#406 +8]
0x7fc350624a45 00000005 [0x7fc34b0fd440]                                    nop (0 bytes)		# Align patchable code @32 [0x0:2]
0x7fc350624a45 00000005 [0x7fc34b13b160]                                    proc                            # proc
0x7fc350624a45 00000005 [0x7fc34b0fd570]                                    vfpSave			# AdjustFramePtr
0x7fc350624a45 00000005 [0x7fc34b0fd690] 48 3b 65 50                        cmp	rsp, qword ptr [rbp+0x50]		# CMP8RegMem, SymRef [#407 +80]
0x7fc350624a49 00000009 [0x7fc34b0fd840]                                    Label L0080:			# label	# (Start of internal control flow)
0x7fc350624a49 00000009 [0x7fc34b0fd8e0] 0f 86 b1 b5 9d af                  jbe	Outlined Label L0082			# JBE4
0x7fc350624a4f 0000000f [0x7fc34b0fd980]                                    Label L0081:			# label	# (End of internal control flow)
0x7fc350624a4f 0000000f [0x7fc34b0fddf0] 48 83 ec 48                        sub	rsp, 0x00000048	# SUB8RegImms
0x7fc350624a53 00000013 [0x7fc34b0fdf10] 4c 89 4c 24 20                     mov	qword ptr [rsp+0x20], r9		# S8MemReg, SymRef [#408 +32]
0x7fc350624a58 00000018 [0x7fc34b0fe030] 48 89 5c 24 18                     mov	qword ptr [rsp+0x18], rbx		# S8MemReg, SymRef [#409 +24]
0x7fc350624a5d 0000001d [0x7fc34b0fe150] 48 89 44 24 50                     mov	qword ptr [rsp+0x50], rax		# S8MemReg, SymRef [#410 +80]
0x7fc350624a62 00000022 [0x7fc34b0fd4e0]                                    vfpSave			# AdjustFramePtr
0x7fc350624a62 00000022 [0x7fc34b13b4e0]                                    Label L0032:			# label
========================================
0x7fc350624a62 00000022 [0x7fc34b13b580]                                    fence Relative [ 00007FC34B050210 ]	# fence BBStart <block_2> (frequency 10000)
0x7fc350624a62 00000022 [0x7fc34b13ba70] 66 0f 1f 44 00 00                  nop (6 bytes)		# Avoid boundary @8 [0x0:8]
0x7fc350624a68 00000028 [0x7fc34b0ffa00] e8 f1 00 00 00 00 00 00 00 00      mov	rax, 0x0000000000000000	# MOV8RegImm64
0x7fc350624a72 00000032 [0x7fc34b13b9e0] 8d 34 05 00 00 00 00               lea	esi, dword ptr [1*rax]		# LEA4RegMem
0x7fc350624a79 00000039 [0x7fc34b13d5b0] 48 8b fd                           mov	rdi, rbp		# MOV8RegReg
0x7fc350624a7c 0000003c [0x7fc34b13ddc0]                                    assocreg                        # assocreg
0x7fc350624a7c 0000003c [0x7fc34b13db60] e8 3f f3 4e 1f                     call	jitNewObject            # CALLImm4 (00007FC36FB13DC0)# CALLImm4
0x7fc350624a81 00000041 [0x7fc34b0f9d00] 48 8b d8                           mov	rbx, rax		# MOV8RegReg
0x7fc350624a84 00000044 [0x7fc34b13e590] 48 89 5c 24 40                     mov	qword ptr [rsp+0x40], rbx		# S8MemReg, SymRef  <pending push temp 0>[#396  Auto +64] [flags 0x4007 0x800 ]
0x7fc350624a89 00000049 [0x7fc34b13f220] 48 8b c3                           mov	rax, rbx		# MOV8RegReg
0x7fc350624a8c 0000004c [0x7fc34b13fba0]                                    Label L0048:			# label	# (Start of internal control flow)
0x7fc350624a8c 0000004c [0x7fc34b13f500] 0f 1f 40 00                        nop (4 bytes)		# Avoid boundary @8 [0x0:8]
0x7fc350624a90 00000050 [0x7fc34b13f460] e8 6b b5 9d af                     call	Snippet Label L0050     # CALLImm4 (Call Snippet)# CALLImm4
0x7fc350624a95 00000055 [0x7fc34b13fea0]                                    assocreg                        # assocreg
0x7fc350624a95 00000055 [0x7fc34b13fc40]                                    Label L0049:			# label	# (End of internal control flow)
0x7fc350624a95 00000055 [0x7fc34b0f9c30] 4c 8b fb                           mov	r15, rbx		# MOV8RegReg
0x7fc350624a98 00000058 [0x7fc34b0f0460] 4c 89 7c 24 38                     mov	qword ptr [rsp+0x38], r15		# S8MemReg, SymRef  <auto slot 1>[#398  Auto +56] [flags 0x4007 0x0 ]
0x7fc350624a9d 0000005d [0x7fc34b0f0a90] 0f 1f 00                           nop (3 bytes)		# Avoid boundary @8 [0x0:8]
0x7fc350624aa0 00000060 [0x7fc34b0ffb60] e8 f0 00 00 00 00 00 00 00 00      mov	rax, 0x0000000000000000	# MOV8RegImm64
0x7fc350624aaa 0000006a [0x7fc34b0f0a00] 48 8b 1c 05 00 00 00 00            mov	rbx, qword ptr [1*rax]		# L8RegMem
0x7fc350624ab2 00000072 [0x7fc34b0f0e40] 48 89 5c 24 40                     mov	qword ptr [rsp+0x40], rbx		# S8MemReg, SymRef  <pending push temp 0>[#400  Auto +64] [flags 0x4007 0x800 ]
0x7fc350624ab7 00000077 [0x7fc34b0f1930] 49 8b c7                           mov	rax, r15		# MOV8RegReg
0x7fc350624aba 0000007a [0x7fc34b0f2890]                                    Label L0052:			# label	# (Start of internal control flow)
0x7fc350624aba 0000007a [0x7fc34b0f1c70] 41 8b 17                           mov	edx, dword ptr [r15]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
0x7fc350624abd 0000007d [0x7fc34b0f1d00] 48 81 e2 00 ff ff ff               and	rdx, 0xffffffffffffff00	# AND8RegImm4
0x7fc350624ac4 00000084 [0x7fc34b0f1fa0] 0f 1f 40 00                        nop (4 bytes)		# Avoid boundary @8 [0x0:8]
0x7fc350624ac8 00000088 [0x7fc34b0f1f00] e8 93 59 f0 1e 00 00 00 00 00      mov	rcx, 0x0000000000000000	# MOV8RegImm64
0x7fc350624ad2 00000092 [0x7fc34b0f2040] 48 3b ca                           cmp	rcx, rdx		# CMP8RegReg
0x7fc350624ad5 00000095 [0x7fc34b0f20d0] 0f 85 25 b5 9d af                  jne	Snippet Label L0055		# JNE4	# (VPic Data)
0x7fc350624adb 0000009b [0x7fc34b0f2170] e8 e0 5a f0 1e                     call	populateVPicSlotCall    # CALLImm4 (00007FC36F52A5C0)# CALLImm4
0x7fc350624ae0 000000a0 [0x7fc34b0f2b90]                                    assocreg                        # assocreg
0x7fc350624ae0 000000a0 [0x7fc34b0f2930]                                    Label L0053:			# label	# (End of internal control flow)
0x7fc350624ae0 000000a0 [0x7fc34b0f9aa0] 48 8b d0                           mov	rdx, rax		# MOV8RegReg
0x7fc350624ae3 000000a3 [0x7fc34b0f32f0] 48 89 54 24 30                     mov	qword ptr [rsp+0x30], rdx		# S8MemReg, SymRef  <pending push temp 1>[#402  Auto +48] [flags 0x4007 0x800 ]
0x7fc350624ae8 000000a8 [0x7fc34b0f3e10] 48 8b c2                           mov	rax, rdx		# MOV8RegReg
0x7fc350624aeb 000000ab [0x7fc34b0f4430] 8b 12                              mov	edx, dword ptr [rdx]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
0x7fc350624aed 000000ad [0x7fc34b0f44c0] 48 81 e2 00 ff ff ff               and	rdx, 0xffffffffffffff00	# AND8RegImm4
0x7fc350624af4 000000b4 [0x7fc34b0f50e0]                                    Label L0056:			# label	# (Start of internal control flow)
0x7fc350624af4 000000b4 [0x7fc34b0f47f0] 0f 1f 40 00                        nop (4 bytes)		# Avoid boundary @8 [0x0:8]
0x7fc350624af8 000000b8 [0x7fc34b0f4750] e8 63 59 f0 1e 00 00 00 00 00      mov	rcx, 0x0000000000000000	# MOV8RegImm64
0x7fc350624b02 000000c2 [0x7fc34b0f4890] 48 3b ca                           cmp	rcx, rdx		# CMP8RegReg
0x7fc350624b05 000000c5 [0x7fc34b0f4920] 0f 85 f5 b4 9d af                  jne	Snippet Label L0059		# JNE4	# (VPic Data)
0x7fc350624b0b 000000cb [0x7fc34b0f49c0] e8 b0 5a f0 1e                     call	populateVPicSlotCall    # CALLImm4 (00007FC36F52A5C0)# CALLImm4
0x7fc350624b10 000000d0 [0x7fc34b0f53e0]                                    assocreg                        # assocreg
0x7fc350624b10 000000d0 [0x7fc34b0f5180]                                    Label L0057:			# label	# (End of internal control flow)
0x7fc350624b10 000000d0 [0x7fc34b0f9910] 48 8b f0                           mov	rsi, rax		# MOV8RegReg
0x7fc350624b13 000000d3 [0x7fc34b0f5b40] 89 74 24 2c                        mov	dword ptr [rsp+0x2c], esi		# S4MemReg, SymRef  <pending push temp 1>[#404  Auto +44] [flags 0x3 0x800 ]
0x7fc350624b17 000000d7 [0x7fc34b0f6630] 48 8b c3                           mov	rax, rbx		# MOV8RegReg
0x7fc350624b1a 000000da [0x7fc34b0f66c0] 8b f6                              mov	esi, esi		# MOVZXReg8Reg4
0x7fc350624b1c 000000dc [0x7fc34b0f6950] 8b 13                              mov	edx, dword ptr [rbx]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
0x7fc350624b1e 000000de [0x7fc34b0f69e0] 48 81 e2 00 ff ff ff               and	rdx, 0xffffffffffffff00	# AND8RegImm4
0x7fc350624b25 000000e5 [0x7fc34b0f7600]                                    Label L0060:			# label	# (Start of internal control flow)
0x7fc350624b25 000000e5 [0x7fc34b0f6d10] 0f 1f 00                           nop (3 bytes)		# Avoid boundary @8 [0x0:8]
0x7fc350624b28 000000e8 [0x7fc34b0f6c70] e8 33 59 f0 1e 00 00 00 00 00      mov	rcx, 0x0000000000000000	# MOV8RegImm64
0x7fc350624b32 000000f2 [0x7fc34b0f6db0] 48 3b ca                           cmp	rcx, rdx		# CMP8RegReg
0x7fc350624b35 000000f5 [0x7fc34b0f6e40] 0f 85 c5 b4 9d af                  jne	Snippet Label L0063		# JNE4	# (VPic Data)
0x7fc350624b3b 000000fb [0x7fc34b0f6ee0] e8 80 5a f0 1e                     call	populateVPicSlotCall    # CALLImm4 (00007FC36F52A5C0)# CALLImm4
0x7fc350624b40 00000100 [0x7fc34b0f7900]                                    assocreg                        # assocreg
0x7fc350624b40 00000100 [0x7fc34b0f76a0]                                    Label L0061:			# label	# (End of internal control flow)
0x7fc350624b40 00000100 [0x7fc34b0ff360] 4c 8b 4c 24 20                     mov	r9, qword ptr [rsp+0x20]		# L8RegMem, SymRef [#411 +32]
0x7fc350624b45 00000105 [0x7fc34b0ff480] 48 8b 5c 24 18                     mov	rbx, qword ptr [rsp+0x18]		# L8RegMem, SymRef [#412 +24]
0x7fc350624b4a 0000010a [0x7fc34b0ff510] 48 83 c4 48                        add	rsp, 0x00000048	# ADD8RegImms
0x7fc350624b4e 0000010e [0x7fc34b0f7f80] c3                                 ret                             # RET
0x7fc350624b4f 0000010f [0x7fc34b0f8090]                                    fence Relative [ 00007FC34B050214 ]	# fence BBEnd </block_2>
0x7fc350624b4f 0000010f [0x7fc34b0f82e0]                                    assocreg                        # assocreg
0x7fc350624b4f 0000010f [0x7fc34b0f83c0]                                    Label L0064:			# label
0x7fc350624b4f 0000010f [0x7fc34b0fda20]                                    vfpRestore [0x7fc34b0fd570]			# AdjustFramePtr
0x7fc350624b4f 0000010f [0x7fc34b0fdab0]                                    Outlined Label L0082:			# label
0x7fc350624b4f 0000010f [0x7fc34b0fdb50] bf 48 00 00 00                     mov	edi, 0x00000048	# MOV4RegImm4
0x7fc350624b54 00000114 [0x7fc34b0fdc70] e8 97 ef 4e 1f                     call	jitStackOverflow        # CALLImm4 (00007FC36FB13AF0)# CALLImm4
0x7fc350624b59 00000119 [0x7fc34b0fdd10] e9 f1 fe ff ff                     jmp	Label L0081			# JMP4
</instructions>
<snippets>

00007FC350624B5E 0000011e                                                 Snippet Label L0033:		# Unresolved Data Snippet for instr [0x7fc34b0ffa00]
0x7fc350624b5e 0000011e                      e8 6d 71 f0 1e                 call	interpreterUnresolvedClassGlue
0x7fc350624b63 00000123                      c0 9c 22 00 00 00 00 00        .quad	0000000000229CC0	# address of constant pool for this method
0x7fc350624b6b 0000012b                      03 00 00 40                    .int	0x00000003				# constant pool index
0x7fc350624b6f 0000012f                      48 b8                          .short								# REX + op of TR::InstOpCode::MOV8RegImm64

00007FC350624B71 00000131                                                 Snippet Label L0050:		# Call Snippet
0x7fc350624b71 00000131                      48 89 44 24 08                 mov 	qword ptr[rsp+8], rax		#save registers for interpreter call snippet
0x7fc350624b76 00000136                      66 90 e8 a3 6b f0 1e 00 00 00  mov 	rdi, 0x0		# TR::InstOpCode::MOV8RegImm64
0x7fc350624b80 00000140                      00 00 e9 c9 6b                 jmp 	interpreterVoidStaticGlue		# jump out of snippet code

00007FC350624B95 00000155                                                 Snippet Label L0051:		# Unresolved Data Snippet for instr [0x7fc34b0ffb60]
0x7fc350624b95 00000155                      e8 96 72 f0 1e                 call	interpreterUnresolvedStaticFieldGlue
0x7fc350624b9a 0000015a                      c0 9c 22 00 00 00 00 00        .quad	0000000000229CC0	# address of constant pool for this method
0x7fc350624ba2 00000162                      05 00 00 60                    .int	0x00000005				# constant pool index
0x7fc350624ba6 00000166                      48 b8 00 00 00 00 00 00 00 00  .byte	(11)				# patch instruction bytes + TR::InstOpCode::RET

00007FC350624BB4 00000174                                                 <<< VPic Data >>>
0x7fc350624bb4 00000174                      48                             .byte	48								# REX of MOVRegImm64
0x7fc350624bb5 00000175                      b9                             .byte	b9								# MOV opcode of MOVRegImm64
0x7fc350624bb6 00000176                      48                             .byte	48								# REX of CallMem
0x7fc350624bb7 00000177                      92                             .byte	92								# ModRM for TR::InstOpCode::CALLMem
0x7fc350624bb8 00000178                      c0 9c 22 00 00 00 00 00        DQ	0000000000229CC0		# owning method cpAddr
0x7fc350624bc0 00000180                      07 00 00 00 00 00 00 00        DQ	0000000000000007		# cpIndex
0x7fc350624bc8 00000188                      00 00 00 00 00 00 00 00        DQ	0000000000000000		# direct J9Method (initially null)
0x7fc350624bd0 00000190                      f0 70 4f 50 c3 7f 00 00        DQ	00007FC3504F70F0		# j2i virtual thunk

00007FC350624BD8 00000198                                                 Snippet Label L0055:		# VPic Data
0x7fc350624bd8 00000198                      e8 03 5c f0 1e 00 00           call	populateVPicVTableDispatch 		# 00007FC36F52A7E0	patched with vtable call
0x7fc350624bdf 0000019f                      e9 fc fe ff ff                 jmp	Label L0053

00007FC350624BE4 000001a4                                                 <<< VPic Data >>>
0x7fc350624be4 000001a4                      48                             .byte	48								# REX of MOVRegImm64
0x7fc350624be5 000001a5                      b9                             .byte	b9								# MOV opcode of MOVRegImm64
0x7fc350624be6 000001a6                      48                             .byte	48								# REX of CallMem
0x7fc350624be7 000001a7                      92                             .byte	92								# ModRM for TR::InstOpCode::CALLMem
0x7fc350624be8 000001a8                      c0 9c 22 00 00 00 00 00        DQ	0000000000229CC0		# owning method cpAddr
0x7fc350624bf0 000001b0                      08 00 00 00 00 00 00 00        DQ	0000000000000008		# cpIndex
0x7fc350624bf8 000001b8                      00 00 00 00 00 00 00 00        DQ	0000000000000000		# direct J9Method (initially null)
0x7fc350624c00 000001c0                      f0 70 4f 50 c3 7f 00 00        DQ	00007FC3504F70F0		# j2i virtual thunk

00007FC350624C08 000001c8                                                 Snippet Label L0059:		# VPic Data
0x7fc350624c08 000001c8                      e8 d3 5b f0 1e 00 00           call	populateVPicVTableDispatch 		# 00007FC36F52A7E0	patched with vtable call
0x7fc350624c0f 000001cf                      e9 fc fe ff ff                 jmp	Label L0057

00007FC350624C14 000001d4                                                 <<< VPic Data >>>
0x7fc350624c14 000001d4                      48                             .byte	48								# REX of MOVRegImm64
0x7fc350624c15 000001d5                      b9                             .byte	b9								# MOV opcode of MOVRegImm64
0x7fc350624c16 000001d6                      48                             .byte	48								# REX of CallMem
0x7fc350624c17 000001d7                      92                             .byte	92								# ModRM for TR::InstOpCode::CALLMem
0x7fc350624c18 000001d8                      c0 9c 22 00 00 00 00 00        DQ	0000000000229CC0		# owning method cpAddr
0x7fc350624c20 000001e0                      0a 00 00 00 00 00 00 00        DQ	000000000000000A		# cpIndex
0x7fc350624c28 000001e8                      00 00 00 00 00 00 00 00        DQ	0000000000000000		# direct J9Method (initially null)
0x7fc350624c30 000001f0                      f0 6a 4f 50 c3 7f 00 00        DQ	00007FC3504F6AF0		# j2i virtual thunk

00007FC350624C38 000001f8                                                 Snippet Label L0063:		# VPic Data
0x7fc350624c38 000001f8                      e8 a3 5b f0 1e 00 00           call	populateVPicVTableDispatch 		# 00007FC36F52A7E0	patched with vtable call
0x7fc350624c3f 000001ff                      e9 fc fe ff ff                 jmp	Label L0061
</snippets>

<atlas>

Internal stack atlas:
  numberOfMaps=16
  numberOfSlotsMapped=4
  numberOfParmSlots=1
  parmBaseOffset=8
  localBaseOffset=-24

  Locals information : 
  Local [0x7fc34b0056a0] (GC map index :   0, Offset :   8, Size : 8) is an uninitialized collected parm 
  Local [0x7fc34b051100] (GC map index :  -1, Offset : -28, Size : 4) is an uninitialized uncollected auto 
  Local [0x7fc34b050e30] (GC map index :   1, Offset : -24, Size : 8) is an initialized collected auto 
  Local [0x7fc34b0509d0] (GC map index :   2, Offset : -16, Size : 8) is an initialized collected auto 
  Local [0x7fc34b050750] (GC map index :   3, Offset :  -8, Size : 8) is an initialized collected auto 

  No internal pointers in this method

  Map number : 1
  Code offset range starts at [000001fc]
  GC stack map information : 
    number of stack slots mapped = 4
    live stack slots containing addresses --> {0,1,2,3}
  GC register map information : 
    slot pushes: 0    registers: {}

  Map number : 2
  Code offset range starts at [000001cc]
  GC stack map information : 
    number of stack slots mapped = 4
    live stack slots containing addresses --> {0,1,2,3}
  GC register map information : 
    slot pushes: 0    registers: {ebx }

  Map number : 3
  Code offset range starts at [0000019c]
  GC stack map information : 
    number of stack slots mapped = 4
    live stack slots containing addresses --> {0,2,3}
  GC register map information : 
    slot pushes: 0    registers: {ebx }

  Map number : 4
  Code offset range starts at [00000114]
  GC stack map information : 
    number of stack slots mapped = 1
    live stack slots containing addresses --> {}
  GC register map information : 
    slot pushes: 0    registers: {eax }

  Map number : 5
  Code offset range starts at [000000fb]
  GC stack map information : 
    number of stack slots mapped = 4
    live stack slots containing addresses --> {0,1,2,3}
  GC register map information : 
    slot pushes: 0    registers: {}

  Map number : 6
  Code offset range starts at [000000e8]
  GC stack map information : 
    number of stack slots mapped = 4
    live stack slots containing addresses --> {0,1,2,3}
  GC register map information : 
    slot pushes: 0    registers: {}

  Map number : 7
  Code offset range starts at [000000dc]
  GC stack map information : 
    number of stack slots mapped = 4
    live stack slots containing addresses --> {0,1,2,3}
  GC register map information : 
    slot pushes: 0    registers: {eax ebx }

  Map number : 8
  Code offset range starts at [000000cb]
  GC stack map information : 
    number of stack slots mapped = 4
    live stack slots containing addresses --> {0,1,2,3}
  GC register map information : 
    slot pushes: 0    registers: {ebx }

  Map number : 9
  Code offset range starts at [000000b8]
  GC stack map information : 
    number of stack slots mapped = 4
    live stack slots containing addresses --> {0,1,2,3}
  GC register map information : 
    slot pushes: 0    registers: {ebx }

  Map number : 10
  Code offset range starts at [000000ab]
  GC stack map information : 
    number of stack slots mapped = 4
    live stack slots containing addresses --> {0,1,2,3}
  GC register map information : 
    slot pushes: 0    registers: {eax ebx edx }

  Map number : 11
  Code offset range starts at [0000009b]
  GC stack map information : 
    number of stack slots mapped = 4
    live stack slots containing addresses --> {0,2,3}
  GC register map information : 
    slot pushes: 0    registers: {ebx }

  Map number : 12
  Code offset range starts at [00000088]
  GC stack map information : 
    number of stack slots mapped = 4
    live stack slots containing addresses --> {0,2,3}
  GC register map information : 
    slot pushes: 0    registers: {ebx }

  Map number : 13
  Code offset range starts at [00000060]
  GC stack map information : 
    number of stack slots mapped = 4
    live stack slots containing addresses --> {0,2,3}
  GC register map information : 
    slot pushes: 0    registers: {r15d }

  Map number : 14
  Code offset range starts at [00000050]
  GC stack map information : 
    number of stack slots mapped = 4
    live stack slots containing addresses --> {0,3}
  GC register map information : 
    slot pushes: 0    registers: {ebx }

  Map number : 15
  Code offset range starts at [0000003c]
  GC stack map information : 
    number of stack slots mapped = 4
    live stack slots containing addresses --> {0}
  GC register map information : 
    slot pushes: 0    registers: {}

  Map number : 16
  Code offset range starts at [00000028]
  GC stack map information : 
    number of stack slots mapped = 4
    live stack slots containing addresses --> {0}
  GC register map information : 
    slot pushes: 0    registers: {}


</atlas>
Map with code offset range starting at [000000e8] is identical to the previous map [000000fb], merging and eliminating previous
Map with code offset range starting at [000000b8] is identical to the previous map [000000cb], merging and eliminating previous
Map with code offset range starting at [00000088] is identical to the previous map [0000009b], merging and eliminating previous

<instructions
	title="Post Relocation Instructions"
	method="BT4.main([Ljava/lang/String;)V"
	hotness="warm">

                 +--------------------------------------- instruction address
                 |        +----------------------------------------- instruction offset from start of method
                 |        |                   +------------------------------------------ corresponding TR::Instruction instance
                 |        |                   |  +-------------------------------------------------- code bytes
                 |        |                   |  |                          +-------------------------------------- opcode and operands
                 |        |                   |  |                          |				+----------- additional information
                 |        |                   |  |                          |				|
                 V        V                   V  V                          V				V
0x7fc350624a10 ffffffd0 [0x7fc34b13a4c0]                                    Label L0016:			# label
0x7fc350624a10 ffffffd0 [0x7fc34b13a640] 48 bf a8 9d 22 00 00 00 00 00      mov	rdi, 0x0000000000229da8	# MOV8RegImm64
0x7fc350624a1a ffffffda [0x7fc34b13a990] 48 89 44 24 08                     mov	qword ptr [rsp+0x8], rax		# S8MemReg, SymRef [#394 +8]
0x7fc350624a1f ffffffdf [0x7fc34b13ac80]                                    assocreg                        # assocreg
0x7fc350624a1f ffffffdf [0x7fc34b13aa20] e9 9c 49 51 1f                     jmp	j2iTransition           # JMP4 (00007FC36FB393C0)# JMP4
0x7fc350624a24 ffffffe4 [0x7fc34b13ad00] 0f 1f 80 00 00 00 00               nop (7 bytes)		# Alignment (boundary=8, margin=21)
0x7fc350624a2b ffffffeb [0x7fc34b13ad90] eb e3                              jmp	Label L0016			# JMP1
0x7fc350624a2d ffffffed [0x7fc34b13ae30] cc cc                              .short	0xcccc		# DWImm2
0x7fc350624a2f ffffffef [0x7fc34b13af50] e8 7c d3 f5 1e                     call	__samplingRecompileMethod# CALLImm4 (00007FC36F581DB0)# CALLImm4
0x7fc350624a34 fffffff4 [0x7fc34b13aff0] 50 d0 81 49 c3 7f 00 00            .quad	0x00007fc34981d050		# DQImm64
0x7fc350624a3c fffffffc [0x7fc34b13b080] 10 00 05 00                        .int	0x00050010		# DDImm4
0x7fc350624a40 00000000 [0x7fc34b13b3a0]                                    assocreg                        # assocreg
0x7fc350624a40 00000000 [0x7fc34b0fd3b0] 48 8b 44 24 08                     mov	rax, qword ptr [rsp+0x8]		# L8RegMem, SymRef [#406 +8]
0x7fc350624a45 00000005 [0x7fc34b0fd440]                                    nop (0 bytes)		# Align patchable code @32 [0x0:2]
0x7fc350624a45 00000005 [0x7fc34b13b160]                                    proc                            # proc
0x7fc350624a45 00000005 [0x7fc34b0fd570]                                    vfpSave			# AdjustFramePtr
0x7fc350624a45 00000005 [0x7fc34b0fd690] 48 3b 65 50                        cmp	rsp, qword ptr [rbp+0x50]		# CMP8RegMem, SymRef [#407 +80]
0x7fc350624a49 00000009 [0x7fc34b0fd840]                                    Label L0080:			# label	# (Start of internal control flow)
0x7fc350624a49 00000009 [0x7fc34b0fd8e0] 0f 86 00 01 00 00                  jbe	Outlined Label L0082			# JBE4
0x7fc350624a4f 0000000f [0x7fc34b0fd980]                                    Label L0081:			# label	# (End of internal control flow)
0x7fc350624a4f 0000000f [0x7fc34b0fddf0] 48 83 ec 48                        sub	rsp, 0x00000048	# SUB8RegImms
0x7fc350624a53 00000013 [0x7fc34b0fdf10] 4c 89 4c 24 20                     mov	qword ptr [rsp+0x20], r9		# S8MemReg, SymRef [#408 +32]
0x7fc350624a58 00000018 [0x7fc34b0fe030] 48 89 5c 24 18                     mov	qword ptr [rsp+0x18], rbx		# S8MemReg, SymRef [#409 +24]
0x7fc350624a5d 0000001d [0x7fc34b0fe150] 48 89 44 24 50                     mov	qword ptr [rsp+0x50], rax		# S8MemReg, SymRef [#410 +80]
0x7fc350624a62 00000022 [0x7fc34b0fd4e0]                                    vfpSave			# AdjustFramePtr
0x7fc350624a62 00000022 [0x7fc34b13b4e0]                                    Label L0032:			# label
========================================
0x7fc350624a62 00000022 [0x7fc34b13b580]                                    fence Relative [ 00007FC34B050210 ]	# fence BBStart <block_2> (frequency 10000)
0x7fc350624a62 00000022 [0x7fc34b13ba70] 66 0f 1f 44 00 00                  nop (6 bytes)		# Avoid boundary @8 [0x0:8]
0x7fc350624a68 00000028 [0x7fc34b0ffa00] e8 f1 00 00 00 00 00 00 00 00      mov	rax, 0x0000000000000000	# MOV8RegImm64
0x7fc350624a72 00000032 [0x7fc34b13b9e0] 8d 34 05 00 00 00 00               lea	esi, dword ptr [1*rax]		# LEA4RegMem
0x7fc350624a79 00000039 [0x7fc34b13d5b0] 48 8b fd                           mov	rdi, rbp		# MOV8RegReg
0x7fc350624a7c 0000003c [0x7fc34b13ddc0]                                    assocreg                        # assocreg
0x7fc350624a7c 0000003c [0x7fc34b13db60] e8 3f f3 4e 1f                     call	jitNewObject            # CALLImm4 (00007FC36FB13DC0)# CALLImm4
0x7fc350624a81 00000041 [0x7fc34b0f9d00] 48 8b d8                           mov	rbx, rax		# MOV8RegReg
0x7fc350624a84 00000044 [0x7fc34b13e590] 48 89 5c 24 40                     mov	qword ptr [rsp+0x40], rbx		# S8MemReg, SymRef  <pending push temp 0>[#396  Auto +64] [flags 0x4007 0x800 ]
0x7fc350624a89 00000049 [0x7fc34b13f220] 48 8b c3                           mov	rax, rbx		# MOV8RegReg
0x7fc350624a8c 0000004c [0x7fc34b13fba0]                                    Label L0048:			# label	# (Start of internal control flow)
0x7fc350624a8c 0000004c [0x7fc34b13f500] 0f 1f 40 00                        nop (4 bytes)		# Avoid boundary @8 [0x0:8]
0x7fc350624a90 00000050 [0x7fc34b13f460] e8 dc 00 00 00                     call	Snippet Label L0050     # CALLImm4 (Call Snippet)# CALLImm4
0x7fc350624a95 00000055 [0x7fc34b13fea0]                                    assocreg                        # assocreg
0x7fc350624a95 00000055 [0x7fc34b13fc40]                                    Label L0049:			# label	# (End of internal control flow)
0x7fc350624a95 00000055 [0x7fc34b0f9c30] 4c 8b fb                           mov	r15, rbx		# MOV8RegReg
0x7fc350624a98 00000058 [0x7fc34b0f0460] 4c 89 7c 24 38                     mov	qword ptr [rsp+0x38], r15		# S8MemReg, SymRef  <auto slot 1>[#398  Auto +56] [flags 0x4007 0x0 ]
0x7fc350624a9d 0000005d [0x7fc34b0f0a90] 0f 1f 00                           nop (3 bytes)		# Avoid boundary @8 [0x0:8]
0x7fc350624aa0 00000060 [0x7fc34b0ffb60] e8 f0 00 00 00 00 00 00 00 00      mov	rax, 0x0000000000000000	# MOV8RegImm64
0x7fc350624aaa 0000006a [0x7fc34b0f0a00] 48 8b 1c 05 00 00 00 00            mov	rbx, qword ptr [1*rax]		# L8RegMem
0x7fc350624ab2 00000072 [0x7fc34b0f0e40] 48 89 5c 24 40                     mov	qword ptr [rsp+0x40], rbx		# S8MemReg, SymRef  <pending push temp 0>[#400  Auto +64] [flags 0x4007 0x800 ]
0x7fc350624ab7 00000077 [0x7fc34b0f1930] 49 8b c7                           mov	rax, r15		# MOV8RegReg
0x7fc350624aba 0000007a [0x7fc34b0f2890]                                    Label L0052:			# label	# (Start of internal control flow)
0x7fc350624aba 0000007a [0x7fc34b0f1c70] 41 8b 17                           mov	edx, dword ptr [r15]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
0x7fc350624abd 0000007d [0x7fc34b0f1d00] 48 81 e2 00 ff ff ff               and	rdx, 0xffffffffffffff00	# AND8RegImm4
0x7fc350624ac4 00000084 [0x7fc34b0f1fa0] 0f 1f 40 00                        nop (4 bytes)		# Avoid boundary @8 [0x0:8]
0x7fc350624ac8 00000088 [0x7fc34b0f1f00] e8 93 59 f0 1e 00 00 00 00 00      mov	rcx, 0x0000000000000000	# MOV8RegImm64
0x7fc350624ad2 00000092 [0x7fc34b0f2040] 48 3b ca                           cmp	rcx, rdx		# CMP8RegReg
0x7fc350624ad5 00000095 [0x7fc34b0f20d0] 0f 85 fd 00 00 00                  jne	Snippet Label L0055		# JNE4	# (VPic Data)
0x7fc350624adb 0000009b [0x7fc34b0f2170] e8 e0 5a f0 1e                     call	populateVPicSlotCall    # CALLImm4 (00007FC36F52A5C0)# CALLImm4
0x7fc350624ae0 000000a0 [0x7fc34b0f2b90]                                    assocreg                        # assocreg
0x7fc350624ae0 000000a0 [0x7fc34b0f2930]                                    Label L0053:			# label	# (End of internal control flow)
0x7fc350624ae0 000000a0 [0x7fc34b0f9aa0] 48 8b d0                           mov	rdx, rax		# MOV8RegReg
0x7fc350624ae3 000000a3 [0x7fc34b0f32f0] 48 89 54 24 30                     mov	qword ptr [rsp+0x30], rdx		# S8MemReg, SymRef  <pending push temp 1>[#402  Auto +48] [flags 0x4007 0x800 ]
0x7fc350624ae8 000000a8 [0x7fc34b0f3e10] 48 8b c2                           mov	rax, rdx		# MOV8RegReg
0x7fc350624aeb 000000ab [0x7fc34b0f4430] 8b 12                              mov	edx, dword ptr [rdx]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
0x7fc350624aed 000000ad [0x7fc34b0f44c0] 48 81 e2 00 ff ff ff               and	rdx, 0xffffffffffffff00	# AND8RegImm4
0x7fc350624af4 000000b4 [0x7fc34b0f50e0]                                    Label L0056:			# label	# (Start of internal control flow)
0x7fc350624af4 000000b4 [0x7fc34b0f47f0] 0f 1f 40 00                        nop (4 bytes)		# Avoid boundary @8 [0x0:8]
0x7fc350624af8 000000b8 [0x7fc34b0f4750] e8 63 59 f0 1e 00 00 00 00 00      mov	rcx, 0x0000000000000000	# MOV8RegImm64
0x7fc350624b02 000000c2 [0x7fc34b0f4890] 48 3b ca                           cmp	rcx, rdx		# CMP8RegReg
0x7fc350624b05 000000c5 [0x7fc34b0f4920] 0f 85 fd 00 00 00                  jne	Snippet Label L0059		# JNE4	# (VPic Data)
0x7fc350624b0b 000000cb [0x7fc34b0f49c0] e8 b0 5a f0 1e                     call	populateVPicSlotCall    # CALLImm4 (00007FC36F52A5C0)# CALLImm4
0x7fc350624b10 000000d0 [0x7fc34b0f53e0]                                    assocreg                        # assocreg
0x7fc350624b10 000000d0 [0x7fc34b0f5180]                                    Label L0057:			# label	# (End of internal control flow)
0x7fc350624b10 000000d0 [0x7fc34b0f9910] 48 8b f0                           mov	rsi, rax		# MOV8RegReg
0x7fc350624b13 000000d3 [0x7fc34b0f5b40] 89 74 24 2c                        mov	dword ptr [rsp+0x2c], esi		# S4MemReg, SymRef  <pending push temp 1>[#404  Auto +44] [flags 0x3 0x800 ]
0x7fc350624b17 000000d7 [0x7fc34b0f6630] 48 8b c3                           mov	rax, rbx		# MOV8RegReg
0x7fc350624b1a 000000da [0x7fc34b0f66c0] 8b f6                              mov	esi, esi		# MOVZXReg8Reg4
0x7fc350624b1c 000000dc [0x7fc34b0f6950] 8b 13                              mov	edx, dword ptr [rbx]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
0x7fc350624b1e 000000de [0x7fc34b0f69e0] 48 81 e2 00 ff ff ff               and	rdx, 0xffffffffffffff00	# AND8RegImm4
0x7fc350624b25 000000e5 [0x7fc34b0f7600]                                    Label L0060:			# label	# (Start of internal control flow)
0x7fc350624b25 000000e5 [0x7fc34b0f6d10] 0f 1f 00                           nop (3 bytes)		# Avoid boundary @8 [0x0:8]
0x7fc350624b28 000000e8 [0x7fc34b0f6c70] e8 33 59 f0 1e 00 00 00 00 00      mov	rcx, 0x0000000000000000	# MOV8RegImm64
0x7fc350624b32 000000f2 [0x7fc34b0f6db0] 48 3b ca                           cmp	rcx, rdx		# CMP8RegReg
0x7fc350624b35 000000f5 [0x7fc34b0f6e40] 0f 85 fd 00 00 00                  jne	Snippet Label L0063		# JNE4	# (VPic Data)
0x7fc350624b3b 000000fb [0x7fc34b0f6ee0] e8 80 5a f0 1e                     call	populateVPicSlotCall    # CALLImm4 (00007FC36F52A5C0)# CALLImm4
0x7fc350624b40 00000100 [0x7fc34b0f7900]                                    assocreg                        # assocreg
0x7fc350624b40 00000100 [0x7fc34b0f76a0]                                    Label L0061:			# label	# (End of internal control flow)
0x7fc350624b40 00000100 [0x7fc34b0ff360] 4c 8b 4c 24 20                     mov	r9, qword ptr [rsp+0x20]		# L8RegMem, SymRef [#411 +32]
0x7fc350624b45 00000105 [0x7fc34b0ff480] 48 8b 5c 24 18                     mov	rbx, qword ptr [rsp+0x18]		# L8RegMem, SymRef [#412 +24]
0x7fc350624b4a 0000010a [0x7fc34b0ff510] 48 83 c4 48                        add	rsp, 0x00000048	# ADD8RegImms
0x7fc350624b4e 0000010e [0x7fc34b0f7f80] c3                                 ret                             # RET
0x7fc350624b4f 0000010f [0x7fc34b0f8090]                                    fence Relative [ 00007FC34B050214 ]	# fence BBEnd </block_2>
0x7fc350624b4f 0000010f [0x7fc34b0f82e0]                                    assocreg                        # assocreg
0x7fc350624b4f 0000010f [0x7fc34b0f83c0]                                    Label L0064:			# label
0x7fc350624b4f 0000010f [0x7fc34b0fda20]                                    vfpRestore [0x7fc34b0fd570]			# AdjustFramePtr
0x7fc350624b4f 0000010f [0x7fc34b0fdab0]                                    Outlined Label L0082:			# label
0x7fc350624b4f 0000010f [0x7fc34b0fdb50] bf 48 00 00 00                     mov	edi, 0x00000048	# MOV4RegImm4
0x7fc350624b54 00000114 [0x7fc34b0fdc70] e8 97 ef 4e 1f                     call	jitStackOverflow        # CALLImm4 (00007FC36FB13AF0)# CALLImm4
0x7fc350624b59 00000119 [0x7fc34b0fdd10] e9 f1 fe ff ff                     jmp	Label L0081			# JMP4
</instructions>
<snippets>

00007FC350624B5E 0000011e                                                 Snippet Label L0033:		# Unresolved Data Snippet for instr [0x7fc34b0ffa00]
0x7fc350624b5e 0000011e                      e8 6d 71 f0 1e                 call	interpreterUnresolvedClassGlue
0x7fc350624b63 00000123                      c0 9c 22 00 00 00 00 00        .quad	0000000000229CC0	# address of constant pool for this method
0x7fc350624b6b 0000012b                      03 00 00 40                    .int	0x00000003				# constant pool index
0x7fc350624b6f 0000012f                      48 b8                          .short								# REX + op of TR::InstOpCode::MOV8RegImm64

00007FC350624B71 00000131                                                 Snippet Label L0050:		# Call Snippet
0x7fc350624b71 00000131                      48 89 44 24 08                 mov 	qword ptr[rsp+8], rax		#save registers for interpreter call snippet
0x7fc350624b76 00000136                      66 90 e8 a3 6b f0 1e 00 00 00  mov 	rdi, 0x0		# TR::InstOpCode::MOV8RegImm64
0x7fc350624b80 00000140                      00 00 e9 c9 6b                 jmp 	interpreterVoidStaticGlue		# jump out of snippet code

00007FC350624B95 00000155                                                 Snippet Label L0051:		# Unresolved Data Snippet for instr [0x7fc34b0ffb60]
0x7fc350624b95 00000155                      e8 96 72 f0 1e                 call	interpreterUnresolvedStaticFieldGlue
0x7fc350624b9a 0000015a                      c0 9c 22 00 00 00 00 00        .quad	0000000000229CC0	# address of constant pool for this method
0x7fc350624ba2 00000162                      05 00 00 60                    .int	0x00000005				# constant pool index
0x7fc350624ba6 00000166                      48 b8 00 00 00 00 00 00 00 00  .byte	(11)				# patch instruction bytes + TR::InstOpCode::RET

00007FC350624BB4 00000174                                                 <<< VPic Data >>>
0x7fc350624bb4 00000174                      48                             .byte	48								# REX of MOVRegImm64
0x7fc350624bb5 00000175                      b9                             .byte	b9								# MOV opcode of MOVRegImm64
0x7fc350624bb6 00000176                      48                             .byte	48								# REX of CallMem
0x7fc350624bb7 00000177                      92                             .byte	92								# ModRM for TR::InstOpCode::CALLMem
0x7fc350624bb8 00000178                      c0 9c 22 00 00 00 00 00        DQ	0000000000229CC0		# owning method cpAddr
0x7fc350624bc0 00000180                      07 00 00 00 00 00 00 00        DQ	0000000000000007		# cpIndex
0x7fc350624bc8 00000188                      00 00 00 00 00 00 00 00        DQ	0000000000000000		# direct J9Method (initially null)
0x7fc350624bd0 00000190                      f0 70 4f 50 c3 7f 00 00        DQ	00007FC3504F70F0		# j2i virtual thunk

00007FC350624BD8 00000198                                                 Snippet Label L0055:		# VPic Data
0x7fc350624bd8 00000198                      e8 03 5c f0 1e 00 00           call	populateVPicVTableDispatch 		# 00007FC36F52A7E0	patched with vtable call
0x7fc350624bdf 0000019f                      e9 fc fe ff ff                 jmp	Label L0053

00007FC350624BE4 000001a4                                                 <<< VPic Data >>>
0x7fc350624be4 000001a4                      48                             .byte	48								# REX of MOVRegImm64
0x7fc350624be5 000001a5                      b9                             .byte	b9								# MOV opcode of MOVRegImm64
0x7fc350624be6 000001a6                      48                             .byte	48								# REX of CallMem
0x7fc350624be7 000001a7                      92                             .byte	92								# ModRM for TR::InstOpCode::CALLMem
0x7fc350624be8 000001a8                      c0 9c 22 00 00 00 00 00        DQ	0000000000229CC0		# owning method cpAddr
0x7fc350624bf0 000001b0                      08 00 00 00 00 00 00 00        DQ	0000000000000008		# cpIndex
0x7fc350624bf8 000001b8                      00 00 00 00 00 00 00 00        DQ	0000000000000000		# direct J9Method (initially null)
0x7fc350624c00 000001c0                      f0 70 4f 50 c3 7f 00 00        DQ	00007FC3504F70F0		# j2i virtual thunk

00007FC350624C08 000001c8                                                 Snippet Label L0059:		# VPic Data
0x7fc350624c08 000001c8                      e8 d3 5b f0 1e 00 00           call	populateVPicVTableDispatch 		# 00007FC36F52A7E0	patched with vtable call
0x7fc350624c0f 000001cf                      e9 fc fe ff ff                 jmp	Label L0057

00007FC350624C14 000001d4                                                 <<< VPic Data >>>
0x7fc350624c14 000001d4                      48                             .byte	48								# REX of MOVRegImm64
0x7fc350624c15 000001d5                      b9                             .byte	b9								# MOV opcode of MOVRegImm64
0x7fc350624c16 000001d6                      48                             .byte	48								# REX of CallMem
0x7fc350624c17 000001d7                      92                             .byte	92								# ModRM for TR::InstOpCode::CALLMem
0x7fc350624c18 000001d8                      c0 9c 22 00 00 00 00 00        DQ	0000000000229CC0		# owning method cpAddr
0x7fc350624c20 000001e0                      0a 00 00 00 00 00 00 00        DQ	000000000000000A		# cpIndex
0x7fc350624c28 000001e8                      00 00 00 00 00 00 00 00        DQ	0000000000000000		# direct J9Method (initially null)
0x7fc350624c30 000001f0                      f0 6a 4f 50 c3 7f 00 00        DQ	00007FC3504F6AF0		# j2i virtual thunk

00007FC350624C38 000001f8                                                 Snippet Label L0063:		# VPic Data
0x7fc350624c38 000001f8                      e8 a3 5b f0 1e 00 00           call	populateVPicVTableDispatch 		# 00007FC36F52A7E0	patched with vtable call
0x7fc350624c3f 000001ff                      e9 fc fe ff ff                 jmp	Label L0061
</snippets>
</codegen>
<metadata>
J9JITExceptionTable [00007FC3499000B8]
CP=[0000000000229CC0], slots=[0000000000000001], NumExcpRanges=[0000000000000000], size=[00000000000001CB]
startPC=     [00007FC350624A40]
endWarmPC=   [00007FC350624C44]
startColdPC= [0000000000000000]
endPC=       [00007FC350624C44]
hotness=     [2]
scalarTempSlots=1, objectTempSlots=3
prologuePushes=2, tempOffset=0
registerSaveDescription=[0000000000000202]
totalFrameSize=9 { Real Frame Size: 80 }
bodyInfo= [00007FC34981D050]

Stack Atlas:
  numberOfSlotsMapped=4
  numberOfMaps=13
  numberOfMapBytes=1
  parmBaseOffset=8
  numberOfParmSlots=1
  localBaseOffset=-24
  syncObjectTempOffset=-1

Offset info: 
Parm: 	GC Map Index: 0,	Offset: 80 (0x50)
Local: 	GC Map Index: 1,	Offset: 48 (0x30)
Local: 	GC Map Index: 2,	Offset: 56 (0x38)
Local: 	GC Map Index: 3,	Offset: 64 (0x40)
    stackmap location: 00007FC3499001B1
    map range: starting at [00007FC350624A68]
      lowOffset: 00000028
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=0>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [499001B7] { 00000000 }
      registers: 00000000	{ }
      stack map: 1000	{ 80 }

    stackmap location: 00007FC3499001C0
    map range: starting at [00007FC350624A7C]
      lowOffset: 0000003C
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=0>, _isSameReceiver=0, _doNotProfile=1
      ByteCodeInfo Map

    stackmap location: 00007FC3499001C6
    map range: starting at [00007FC350624A90]
      lowOffset: 00000050
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=4>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [499001CC] { 00000000 }
      registers: 00000002	{ 1:ebx }
      stack map: 1001	{ 80 64 }

    stackmap location: 00007FC3499001D5
    map range: starting at [00007FC350624AA0]
      lowOffset: 00000060
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=8>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [499001DB] { 00000000 }
      registers: 00008000	{ 15:r15 }
      stack map: 1011	{ 80 56 64 }

    stackmap location: 00007FC3499001E4
    map range: starting at [00007FC350624AC8]
      lowOffset: 00000088
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=12>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [499001EA] { 00000000 }
      registers: 00000002	{ 1:ebx }
      stack map: 1011	{ 80 56 64 }

    stackmap location: 00007FC3499001F3
    map range: starting at [00007FC350624AEB]
      lowOffset: 000000AB
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=15>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [499001F9] { 00000000 }
      registers: 0000000B	{ 0:eax 1:ebx 3:edx }
      stack map: 1111	{ 80 48 56 64 }

    stackmap location: 00007FC349900202
    map range: starting at [00007FC350624AF8]
      lowOffset: 000000B8
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=15>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [49900208] { 00000000 }
      registers: 00000002	{ 1:ebx }
      stack map: 1111	{ 80 48 56 64 }

    stackmap location: 00007FC349900211
    map range: starting at [00007FC350624B1C]
      lowOffset: 000000DC
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=18>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [49900217] { 00000000 }
      registers: 00000003	{ 0:eax 1:ebx }
      stack map: 1111	{ 80 48 56 64 }

    stackmap location: 00007FC349900220
    map range: starting at [00007FC350624B28]
      lowOffset: 000000E8
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=18>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [49900226] { 00000000 }
      registers: 00000000	{ }
      stack map: 1111	{ 80 48 56 64 }

    stackmap location: 00007FC34990022F
    map range: starting at [00007FC350624B54]
      lowOffset: 00000114
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=0>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [49900235] { 00000000 }
      registers: 7FEE0001	{ 0:eax 17:st(0) 18:st(1) 19:st(2) 21:st(4) 22:st(5) 23:st(6) 24:st(7) 25:xmm0 26:xmm1 27:xmm2 28:xmm3 29:xmm4 30:xmm5 }
      stack map: 0000	{ }

    stackmap location: 00007FC34990023E
    map range: starting at [00007FC350624BDC]
      lowOffset: 0000019C
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=12>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [49900244] { 00000000 }
      registers: 00000002	{ 1:ebx }
      stack map: 1011	{ 80 56 64 }

    stackmap location: 00007FC34990024D
    map range: starting at [00007FC350624C0C]
      lowOffset: 000001CC
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=15>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [49900253] { 00000000 }
      registers: 00000002	{ 1:ebx }
      stack map: 1111	{ 80 48 56 64 }

    stackmap location: 00007FC34990025C
    map range: starting at [00007FC350624C3C]
      lowOffset: 000001FC
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=18>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [49900262] { 00000000 }
      registers: 00000000	{ }
      stack map: 1111	{ 80 48 56 64 }



Method liveMonitor mask: 0000	{ }



</metadata>
<instructions
	title="Mixed Mode Disassembly"
	method="BT4.main([Ljava/lang/String;)V">


 \\ BT4.main([Ljava/lang/String;)V
 \\    0 JBnewdup 3 BRandom

0x7fc350624a10 ffffffd0 [0x7fc34b13a4c0]                                    Label L0016:			# label
0x7fc350624a10 ffffffd0 [0x7fc34b13a640] 48 bf a8 9d 22 00 00 00 00 00      mov	rdi, 0x0000000000229da8	# MOV8RegImm64
0x7fc350624a1a ffffffda [0x7fc34b13a990] 48 89 44 24 08                     mov	qword ptr [rsp+0x8], rax		# S8MemReg, SymRef [#394 +8]
0x7fc350624a1f ffffffdf [0x7fc34b13ac80]                                    assocreg                        # assocreg
0x7fc350624a1f ffffffdf [0x7fc34b13aa20] e9 9c 49 51 1f                     jmp	j2iTransition           # JMP4 (00007FC36FB393C0)# JMP4
0x7fc350624a24 ffffffe4 [0x7fc34b13ad00] 0f 1f 80 00 00 00 00               nop (7 bytes)		# Alignment (boundary=8, margin=21)
0x7fc350624a2b ffffffeb [0x7fc34b13ad90] eb e3                              jmp	Label L0016			# JMP1
0x7fc350624a2d ffffffed [0x7fc34b13ae30] 48 3b                              .short	0xcccc		# DWImm2
0x7fc350624a2f ffffffef [0x7fc34b13af50] e8 7c d3 f5 1e                     call	__samplingRecompileMethod# CALLImm4 (00007FC36F581DB0)# CALLImm4
0x7fc350624a34 fffffff4 [0x7fc34b13aff0] 50 d0 81 49 c3 7f 00 00            .quad	0x00007fc34981d050		# DQImm64
0x7fc350624a3c fffffffc [0x7fc34b13b080] 10 00 05 00                        .int	0x00050010		# DDImm4
0x7fc350624a40 00000000 [0x7fc34b13b3a0]                                    assocreg                        # assocreg
0x7fc350624a40 00000000 [0x7fc34b0fd3b0] 48 8b 44 24 08                     mov	rax, qword ptr [rsp+0x8]		# L8RegMem, SymRef [#406 +8]
0x7fc350624a45 00000005 [0x7fc34b0fd440]                                    nop (0 bytes)		# Align patchable code @32 [0x0:2]
0x7fc350624a45 00000005 [0x7fc34b13b160]                                    proc                            # proc
0x7fc350624a45 00000005 [0x7fc34b0fd570]                                    vfpSave			# AdjustFramePtr
0x7fc350624a45 00000005 [0x7fc34b0fd690] 48 3b 65 50                        cmp	rsp, qword ptr [rbp+0x50]		# CMP8RegMem, SymRef [#407 +80]
0x7fc350624a49 00000009 [0x7fc34b0fd840]                                    Label L0080:			# label	# (Start of internal control flow)
0x7fc350624a49 00000009 [0x7fc34b0fd8e0] 0f 86 00 01 00 00                  jbe	Outlined Label L0082			# JBE4
0x7fc350624a4f 0000000f [0x7fc34b0fd980]                                    Label L0081:			# label	# (End of internal control flow)
0x7fc350624a4f 0000000f [0x7fc34b0fddf0] 48 83 ec 48                        sub	rsp, 0x00000048	# SUB8RegImms
0x7fc350624a53 00000013 [0x7fc34b0fdf10] 4c 89 4c 24 20                     mov	qword ptr [rsp+0x20], r9		# S8MemReg, SymRef [#408 +32]
0x7fc350624a58 00000018 [0x7fc34b0fe030] 48 89 5c 24 18                     mov	qword ptr [rsp+0x18], rbx		# S8MemReg, SymRef [#409 +24]
0x7fc350624a5d 0000001d [0x7fc34b0fe150] 48 89 44 24 50                     mov	qword ptr [rsp+0x50], rax		# S8MemReg, SymRef [#410 +80]
0x7fc350624a62 00000022 [0x7fc34b0fd4e0]                                    vfpSave			# AdjustFramePtr
0x7fc350624a62 00000022 [0x7fc34b13b4e0]                                    Label L0032:			# label
========================================
0x7fc350624a62 00000022 [0x7fc34b13b580]                                    fence Relative [ 00007FC34B050210 ]	# fence BBStart <block_2> (frequency 10000)
0x7fc350624a62 00000022 [0x7fc34b13ba70] 66 0f 1f 44 00 00                  nop (6 bytes)		# Avoid boundary @8 [0x0:8]
0x7fc350624a68 00000028 [0x7fc34b0ffa00] e8 f1 00 00 00 00 00 00 00 00      mov	rax, 0x0000000000000000	# MOV8RegImm64
0x7fc350624a72 00000032 [0x7fc34b13b9e0] 8d 34 05 00 00 00 00               lea	esi, dword ptr [1*rax]		# LEA4RegMem
0x7fc350624a79 00000039 [0x7fc34b13d5b0] 48 8b fd                           mov	rdi, rbp		# MOV8RegReg
0x7fc350624a7c 0000003c [0x7fc34b13ddc0]                                    assocreg                        # assocreg
0x7fc350624a7c 0000003c [0x7fc34b13db60] e8 3f f3 4e 1f                     call	jitNewObject            # CALLImm4 (00007FC36FB13DC0)# CALLImm4
0x7fc350624a81 00000041 [0x7fc34b0f9d00] 48 8b d8                           mov	rbx, rax		# MOV8RegReg

 \\ BT4.main([Ljava/lang/String;)V
 \\    4 JBinvokespecial 4 BRandom.<init>()V

0x7fc350624a84 00000044 [0x7fc34b13e590] 48 89 5c 24 40                     mov	qword ptr [rsp+0x40], rbx		# S8MemReg, SymRef  <pending push temp 0>[#396  Auto +64] [flags 0x4007 0x800 ]

 \\ BT4.main([Ljava/lang/String;)V
 \\    0 JBnewdup 3 BRandom

0x7fc350624a89 00000049 [0x7fc34b13f220] 48 8b c3                           mov	rax, rbx		# MOV8RegReg
0x7fc350624a8c 0000004c [0x7fc34b13fba0]                                    Label L0048:			# label	# (Start of internal control flow)

 \\ BT4.main([Ljava/lang/String;)V
 \\    4 JBinvokespecial 4 BRandom.<init>()V

0x7fc350624a8c 0000004c [0x7fc34b13f500] 0f 1f 40 00                        nop (4 bytes)		# Avoid boundary @8 [0x0:8]
0x7fc350624a90 00000050 [0x7fc34b13f460] e8 dc 00 00 00                     call	Snippet Label L0050     # CALLImm4 (Call Snippet)# CALLImm4
0x7fc350624a95 00000055 [0x7fc34b13fea0]                                    assocreg                        # assocreg
0x7fc350624a95 00000055 [0x7fc34b13fc40]                                    Label L0049:			# label	# (End of internal control flow)
0x7fc350624a95 00000055 [0x7fc34b0f9c30] 4c 8b fb                           mov	r15, rbx		# MOV8RegReg

 \\ BT4.main([Ljava/lang/String;)V
 \\    7 JBastore1 

0x7fc350624a98 00000058 [0x7fc34b0f0460] 4c 89 7c 24 38                     mov	qword ptr [rsp+0x38], r15		# S8MemReg, SymRef  <auto slot 1>[#398  Auto +56] [flags 0x4007 0x0 ]

 \\ BT4.main([Ljava/lang/String;)V
 \\    8 JBgetstatic 5 java/lang/System.out Ljava/io/PrintStream;

0x7fc350624a9d 0000005d [0x7fc34b0f0a90] 0f 1f 00                           nop (3 bytes)		# Avoid boundary @8 [0x0:8]
0x7fc350624aa0 00000060 [0x7fc34b0ffb60] e8 f0 00 00 00 00 00 00 00 00      mov	rax, 0x0000000000000000	# MOV8RegImm64
0x7fc350624aaa 0000006a [0x7fc34b0f0a00] 48 8b 1c 05 00 00 00 00            mov	rbx, qword ptr [1*rax]		# L8RegMem

 \\ BT4.main([Ljava/lang/String;)V
 \\   12 JBinvokevirtual 7 BRandom.getP()QBPoint;

0x7fc350624ab2 00000072 [0x7fc34b0f0e40] 48 89 5c 24 40                     mov	qword ptr [rsp+0x40], rbx		# S8MemReg, SymRef  <pending push temp 0>[#400  Auto +64] [flags 0x4007 0x800 ]

 \\ BT4.main([Ljava/lang/String;)V
 \\    0 JBnewdup 3 BRandom

0x7fc350624ab7 00000077 [0x7fc34b0f1930] 49 8b c7                           mov	rax, r15		# MOV8RegReg
0x7fc350624aba 0000007a [0x7fc34b0f2890]                                    Label L0052:			# label	# (Start of internal control flow)

 \\ BT4.main([Ljava/lang/String;)V
 \\   12 JBinvokevirtual 7 BRandom.getP()QBPoint;

0x7fc350624aba 0000007a [0x7fc34b0f1c70] 41 8b 17                           mov	edx, dword ptr [r15]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
0x7fc350624abd 0000007d [0x7fc34b0f1d00] 48 81 e2 00 ff ff ff               and	rdx, 0xffffffffffffff00	# AND8RegImm4
0x7fc350624ac4 00000084 [0x7fc34b0f1fa0] 0f 1f 40 00                        nop (4 bytes)		# Avoid boundary @8 [0x0:8]
0x7fc350624ac8 00000088 [0x7fc34b0f1f00] e8 93 59 f0 1e 00 00 00 00 00      mov	rcx, 0x0000000000000000	# MOV8RegImm64
0x7fc350624ad2 00000092 [0x7fc34b0f2040] 48 3b ca                           cmp	rcx, rdx		# CMP8RegReg
0x7fc350624ad5 00000095 [0x7fc34b0f20d0] 0f 85 fd 00 00 00                  jne	Snippet Label L0055		# JNE4	# (VPic Data)
0x7fc350624adb 0000009b [0x7fc34b0f2170] e8 e0 5a f0 1e                     call	populateVPicSlotCall    # CALLImm4 (00007FC36F52A5C0)# CALLImm4
0x7fc350624ae0 000000a0 [0x7fc34b0f2b90]                                    assocreg                        # assocreg
0x7fc350624ae0 000000a0 [0x7fc34b0f2930]                                    Label L0053:			# label	# (End of internal control flow)
0x7fc350624ae0 000000a0 [0x7fc34b0f9aa0] 48 8b d0                           mov	rdx, rax		# MOV8RegReg
0x7fc350624ae3 000000a3 [0x7fc34b0f32f0] 48 89 54 24 30                     mov	qword ptr [rsp+0x30], rdx		# S8MemReg, SymRef  <pending push temp 1>[#402  Auto +48] [flags 0x4007 0x800 ]
0x7fc350624ae8 000000a8 [0x7fc34b0f3e10] 48 8b c2                           mov	rax, rdx		# MOV8RegReg

 \\ BT4.main([Ljava/lang/String;)V
 \\   15 JBinvokevirtual 8 BPoint.getX()I

0x7fc350624aeb 000000ab [0x7fc34b0f4430] 8b 12                              mov	edx, dword ptr [rdx]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
0x7fc350624aed 000000ad [0x7fc34b0f44c0] 48 81 e2 00 ff ff ff               and	rdx, 0xffffffffffffff00	# AND8RegImm4
0x7fc350624af4 000000b4 [0x7fc34b0f50e0]                                    Label L0056:			# label	# (Start of internal control flow)
0x7fc350624af4 000000b4 [0x7fc34b0f47f0] 0f 1f 40 00                        nop (4 bytes)		# Avoid boundary @8 [0x0:8]
0x7fc350624af8 000000b8 [0x7fc34b0f4750] e8 63 59 f0 1e 00 00 00 00 00      mov	rcx, 0x0000000000000000	# MOV8RegImm64
0x7fc350624b02 000000c2 [0x7fc34b0f4890] 48 3b ca                           cmp	rcx, rdx		# CMP8RegReg
0x7fc350624b05 000000c5 [0x7fc34b0f4920] 0f 85 fd 00 00 00                  jne	Snippet Label L0059		# JNE4	# (VPic Data)
0x7fc350624b0b 000000cb [0x7fc34b0f49c0] e8 b0 5a f0 1e                     call	populateVPicSlotCall    # CALLImm4 (00007FC36F52A5C0)# CALLImm4
0x7fc350624b10 000000d0 [0x7fc34b0f53e0]                                    assocreg                        # assocreg
0x7fc350624b10 000000d0 [0x7fc34b0f5180]                                    Label L0057:			# label	# (End of internal control flow)
0x7fc350624b10 000000d0 [0x7fc34b0f9910] 48 8b f0                           mov	rsi, rax		# MOV8RegReg
0x7fc350624b13 000000d3 [0x7fc34b0f5b40] 89 74 24 2c                        mov	dword ptr [rsp+0x2c], esi		# S4MemReg, SymRef  <pending push temp 1>[#404  Auto +44] [flags 0x3 0x800 ]

 \\ BT4.main([Ljava/lang/String;)V
 \\    8 JBgetstatic 5 java/lang/System.out Ljava/io/PrintStream;

0x7fc350624b17 000000d7 [0x7fc34b0f6630] 48 8b c3                           mov	rax, rbx		# MOV8RegReg

 \\ BT4.main([Ljava/lang/String;)V
 \\   15 JBinvokevirtual 8 BPoint.getX()I

0x7fc350624b1a 000000da [0x7fc34b0f66c0] 8b f6                              mov	esi, esi		# MOVZXReg8Reg4

 \\ BT4.main([Ljava/lang/String;)V
 \\   18 JBinvokevirtual 10 java/io/PrintStream.println(I)V

0x7fc350624b1c 000000dc [0x7fc34b0f6950] 8b 13                              mov	edx, dword ptr [rbx]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
0x7fc350624b1e 000000de [0x7fc34b0f69e0] 48 81 e2 00 ff ff ff               and	rdx, 0xffffffffffffff00	# AND8RegImm4
0x7fc350624b25 000000e5 [0x7fc34b0f7600]                                    Label L0060:			# label	# (Start of internal control flow)
0x7fc350624b25 000000e5 [0x7fc34b0f6d10] 0f 1f 00                           nop (3 bytes)		# Avoid boundary @8 [0x0:8]
0x7fc350624b28 000000e8 [0x7fc34b0f6c70] e8 33 59 f0 1e 00 00 00 00 00      mov	rcx, 0x0000000000000000	# MOV8RegImm64
0x7fc350624b32 000000f2 [0x7fc34b0f6db0] 48 3b ca                           cmp	rcx, rdx		# CMP8RegReg
0x7fc350624b35 000000f5 [0x7fc34b0f6e40] 0f 85 fd 00 00 00                  jne	Snippet Label L0063		# JNE4	# (VPic Data)
0x7fc350624b3b 000000fb [0x7fc34b0f6ee0] e8 80 5a f0 1e                     call	populateVPicSlotCall    # CALLImm4 (00007FC36F52A5C0)# CALLImm4
0x7fc350624b40 00000100 [0x7fc34b0f7900]                                    assocreg                        # assocreg
0x7fc350624b40 00000100 [0x7fc34b0f76a0]                                    Label L0061:			# label	# (End of internal control flow)
0x7fc350624b40 00000100 [0x7fc34b0ff360] 4c 8b 4c 24 20                     mov	r9, qword ptr [rsp+0x20]		# L8RegMem, SymRef [#411 +32]
0x7fc350624b45 00000105 [0x7fc34b0ff480] 48 8b 5c 24 18                     mov	rbx, qword ptr [rsp+0x18]		# L8RegMem, SymRef [#412 +24]
0x7fc350624b4a 0000010a [0x7fc34b0ff510] 48 83 c4 48                        add	rsp, 0x00000048	# ADD8RegImms

 \\ BT4.main([Ljava/lang/String;)V
 \\   21 JBreturn0 

0x7fc350624b4e 0000010e [0x7fc34b0f7f80] c3                                 ret                             # RET
0x7fc350624b4f 0000010f [0x7fc34b0f8090]                                    fence Relative [ 00007FC34B050214 ]	# fence BBEnd </block_2>
0x7fc350624b4f 0000010f [0x7fc34b0f82e0]                                    assocreg                        # assocreg
0x7fc350624b4f 0000010f [0x7fc34b0f83c0]                                    Label L0064:			# label
0x7fc350624b4f 0000010f [0x7fc34b0fda20]                                    vfpRestore [0x7fc34b0fd570]			# AdjustFramePtr
0x7fc350624b4f 0000010f [0x7fc34b0fdab0]                                    Outlined Label L0082:			# label

 \\ BT4.main([Ljava/lang/String;)V
 \\    0 JBnewdup 3 BRandom

0x7fc350624b4f 0000010f [0x7fc34b0fdb50] bf 48 00 00 00                     mov	edi, 0x00000048	# MOV4RegImm4
0x7fc350624b54 00000114 [0x7fc34b0fdc70] e8 97 ef 4e 1f                     call	jitStackOverflow        # CALLImm4 (00007FC36FB13AF0)# CALLImm4
0x7fc350624b59 00000119 [0x7fc34b0fdd10] e9 f1 fe ff ff                     jmp	Label L0081			# JMP4
</instructions>
<snippets>

00007FC350624B5E 0000011e                                                 Snippet Label L0033:		# Unresolved Data Snippet for instr [0x7fc34b0ffa00]
0x7fc350624b5e 0000011e                      e8 6d 71 f0 1e                 call	interpreterUnresolvedClassGlue
0x7fc350624b63 00000123                      c0 9c 22 00 00 00 00 00        .quad	0000000000229CC0	# address of constant pool for this method
0x7fc350624b6b 0000012b                      03 00 00 40                    .int	0x00000003				# constant pool index
0x7fc350624b6f 0000012f                      48 b8                          .short								# REX + op of TR::InstOpCode::MOV8RegImm64

00007FC350624B71 00000131                                                 Snippet Label L0050:		# Call Snippet
0x7fc350624b71 00000131                      48 89 44 24 08                 mov 	qword ptr[rsp+8], rax		#save registers for interpreter call snippet
0x7fc350624b76 00000136                      66 90 e8 a3 6b f0 1e 00 00 00  mov 	rdi, 0x0		# TR::InstOpCode::MOV8RegImm64
0x7fc350624b80 00000140                      00 00 e9 c9 6b                 jmp 	interpreterVoidStaticGlue		# jump out of snippet code

00007FC350624B95 00000155                                                 Snippet Label L0051:		# Unresolved Data Snippet for instr [0x7fc34b0ffb60]
0x7fc350624b95 00000155                      e8 96 72 f0 1e                 call	interpreterUnresolvedStaticFieldGlue
0x7fc350624b9a 0000015a                      c0 9c 22 00 00 00 00 00        .quad	0000000000229CC0	# address of constant pool for this method
0x7fc350624ba2 00000162                      05 00 00 60                    .int	0x00000005				# constant pool index
0x7fc350624ba6 00000166                      48 b8 00 00 00 00 00 00 00 00  .byte	(11)				# patch instruction bytes + TR::InstOpCode::RET

00007FC350624BB4 00000174                                                 <<< VPic Data >>>
0x7fc350624bb4 00000174                      48                             .byte	48								# REX of MOVRegImm64
0x7fc350624bb5 00000175                      b9                             .byte	b9								# MOV opcode of MOVRegImm64
0x7fc350624bb6 00000176                      48                             .byte	48								# REX of CallMem
0x7fc350624bb7 00000177                      92                             .byte	92								# ModRM for TR::InstOpCode::CALLMem
0x7fc350624bb8 00000178                      c0 9c 22 00 00 00 00 00        DQ	0000000000229CC0		# owning method cpAddr
0x7fc350624bc0 00000180                      07 00 00 00 00 00 00 00        DQ	0000000000000007		# cpIndex
0x7fc350624bc8 00000188                      00 00 00 00 00 00 00 00        DQ	0000000000000000		# direct J9Method (initially null)
0x7fc350624bd0 00000190                      f0 70 4f 50 c3 7f 00 00        DQ	00007FC3504F70F0		# j2i virtual thunk

00007FC350624BD8 00000198                                                 Snippet Label L0055:		# VPic Data
0x7fc350624bd8 00000198                      e8 03 5c f0 1e 00 00           call	populateVPicVTableDispatch 		# 00007FC36F52A7E0	patched with vtable call
0x7fc350624bdf 0000019f                      e9 fc fe ff ff                 jmp	Label L0053

00007FC350624BE4 000001a4                                                 <<< VPic Data >>>
0x7fc350624be4 000001a4                      48                             .byte	48								# REX of MOVRegImm64
0x7fc350624be5 000001a5                      b9                             .byte	b9								# MOV opcode of MOVRegImm64
0x7fc350624be6 000001a6                      48                             .byte	48								# REX of CallMem
0x7fc350624be7 000001a7                      92                             .byte	92								# ModRM for TR::InstOpCode::CALLMem
0x7fc350624be8 000001a8                      c0 9c 22 00 00 00 00 00        DQ	0000000000229CC0		# owning method cpAddr
0x7fc350624bf0 000001b0                      08 00 00 00 00 00 00 00        DQ	0000000000000008		# cpIndex
0x7fc350624bf8 000001b8                      00 00 00 00 00 00 00 00        DQ	0000000000000000		# direct J9Method (initially null)
0x7fc350624c00 000001c0                      f0 70 4f 50 c3 7f 00 00        DQ	00007FC3504F70F0		# j2i virtual thunk

00007FC350624C08 000001c8                                                 Snippet Label L0059:		# VPic Data
0x7fc350624c08 000001c8                      e8 d3 5b f0 1e 00 00           call	populateVPicVTableDispatch 		# 00007FC36F52A7E0	patched with vtable call
0x7fc350624c0f 000001cf                      e9 fc fe ff ff                 jmp	Label L0057

00007FC350624C14 000001d4                                                 <<< VPic Data >>>
0x7fc350624c14 000001d4                      48                             .byte	48								# REX of MOVRegImm64
0x7fc350624c15 000001d5                      b9                             .byte	b9								# MOV opcode of MOVRegImm64
0x7fc350624c16 000001d6                      48                             .byte	48								# REX of CallMem
0x7fc350624c17 000001d7                      92                             .byte	92								# ModRM for TR::InstOpCode::CALLMem
0x7fc350624c18 000001d8                      c0 9c 22 00 00 00 00 00        DQ	0000000000229CC0		# owning method cpAddr
0x7fc350624c20 000001e0                      0a 00 00 00 00 00 00 00        DQ	000000000000000A		# cpIndex
0x7fc350624c28 000001e8                      00 00 00 00 00 00 00 00        DQ	0000000000000000		# direct J9Method (initially null)
0x7fc350624c30 000001f0                      f0 6a 4f 50 c3 7f 00 00        DQ	00007FC3504F6AF0		# j2i virtual thunk

00007FC350624C38 000001f8                                                 Snippet Label L0063:		# VPic Data
0x7fc350624c38 000001f8                      e8 a3 5b f0 1e 00 00           call	populateVPicVTableDispatch 		# 00007FC36F52A7E0	patched with vtable call
0x7fc350624c3f 000001ff                      e9 fc fe ff ff                 jmp	Label L0061
</snippets>
</jitlog>
