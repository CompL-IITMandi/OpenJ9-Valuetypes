<?xml version="1.0" standalone="no"?>
<jitlog>
<!--
MULTIPLE LOG FILES MAY EXIST
Please check for ADDITIONAL log files named:  JITlog.1  JITlog.2  JITlog.3  JITlog.4  JITlog.5  JITlog.6
-->
<compile
	method="BT.foo()V"
	hotness="warm"
	isProfilingCompile=0>
</compile>


=======>BT.foo()V
<ilgen
	method="BT.foo()V">
   <request> {OrdinaryMethod(<NULL>)} </request>

        +------------- Byte Code Index
        |  +-------------------- OpCode
        |  |                        +------------- First Field
        |  |                        |     +------------- Branch Target
        |  |                        |     |      +------- Const Pool Index
        |  |                        |     |      |    +------------- Constant
        |  |                        |     |      |    |
        V  V                        V     V      V    V

        0, JBnewdup                              6
        3, JBdup                
        4, JBiconst0            
        5, JBiconst0            
        6, JBiconst0            
        7, JBiconst0            
        8, JBinvokespecial          7
       11, JBastore1            
       12, JBgetstatic                           8
       15, JBaload1             
       16, JBinvokevirtual         10
       19, JBinvokevirtual         11
       22, JBreturn0            

genIL() returned 1
<trees
	title="Pre IlGenOpt Trees"
	method="BT.foo()V"
	hotness="warm">

Pre IlGenOpt Trees: for BT.foo()V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n24n      BBStart <block_3>                                                                   [0x7f278e840c30] bci=[-1,0,9] rc=0 vc=0 vn=- li=- udi=- nc=0
n28n      ificmpne --> block_2 BBStart at n1n ()                                              [0x7f278e840d70] bci=[-1,0,9] rc=0 vc=0 vn=- li=- udi=- nc=2 flg=0x20
n26n        iload  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ]                [0x7f278e840cd0] bci=[-1,0,9] rc=1 vc=0 vn=- li=- udi=- nc=0
n27n        iconst 1                                                                          [0x7f278e840d20] bci=[-1,0,9] rc=1 vc=0 vn=- li=- udi=- nc=0
n25n      BBEnd </block_3> =====                                                              [0x7f278e840c80] bci=[-1,0,9] rc=0 vc=0 vn=- li=- udi=- nc=0

n29n      BBStart <block_4> (freq 0) (cold)                                                   [0x7f278e840dc0] bci=[-1,0,9] rc=0 vc=0 vn=- li=- udi=- nc=0
n34n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e840f50] bci=[-1,0,9] rc=0 vc=0 vn=- li=- udi=- nc=1
n33n        iadd                                                                              [0x7f278e840f00] bci=[-1,0,9] rc=2 vc=0 vn=- li=- udi=- nc=2
n32n          iload  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]            [0x7f278e840eb0] bci=[-1,0,9] rc=1 vc=0 vn=- li=- udi=- nc=0
n31n          iconst -1                                                                       [0x7f278e840e60] bci=[-1,0,9] rc=1 vc=0 vn=- li=- udi=- nc=0
n36n      ificmpgt --> block_2 BBStart at n1n ()                                              [0x7f278e840ff0] bci=[-1,0,9] rc=0 vc=0 vn=- li=- udi=- nc=2 flg=0x20
n33n        ==>iadd
n35n        iconst 0                                                                          [0x7f278e840fa0] bci=[-1,0,9] rc=1 vc=0 vn=- li=- udi=- nc=0
n30n      BBEnd </block_4> (cold) =====                                                       [0x7f278e840e10] bci=[-1,0,9] rc=0 vc=0 vn=- li=- udi=- nc=0

n37n      BBStart <block_5> (freq 0) (cold)                                                   [0x7f278e841040] bci=[-1,0,9] rc=0 vc=0 vn=- li=- udi=- nc=0
n40n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e841130] bci=[-1,0,9] rc=0 vc=0 vn=- li=- udi=- nc=1
n39n        iconst 0x7fffffff                                                                 [0x7f278e8410e0] bci=[-1,0,9] rc=1 vc=0 vn=- li=- udi=- nc=0
n42n      bstore  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]             [0x7f278e8411d0] bci=[-1,0,9] rc=0 vc=0 vn=- li=- udi=- nc=1
n41n        bconst   2                                                                        [0x7f278e841180] bci=[-1,0,9] rc=1 vc=0 vn=- li=- udi=- nc=0
n47n      treetop                                                                             [0x7f278e841360] bci=[-1,0,9] rc=0 vc=0 vn=- li=- udi=- nc=1
n43n        icall  jitRetranslateCallerWithPreparation[#71  helper Method] [flags 0x400 0x0 ] ()  [0x7f278e841220] bci=[-1,0,9] rc=1 vc=0 vn=- li=- udi=- nc=3 flg=0x20
n44n          iconst 0x80000                                                                  [0x7f278e841270] bci=[-1,0,9] rc=1 vc=0 vn=- li=- udi=- nc=0
n45n          loadaddr  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ]             [0x7f278e8412c0] bci=[-1,0,9] rc=1 vc=0 vn=- li=- udi=- nc=0
n46n          loadaddr  <J9Method>[#332  Static] [flags 0x8000307 0x40 ]                      [0x7f278e841310] bci=[-1,0,9] rc=1 vc=0 vn=- li=- udi=- nc=0
n38n      BBEnd </block_5> (cold) =====                                                       [0x7f278e841090] bci=[-1,0,9] rc=0 vc=0 vn=- li=- udi=- nc=0

n1n       BBStart <block_2>                                                                   [0x7f278e840500] bci=[-1,0,9] rc=0 vc=0 vn=- li=- udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7f278e8405f0] bci=[-1,0,9] rc=0 vc=0 vn=- li=- udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7f278e8405a0] bci=[-1,0,9] rc=2 vc=0 vn=- li=- udi=- nc=0
n6n       treetop                                                                             [0x7f278e840690] bci=[-1,0,9] rc=0 vc=0 vn=- li=- udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ]                          [0x7f278e840640] bci=[-1,0,9] rc=3 vc=0 vn=- li=- udi=- nc=1
n3n           ==>loadaddr
n12n      ResolveAndNULLCHK on n5n [#32]                                                      [0x7f278e840870] bci=[-1,8,9] rc=0 vc=0 vn=- li=- udi=- nc=1
n11n        call  BLine.<init>(IIII)V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ] ()  [0x7f278e840820] bci=[-1,8,9] rc=1 vc=0 vn=- li=- udi=- nc=5 flg=0x20
n5n           ==>new
n7n           iconst 0                                                                        [0x7f278e8406e0] bci=[-1,4,9] rc=1 vc=0 vn=- li=- udi=- nc=0
n8n           iconst 0                                                                        [0x7f278e840730] bci=[-1,5,9] rc=1 vc=0 vn=- li=- udi=- nc=0
n9n           iconst 0                                                                        [0x7f278e840780] bci=[-1,6,9] rc=1 vc=0 vn=- li=- udi=- nc=0
n10n          iconst 0                                                                        [0x7f278e8407d0] bci=[-1,7,9] rc=1 vc=0 vn=- li=- udi=- nc=0
n13n      astore  <auto slot 1>[#384  Auto] [flags 0x7 0x0 ]                                  [0x7f278e8408c0] bci=[-1,11,9] rc=0 vc=0 vn=- li=- udi=- nc=1
n5n         ==>new
n15n      ResolveCHK [#314]                                                                   [0x7f278e840960] bci=[-1,12,10] rc=0 vc=0 vn=- li=- udi=- nc=1
n14n        aload  java/lang/System.out Ljava/io/PrintStream;[#385  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ]  [0x7f278e840910] bci=[-1,12,10] rc=3 vc=0 vn=- li=- udi=- nc=0
n19n      NULLCHK on n16n [#32]                                                               [0x7f278e840aa0] bci=[-1,16,10] rc=0 vc=0 vn=- li=- udi=- nc=1
n18n        acalli  java/lang/Object.toString()Ljava/lang/String;[#387  virtual Method -56] [flags 0x500 0x0 ]  [0x7f278e840a50] bci=[-1,16,10] rc=2 vc=0 vn=- li=- udi=- nc=2
n17n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]                         [0x7f278e840a00] bci=[-1,16,10] rc=1 vc=0 vn=- li=- udi=- nc=1
n16n            aload  <auto slot 1>[#384  Auto] [flags 0x7 0x0 ]                             [0x7f278e8409b0] bci=[-1,15,10] rc=2 vc=0 vn=- li=- udi=- nc=0
n16n          ==>aload
n22n      ResolveAndNULLCHK on n14n [#32]                                                     [0x7f278e840b90] bci=[-1,19,10] rc=0 vc=0 vn=- li=- udi=- nc=1
n21n        calli  java/io/PrintStream.println(Ljava/lang/String;)V[#388  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7f278e840b40] bci=[-1,19,10] rc=1 vc=0 vn=- li=- udi=- nc=3 flg=0x20
n20n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]                         [0x7f278e840af0] bci=[-1,19,10] rc=1 vc=0 vn=- li=- udi=- nc=1
n14n            ==>aload
n14n          ==>aload
n18n          ==>acalli
n23n      return                                                                              [0x7f278e840be0] bci=[-1,22,11] rc=0 vc=0 vn=- li=- udi=- nc=0
n2n       BBEnd </block_2>                                                                    [0x7f278e840550] bci=[-1,22,11] rc=0 vc=0 vn=- li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Symbol References (incremental):
--------------------------------
#32:   jitThrowNullPointerException[ helper Method] [flags 0x400 0x0 ] [0x7f278e88c220] (NoType)
#71:   jitRetranslateCallerWithPreparation[ helper Method] [flags 0x400 0x0 ] [0x7f278e8acf90] (NoType)
#91:   jitNewObject[ helper Method] [flags 0x400 0x0 ] [0x7f278e88c340] (NoType)
#309:  <vft-symbol>[ Shadow] [flags 0x18607 0x0 ] [0x7f278e8ac7a0] (Address)
#311:  <recompilation-counter>[ Static] [flags 0x1000303 0x40 ] [0x7f278e8accc0] (Int32)
#314:  <resolve check>[ helper Method] [flags 0x400 0x0 ] [0x7f278e88c220] (NoType)
#328:  <count-for-recompile>[ Static] [flags 0x2000303 0x40 ] [0x7f278e8acae0] (Int32)
#329:  "(null)" <gcr-patch-point>[ Static] [flags 0xc00301 0x40 ] [0x7f278e8acee0] (Int8)
#331:  "(null)" <start-PC>[ Static] [flags 0x4800303 0x40 ] [0x7f278e8ad020] (Int32)
#332:  <J9Method>[ Static] [flags 0x8000307 0x40 ] [0x7f278e8ad0b0] (Address)
#381:  <'this' parm LBT;>[ Parm] [flags 0x107 0x0 ] [0x7f278e8416b0] (Address)
#382:  unknown class object[ unresolved Static] [flags 0x18307 0x0 ] [0x7f278e88c130] (Address)
#383:  BLine.<init>(IIII)V[ unresolved notAccessed special Method] [flags 0x400 0x0 ] [0x7f278e88c460] (NoType)
#384:  <auto slot 1>[ Auto] [flags 0x7 0x0 ] [0x7f278e8ac020] (Address)
#385:  java/lang/System.out Ljava/io/PrintStream;[ unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] [0x7f278e8ac140] (Address) [volatile]
#386:  this<'this' parm Ljava/lang/Object;>[ Parm] [flags 0x107 0x0 ] [0x7f278e8ac560] (Address)
#387:  java/lang/Object.toString()Ljava/lang/String;[ virtual Method -56] [flags 0x500 0x0 ] [0x7f278e8ac3d0] (NoType)
#388:  java/io/PrintStream.println(Ljava/lang/String;)V[ unresolved virtual Method] [flags 0x400 0x0 ] [0x7f278e8ac8a0] (NoType)

Number of nodes = 47, symRefCount = 389
</trees>

<cfg>
         0 [0x7f278e85e230] entry
                 in        = []
                 out       = [3(0) ]
                 exception in  = []
                 exception out = []
         1 [0x7f278e85e140] exit
                 in        = [2(0) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7f278e88c040] BBStart at 0x7f278e840500
                 in        = [5(0) 4(0) 3(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []
         3 [0x7f278e8ac9f0] BBStart at 0x7f278e840c30
                 in        = [0(0) ]
                 out       = [4(0) 2(0) ]
                 exception in  = []
                 exception out = []
         4 [0x7f278e8acbd0] BBStart at 0x7f278e840dc0, frequency = 0
                 in        = [3(0) ]
                 out       = [5(0) 2(0) ]
                 exception in  = []
                 exception out = []
         5 [0x7f278e8acdd0] BBStart at 0x7f278e841040, frequency = 0
                 in        = [4(0) ]
                 out       = [2(0) ]
                 exception in  = []
                 exception out = []

</cfg>
<knownObjectTable size="1"> // 00007F278E8476E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
<optimize
	method="BT.foo()V"
	hotness="warm">
<optimization id=3 name=methodHandleTransformer method=BT.foo()V>
Performing 3: methodHandleTransformer
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=4 name=varHandleTransformer method=BT.foo()V>
Performing 4: varHandleTransformer mustBeDone
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=5 name=handleRecompilationOps method=BT.foo()V>
Performing 5: handleRecompilationOps mustBeDone
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=6 name=unsafeFastPath method=BT.foo()V>
Performing 6: unsafeFastPath
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=7 name=recognizedCallTransformer method=BT.foo()V>
Performing 7: recognizedCallTransformer
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=8 name=coldBlockMarker method=BT.foo()V>
Performing 8: coldBlockMarker
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=9 name=CFGSimplification method=BT.foo()V>
Performing 9: CFGSimplification
            (Building alias info)
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=10 name=allocationSinking method=BT.foo()V>
Performing 10: allocationSinking
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=11 name=invariantArgumentPreexistence method=BT.foo()V>
Performing 11: invariantArgumentPreexistence
         No transformations done by this pass -- omitting listings
</optimization>

</optimize>
</ilgen>
<trees
	title="Initial Trees"
	method="BT.foo()V"
	hotness="warm">

Initial Trees: for BT.foo()V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n24n      BBStart <block_3>                                                                   [0x7f278e840c30] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=0
n28n      ificmpne --> block_2 BBStart at n1n ()                                              [0x7f278e840d70] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=2 flg=0x20
n26n        iload  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ]                [0x7f278e840cd0] bci=[-1,0,9] rc=1 vc=9 vn=- li=1 udi=- nc=0
n27n        iconst 1                                                                          [0x7f278e840d20] bci=[-1,0,9] rc=1 vc=9 vn=- li=1 udi=- nc=0
n25n      BBEnd </block_3> =====                                                              [0x7f278e840c80] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=0

n29n      BBStart <block_4> (freq 0) (cold)                                                   [0x7f278e840dc0] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=0
n34n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e840f50] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=1
n33n        iadd                                                                              [0x7f278e840f00] bci=[-1,0,9] rc=2 vc=9 vn=- li=2 udi=- nc=2
n32n          iload  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]            [0x7f278e840eb0] bci=[-1,0,9] rc=1 vc=9 vn=- li=1 udi=- nc=0
n31n          iconst -1                                                                       [0x7f278e840e60] bci=[-1,0,9] rc=1 vc=9 vn=- li=1 udi=- nc=0
n36n      ificmpgt --> block_2 BBStart at n1n ()                                              [0x7f278e840ff0] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=2 flg=0x20
n33n        ==>iadd
n35n        iconst 0                                                                          [0x7f278e840fa0] bci=[-1,0,9] rc=1 vc=9 vn=- li=1 udi=- nc=0
n30n      BBEnd </block_4> (cold) =====                                                       [0x7f278e840e10] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=0

n37n      BBStart <block_5> (freq 0) (cold)                                                   [0x7f278e841040] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=0
n40n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e841130] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=1
n39n        iconst 0x7fffffff                                                                 [0x7f278e8410e0] bci=[-1,0,9] rc=1 vc=9 vn=- li=1 udi=- nc=0
n42n      bstore  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]             [0x7f278e8411d0] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=1
n41n        bconst   2                                                                        [0x7f278e841180] bci=[-1,0,9] rc=1 vc=9 vn=- li=1 udi=- nc=0
n47n      treetop                                                                             [0x7f278e841360] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=1
n43n        icall  jitRetranslateCallerWithPreparation[#71  helper Method] [flags 0x400 0x0 ] ()  [0x7f278e841220] bci=[-1,0,9] rc=1 vc=9 vn=- li=1 udi=- nc=3 flg=0x20
n44n          iconst 0x80000                                                                  [0x7f278e841270] bci=[-1,0,9] rc=1 vc=9 vn=- li=1 udi=- nc=0
n45n          loadaddr  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ]             [0x7f278e8412c0] bci=[-1,0,9] rc=1 vc=9 vn=- li=1 udi=- nc=0
n46n          loadaddr  <J9Method>[#332  Static] [flags 0x8000307 0x40 ]                      [0x7f278e841310] bci=[-1,0,9] rc=1 vc=9 vn=- li=1 udi=- nc=0
n38n      BBEnd </block_5> (cold) =====                                                       [0x7f278e841090] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=0

n1n       BBStart <block_2>                                                                   [0x7f278e840500] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7f278e8405f0] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7f278e8405a0] bci=[-1,0,9] rc=2 vc=9 vn=- li=2 udi=- nc=0
n6n       treetop                                                                             [0x7f278e840690] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ]                          [0x7f278e840640] bci=[-1,0,9] rc=3 vc=9 vn=- li=3 udi=- nc=1
n3n           ==>loadaddr
n12n      ResolveAndNULLCHK on n5n [#32]                                                      [0x7f278e840870] bci=[-1,8,9] rc=0 vc=9 vn=- li=- udi=- nc=1
n11n        call  BLine.<init>(IIII)V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ] ()  [0x7f278e840820] bci=[-1,8,9] rc=1 vc=9 vn=- li=1 udi=- nc=5 flg=0x20
n5n           ==>new
n7n           iconst 0                                                                        [0x7f278e8406e0] bci=[-1,4,9] rc=1 vc=9 vn=- li=1 udi=- nc=0
n8n           iconst 0                                                                        [0x7f278e840730] bci=[-1,5,9] rc=1 vc=9 vn=- li=1 udi=- nc=0
n9n           iconst 0                                                                        [0x7f278e840780] bci=[-1,6,9] rc=1 vc=9 vn=- li=1 udi=- nc=0
n10n          iconst 0                                                                        [0x7f278e8407d0] bci=[-1,7,9] rc=1 vc=9 vn=- li=1 udi=- nc=0
n13n      astore  <auto slot 1>[#384  Auto] [flags 0x7 0x0 ]                                  [0x7f278e8408c0] bci=[-1,11,9] rc=0 vc=9 vn=- li=- udi=- nc=1
n5n         ==>new
n15n      ResolveCHK [#314]                                                                   [0x7f278e840960] bci=[-1,12,10] rc=0 vc=9 vn=- li=- udi=- nc=1
n14n        aload  java/lang/System.out Ljava/io/PrintStream;[#385  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ]  [0x7f278e840910] bci=[-1,12,10] rc=3 vc=9 vn=- li=3 udi=- nc=0
n19n      NULLCHK on n16n [#32]                                                               [0x7f278e840aa0] bci=[-1,16,10] rc=0 vc=9 vn=- li=- udi=- nc=1
n18n        acalli  java/lang/Object.toString()Ljava/lang/String;[#387  virtual Method -56] [flags 0x500 0x0 ]  [0x7f278e840a50] bci=[-1,16,10] rc=2 vc=9 vn=- li=2 udi=- nc=2
n17n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]                         [0x7f278e840a00] bci=[-1,16,10] rc=1 vc=9 vn=- li=1 udi=- nc=1
n16n            aload  <auto slot 1>[#384  Auto] [flags 0x7 0x0 ]                             [0x7f278e8409b0] bci=[-1,15,10] rc=2 vc=9 vn=- li=2 udi=- nc=0
n16n          ==>aload
n22n      ResolveAndNULLCHK on n14n [#32]                                                     [0x7f278e840b90] bci=[-1,19,10] rc=0 vc=9 vn=- li=- udi=- nc=1
n21n        calli  java/io/PrintStream.println(Ljava/lang/String;)V[#388  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7f278e840b40] bci=[-1,19,10] rc=1 vc=9 vn=- li=1 udi=- nc=3 flg=0x20
n20n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]                         [0x7f278e840af0] bci=[-1,19,10] rc=1 vc=9 vn=- li=1 udi=- nc=1
n14n            ==>aload
n14n          ==>aload
n18n          ==>acalli
n23n      return                                                                              [0x7f278e840be0] bci=[-1,22,11] rc=0 vc=9 vn=- li=- udi=- nc=0
n2n       BBEnd </block_2>                                                                    [0x7f278e840550] bci=[-1,22,11] rc=0 vc=9 vn=- li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 47, symRefCount = 389
</trees>

<cfg>
         0 [0x7f278e85e230] entry
                 in        = []
                 out       = [3(0) ]
                 exception in  = []
                 exception out = []
         1 [0x7f278e85e140] exit
                 in        = [2(0) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7f278e88c040] BBStart at 0x7f278e840500
                 in        = [5(0) 4(0) 3(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []
         3 [0x7f278e8ac9f0] BBStart at 0x7f278e840c30
                 in        = [0(0) ]
                 out       = [4(0) 2(0) ]
                 exception in  = []
                 exception out = []
         4 [0x7f278e8acbd0] BBStart at 0x7f278e840dc0, frequency = 0
                 in        = [3(0) ]
                 out       = [5(0) 2(0) ]
                 exception in  = []
                 exception out = []
         5 [0x7f278e8acdd0] BBStart at 0x7f278e841040, frequency = 0
                 in        = [4(0) ]
                 out       = [2(0) ]
                 exception in  = []
                 exception out = []

</cfg>
<knownObjectTable size="1"> // 00007F278E8476E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>

This method is warm
<optimize
	method="BT.foo()V"
	hotness="warm">
<optimization id=13 name=coldBlockOutlining method=BT.foo()V>
Performing 13: coldBlockOutlining
[     1] O^O COLD BLOCK OUTLINING: outlined cold block sequence (4-5)
<trees
	title="Trees after coldBlockOutlining"
	method="BT.foo()V"
	hotness="warm">

Trees after coldBlockOutlining: for BT.foo()V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n24n      BBStart <block_3>                                                                   [0x7f278e840c30] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=0
n28n      ificmpne --> block_2 BBStart at n1n ()                                              [0x7f278e840d70] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=2 flg=0x20
n26n        iload  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ]                [0x7f278e840cd0] bci=[-1,0,9] rc=1 vc=9 vn=- li=- udi=- nc=0
n27n        iconst 1                                                                          [0x7f278e840d20] bci=[-1,0,9] rc=1 vc=9 vn=- li=- udi=- nc=0
n25n      BBEnd </block_3> =====                                                              [0x7f278e840c80] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=0

n49n      BBStart <block_6> (freq 0)                                                          [0x7f278e841400] bci=[-1,0,9] rc=0 vc=0 vn=- li=- udi=- nc=0
n48n      goto --> block_4 BBStart at n29n                                                    [0x7f278e8413b0] bci=[-1,0,9] rc=0 vc=0 vn=- li=- udi=- nc=0
n50n      BBEnd </block_6> =====                                                              [0x7f278e841450] bci=[-1,0,9] rc=0 vc=0 vn=- li=- udi=- nc=0

n1n       BBStart <block_2>                                                                   [0x7f278e840500] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7f278e8405f0] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7f278e8405a0] bci=[-1,0,9] rc=2 vc=9 vn=- li=- udi=- nc=0
n6n       treetop                                                                             [0x7f278e840690] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ]                          [0x7f278e840640] bci=[-1,0,9] rc=3 vc=9 vn=- li=- udi=- nc=1
n3n           ==>loadaddr
n12n      ResolveAndNULLCHK on n5n [#32]                                                      [0x7f278e840870] bci=[-1,8,9] rc=0 vc=9 vn=- li=- udi=- nc=1
n11n        call  BLine.<init>(IIII)V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ] ()  [0x7f278e840820] bci=[-1,8,9] rc=1 vc=9 vn=- li=- udi=- nc=5 flg=0x20
n5n           ==>new
n7n           iconst 0                                                                        [0x7f278e8406e0] bci=[-1,4,9] rc=1 vc=9 vn=- li=- udi=- nc=0
n8n           iconst 0                                                                        [0x7f278e840730] bci=[-1,5,9] rc=1 vc=9 vn=- li=- udi=- nc=0
n9n           iconst 0                                                                        [0x7f278e840780] bci=[-1,6,9] rc=1 vc=9 vn=- li=- udi=- nc=0
n10n          iconst 0                                                                        [0x7f278e8407d0] bci=[-1,7,9] rc=1 vc=9 vn=- li=- udi=- nc=0
n13n      astore  <auto slot 1>[#384  Auto] [flags 0x7 0x0 ]                                  [0x7f278e8408c0] bci=[-1,11,9] rc=0 vc=9 vn=- li=- udi=- nc=1
n5n         ==>new
n15n      ResolveCHK [#314]                                                                   [0x7f278e840960] bci=[-1,12,10] rc=0 vc=9 vn=- li=- udi=- nc=1
n14n        aload  java/lang/System.out Ljava/io/PrintStream;[#385  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ]  [0x7f278e840910] bci=[-1,12,10] rc=3 vc=9 vn=- li=- udi=- nc=0
n19n      NULLCHK on n16n [#32]                                                               [0x7f278e840aa0] bci=[-1,16,10] rc=0 vc=9 vn=- li=- udi=- nc=1
n18n        acalli  java/lang/Object.toString()Ljava/lang/String;[#387  virtual Method -56] [flags 0x500 0x0 ]  [0x7f278e840a50] bci=[-1,16,10] rc=2 vc=9 vn=- li=- udi=- nc=2
n17n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]                         [0x7f278e840a00] bci=[-1,16,10] rc=1 vc=9 vn=- li=- udi=- nc=1
n16n            aload  <auto slot 1>[#384  Auto] [flags 0x7 0x0 ]                             [0x7f278e8409b0] bci=[-1,15,10] rc=2 vc=9 vn=- li=- udi=- nc=0
n16n          ==>aload
n22n      ResolveAndNULLCHK on n14n [#32]                                                     [0x7f278e840b90] bci=[-1,19,10] rc=0 vc=9 vn=- li=- udi=- nc=1
n21n        calli  java/io/PrintStream.println(Ljava/lang/String;)V[#388  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7f278e840b40] bci=[-1,19,10] rc=1 vc=9 vn=- li=- udi=- nc=3 flg=0x20
n20n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]                         [0x7f278e840af0] bci=[-1,19,10] rc=1 vc=9 vn=- li=- udi=- nc=1
n14n            ==>aload
n14n          ==>aload
n18n          ==>acalli
n23n      return                                                                              [0x7f278e840be0] bci=[-1,22,11] rc=0 vc=9 vn=- li=- udi=- nc=0
n2n       BBEnd </block_2> =====                                                              [0x7f278e840550] bci=[-1,22,11] rc=0 vc=9 vn=- li=- udi=- nc=0

n29n      BBStart <block_4> (freq 0) (cold)                                                   [0x7f278e840dc0] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=0
n34n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e840f50] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=1
n33n        iadd                                                                              [0x7f278e840f00] bci=[-1,0,9] rc=2 vc=9 vn=- li=- udi=- nc=2
n32n          iload  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]            [0x7f278e840eb0] bci=[-1,0,9] rc=1 vc=9 vn=- li=- udi=- nc=0
n31n          iconst -1                                                                       [0x7f278e840e60] bci=[-1,0,9] rc=1 vc=9 vn=- li=- udi=- nc=0
n36n      ificmpgt --> block_2 BBStart at n1n ()                                              [0x7f278e840ff0] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=2 flg=0x20
n33n        ==>iadd
n35n        iconst 0                                                                          [0x7f278e840fa0] bci=[-1,0,9] rc=1 vc=9 vn=- li=- udi=- nc=0
n30n      BBEnd </block_4> (cold) =====                                                       [0x7f278e840e10] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=0

n37n      BBStart <block_5> (freq 0) (cold)                                                   [0x7f278e841040] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=0
n40n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e841130] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=1
n39n        iconst 0x7fffffff                                                                 [0x7f278e8410e0] bci=[-1,0,9] rc=1 vc=9 vn=- li=- udi=- nc=0
n42n      bstore  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]             [0x7f278e8411d0] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=1
n41n        bconst   2                                                                        [0x7f278e841180] bci=[-1,0,9] rc=1 vc=9 vn=- li=- udi=- nc=0
n47n      treetop                                                                             [0x7f278e841360] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=1
n43n        icall  jitRetranslateCallerWithPreparation[#71  helper Method] [flags 0x400 0x0 ] ()  [0x7f278e841220] bci=[-1,0,9] rc=1 vc=9 vn=- li=- udi=- nc=3 flg=0x20
n44n          iconst 0x80000                                                                  [0x7f278e841270] bci=[-1,0,9] rc=1 vc=9 vn=- li=- udi=- nc=0
n45n          loadaddr  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ]             [0x7f278e8412c0] bci=[-1,0,9] rc=1 vc=9 vn=- li=- udi=- nc=0
n46n          loadaddr  <J9Method>[#332  Static] [flags 0x8000307 0x40 ]                      [0x7f278e841310] bci=[-1,0,9] rc=1 vc=9 vn=- li=- udi=- nc=0
n51n      goto --> block_2 BBStart at n1n                                                     [0x7f278e8414a0] bci=[-1,0,9] rc=0 vc=0 vn=- li=- udi=- nc=0
n38n      BBEnd </block_5> (cold)                                                             [0x7f278e841090] bci=[-1,0,9] rc=0 vc=9 vn=- li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 51, symRefCount = 389
</trees>

<cfg>
         0 [0x7f278e85e230] entry
                 in        = []
                 out       = [3(0) ]
                 exception in  = []
                 exception out = []
         1 [0x7f278e85e140] exit
                 in        = [2(0) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7f278e88c040] BBStart at 0x7f278e840500
                 in        = [5(0) 4(0) 3(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []
         3 [0x7f278e8ac9f0] BBStart at 0x7f278e840c30
                 in        = [0(0) ]
                 out       = [6(0) 2(0) ]
                 exception in  = []
                 exception out = []
         4 [0x7f278e8acbd0] BBStart at 0x7f278e840dc0, frequency = 0
                 in        = [6(0) ]
                 out       = [5(0) 2(0) ]
                 exception in  = []
                 exception out = []
         5 [0x7f278e8acdd0] BBStart at 0x7f278e841040, frequency = 0
                 in        = [4(0) ]
                 out       = [2(0) ]
                 exception in  = []
                 exception out = []
         6 [0x7f278e8cf210] BBStart at 0x7f278e841400, frequency = 0
                 in        = [3(0) ]
                 out       = [4(0) ]
                 exception in  = []
                 exception out = []

</cfg>
<knownObjectTable size="1"> // 00007F278E8476E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

<optimization id=14 name=stringBuilderTransformer method=BT.foo()V>
Performing 14: stringBuilderTransformer
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=15 name=stringPeepholes method=BT.foo()V>
Performing 15: stringPeepholes
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=16 name=inlining method=BT.foo()V>
Performing 16: inlining


~~~ Call site weights for BT.foo()V
original size: 23
Inlining weight limit: 227
~~~ List of Call Graphs To Be Inlined:
^^^ Top Level Dead CallSite 00007F278F9349C0 Node 00007F278E840B40 bcIndex 0000000000000013 Failure Reason: Unresolved_Callee
^^^ Top Level Dead CallSite 00007F278F934840 Node 00007F278E840A50 bcIndex 0000000000000010 Failure Reason: No_Inlineable_Targets
^^^ Top Level Dead CallSite 00007F278F9346D0 Node 00007F278E840820 bcIndex 0000000000000008 Failure Reason: Unresolved_Callee
<trees
	title="Post Inlining Trees"
	method="BT.foo()V"
	hotness="warm">

Post Inlining Trees: for BT.foo()V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n24n      BBStart <block_3>                                                                   [0x7f278e840c30] bci=[-1,0,9] rc=0 vc=15 vn=- li=- udi=- nc=0
n28n      ificmpne --> block_2 BBStart at n1n ()                                              [0x7f278e840d70] bci=[-1,0,9] rc=0 vc=15 vn=- li=- udi=- nc=2 flg=0x20
n26n        iload  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ]                [0x7f278e840cd0] bci=[-1,0,9] rc=1 vc=15 vn=- li=- udi=- nc=0
n27n        iconst 1                                                                          [0x7f278e840d20] bci=[-1,0,9] rc=1 vc=15 vn=- li=- udi=- nc=0
n25n      BBEnd </block_3> =====                                                              [0x7f278e840c80] bci=[-1,0,9] rc=0 vc=15 vn=- li=- udi=- nc=0

n49n      BBStart <block_6>                                                                   [0x7f278e841400] bci=[-1,0,9] rc=0 vc=15 vn=- li=- udi=- nc=0
n48n      goto --> block_4 BBStart at n29n                                                    [0x7f278e8413b0] bci=[-1,0,9] rc=0 vc=15 vn=- li=- udi=- nc=0
n50n      BBEnd </block_6> =====                                                              [0x7f278e841450] bci=[-1,0,9] rc=0 vc=15 vn=- li=- udi=- nc=0

n1n       BBStart <block_2>                                                                   [0x7f278e840500] bci=[-1,0,9] rc=0 vc=15 vn=- li=- udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7f278e8405f0] bci=[-1,0,9] rc=0 vc=15 vn=- li=- udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7f278e8405a0] bci=[-1,0,9] rc=2 vc=15 vn=- li=- udi=- nc=0
n6n       treetop                                                                             [0x7f278e840690] bci=[-1,0,9] rc=0 vc=15 vn=- li=- udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ]                          [0x7f278e840640] bci=[-1,0,9] rc=3 vc=15 vn=- li=- udi=- nc=1
n3n           ==>loadaddr
n12n      ResolveAndNULLCHK on n5n [#32]                                                      [0x7f278e840870] bci=[-1,8,9] rc=0 vc=15 vn=- li=- udi=- nc=1
n11n        call  BLine.<init>(IIII)V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ] ()  [0x7f278e840820] bci=[-1,8,9] rc=1 vc=16 vn=- li=- udi=- nc=5 flg=0x20
n5n           ==>new
n7n           iconst 0                                                                        [0x7f278e8406e0] bci=[-1,4,9] rc=1 vc=15 vn=- li=- udi=- nc=0
n8n           iconst 0                                                                        [0x7f278e840730] bci=[-1,5,9] rc=1 vc=15 vn=- li=- udi=- nc=0
n9n           iconst 0                                                                        [0x7f278e840780] bci=[-1,6,9] rc=1 vc=15 vn=- li=- udi=- nc=0
n10n          iconst 0                                                                        [0x7f278e8407d0] bci=[-1,7,9] rc=1 vc=15 vn=- li=- udi=- nc=0
n13n      astore  <auto slot 1>[#384  Auto] [flags 0x7 0x0 ]                                  [0x7f278e8408c0] bci=[-1,11,9] rc=0 vc=15 vn=- li=- udi=- nc=1
n5n         ==>new
n15n      ResolveCHK [#314]                                                                   [0x7f278e840960] bci=[-1,12,10] rc=0 vc=15 vn=- li=- udi=- nc=1
n14n        aload  java/lang/System.out Ljava/io/PrintStream;[#385  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ]  [0x7f278e840910] bci=[-1,12,10] rc=3 vc=15 vn=- li=- udi=- nc=0
n19n      NULLCHK on n16n [#32]                                                               [0x7f278e840aa0] bci=[-1,16,10] rc=0 vc=15 vn=- li=- udi=- nc=1
n18n        acalli  java/lang/Object.toString()Ljava/lang/String;[#387  virtual Method -56] [flags 0x500 0x0 ]  [0x7f278e840a50] bci=[-1,16,10] rc=2 vc=16 vn=- li=- udi=- nc=2
n17n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]                         [0x7f278e840a00] bci=[-1,16,10] rc=1 vc=15 vn=- li=- udi=- nc=1
n16n            aload  <auto slot 1>[#384  Auto] [flags 0x7 0x0 ]                             [0x7f278e8409b0] bci=[-1,15,10] rc=2 vc=15 vn=- li=- udi=- nc=0
n16n          ==>aload
n22n      ResolveAndNULLCHK on n14n [#32]                                                     [0x7f278e840b90] bci=[-1,19,10] rc=0 vc=15 vn=- li=- udi=- nc=1
n21n        calli  java/io/PrintStream.println(Ljava/lang/String;)V[#388  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7f278e840b40] bci=[-1,19,10] rc=1 vc=16 vn=- li=- udi=- nc=3 flg=0x20
n20n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]                         [0x7f278e840af0] bci=[-1,19,10] rc=1 vc=15 vn=- li=- udi=- nc=1
n14n            ==>aload
n14n          ==>aload
n18n          ==>acalli
n23n      return                                                                              [0x7f278e840be0] bci=[-1,22,11] rc=0 vc=15 vn=- li=- udi=- nc=0
n2n       BBEnd </block_2> =====                                                              [0x7f278e840550] bci=[-1,22,11] rc=0 vc=15 vn=- li=- udi=- nc=0

n29n      BBStart <block_4> (freq 0) (cold)                                                   [0x7f278e840dc0] bci=[-1,0,9] rc=0 vc=15 vn=- li=- udi=- nc=0
n34n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e840f50] bci=[-1,0,9] rc=0 vc=15 vn=- li=- udi=- nc=1
n33n        iadd                                                                              [0x7f278e840f00] bci=[-1,0,9] rc=2 vc=15 vn=- li=- udi=- nc=2
n32n          iload  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]            [0x7f278e840eb0] bci=[-1,0,9] rc=1 vc=15 vn=- li=- udi=- nc=0
n31n          iconst -1                                                                       [0x7f278e840e60] bci=[-1,0,9] rc=1 vc=15 vn=- li=- udi=- nc=0
n36n      ificmpgt --> block_2 BBStart at n1n ()                                              [0x7f278e840ff0] bci=[-1,0,9] rc=0 vc=15 vn=- li=- udi=- nc=2 flg=0x20
n33n        ==>iadd
n35n        iconst 0                                                                          [0x7f278e840fa0] bci=[-1,0,9] rc=1 vc=15 vn=- li=- udi=- nc=0
n30n      BBEnd </block_4> (cold) =====                                                       [0x7f278e840e10] bci=[-1,0,9] rc=0 vc=15 vn=- li=- udi=- nc=0

n37n      BBStart <block_5> (freq 0) (cold)                                                   [0x7f278e841040] bci=[-1,0,9] rc=0 vc=15 vn=- li=- udi=- nc=0
n40n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e841130] bci=[-1,0,9] rc=0 vc=15 vn=- li=- udi=- nc=1
n39n        iconst 0x7fffffff                                                                 [0x7f278e8410e0] bci=[-1,0,9] rc=1 vc=15 vn=- li=- udi=- nc=0
n42n      bstore  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]             [0x7f278e8411d0] bci=[-1,0,9] rc=0 vc=15 vn=- li=- udi=- nc=1
n41n        bconst   2                                                                        [0x7f278e841180] bci=[-1,0,9] rc=1 vc=15 vn=- li=- udi=- nc=0
n47n      treetop                                                                             [0x7f278e841360] bci=[-1,0,9] rc=0 vc=15 vn=- li=- udi=- nc=1
n43n        icall  jitRetranslateCallerWithPreparation[#71  helper Method] [flags 0x400 0x0 ] ()  [0x7f278e841220] bci=[-1,0,9] rc=1 vc=16 vn=- li=- udi=- nc=3 flg=0x20
n44n          iconst 0x80000                                                                  [0x7f278e841270] bci=[-1,0,9] rc=1 vc=15 vn=- li=- udi=- nc=0
n45n          loadaddr  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ]             [0x7f278e8412c0] bci=[-1,0,9] rc=1 vc=15 vn=- li=- udi=- nc=0
n46n          loadaddr  <J9Method>[#332  Static] [flags 0x8000307 0x40 ]                      [0x7f278e841310] bci=[-1,0,9] rc=1 vc=15 vn=- li=- udi=- nc=0
n51n      goto --> block_2 BBStart at n1n                                                     [0x7f278e8414a0] bci=[-1,0,9] rc=0 vc=15 vn=- li=- udi=- nc=0
n38n      BBEnd </block_5> (cold)                                                             [0x7f278e841090] bci=[-1,0,9] rc=0 vc=15 vn=- li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Symbol References (incremental):
--------------------------------
#389:  java/lang/String[ Static] [flags 0x18307 0x0 ] [0x7f278e8d0450] (Address)

Number of nodes = 51, symRefCount = 390
</trees>

<cfg>
         0 [0x7f278e85e230] entry
                 in        = []
                 out       = [3(0) ]
                 exception in  = []
                 exception out = []
         1 [0x7f278e85e140] exit
                 in        = [2(0) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7f278e88c040] BBStart at 0x7f278e840500
                 in        = [5(0) 4(0) 3(0) ]
                 out       = [1(0) ]
                 exception in  = []
                 exception out = []
         3 [0x7f278e8ac9f0] BBStart at 0x7f278e840c30
                 in        = [0(0) ]
                 out       = [6(0) 2(0) ]
                 exception in  = []
                 exception out = []
         4 [0x7f278e8acbd0] BBStart at 0x7f278e840dc0, frequency = 0
                 in        = [6(0) ]
                 out       = [5(0) 2(0) ]
                 exception in  = []
                 exception out = []
         5 [0x7f278e8acdd0] BBStart at 0x7f278e841040, frequency = 0
                 in        = [4(0) ]
                 out       = [2(0) ]
                 exception in  = []
                 exception out = []
         6 [0x7f278e8cf210] BBStart at 0x7f278e841400
                 in        = [3(0) ]
                 out       = [4(0) ]
                 exception in  = []
                 exception out = []

</cfg>
<knownObjectTable size="1"> // 00007F278E8476E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=18 name=staticFinalFieldFolding method=BT.foo()V>
Performing 18: staticFinalFieldFolding
            (Building alias info)
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=19 name=osrGuardInsertion method=BT.foo()V>
Performing 19: osrGuardInsertion mustBeDone
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=20 name=osrExceptionEdgeRemoval method=BT.foo()V>
Performing 20: osrExceptionEdgeRemoval
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=21 name=jProfilingBlock method=BT.foo()V>
Performing 21: jProfilingBlock
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=22 name=virtualGuardTailSplitter method=BT.foo()V>
Performing 22: virtualGuardTailSplitter
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=23 name=treeSimplification method=BT.foo()V>
Performing 23: treeSimplification
         No transformations done by this pass -- omitting listings
</optimization>

   <optgroup name=cheapGlobalValuePropagationGroup>
<optimization id=28 name=globalValuePropagation method=BT.foo()V>
Performing 28: globalValuePropagation
            (Doing structural analysis)
            (Building use/def info)
         PREPARTITION VN   (Building value number info)
[     2] O^O VALUE PROPAGATION: Changing ResolveAndNULLCHK node into a ResolveCHK node [00007F278E840870]
[     3] O^O VALUE PROPAGATION: Removing redundant null check node [00007F278E840AA0]
              (Invalidating value number info)
              (Invalidating use/def info)
<trees
	title="Trees after globalValuePropagation"
	method="BT.foo()V"
	hotness="warm">

Trees after globalValuePropagation: for BT.foo()V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n24n      BBStart <block_3> (freq 10000)                                                      [0x7f278e840c30] bci=[-1,0,9] rc=0 vc=34 vn=- li=- udi=- nc=0
n28n      ificmpne --> block_2 BBStart at n1n ()                                              [0x7f278e840d70] bci=[-1,0,9] rc=0 vc=34 vn=- li=- udi=- nc=2 flg=0x20
n26n        iload  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ] (cannotOverflow )  [0x7f278e840cd0] bci=[-1,0,9] rc=1 vc=34 vn=- li=- udi=- nc=0 flg=0x1000
n27n        iconst 1 (X!=0 X>=0 )                                                             [0x7f278e840d20] bci=[-1,0,9] rc=1 vc=34 vn=- li=- udi=- nc=0 flg=0x104
n25n      BBEnd </block_3> =====                                                              [0x7f278e840c80] bci=[-1,0,9] rc=0 vc=31 vn=- li=- udi=- nc=0

n49n      BBStart <block_6> (freq 8001)                                                       [0x7f278e841400] bci=[-1,0,9] rc=0 vc=34 vn=- li=- udi=- nc=0
n48n      goto --> block_4 BBStart at n29n                                                    [0x7f278e8413b0] bci=[-1,0,9] rc=0 vc=34 vn=- li=- udi=- nc=0
n50n      BBEnd </block_6> =====                                                              [0x7f278e841450] bci=[-1,0,9] rc=0 vc=31 vn=- li=- udi=- nc=0

n1n       BBStart <block_2> (freq 8001)                                                       [0x7f278e840500] bci=[-1,0,9] rc=0 vc=34 vn=- li=- udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7f278e8405f0] bci=[-1,0,9] rc=0 vc=34 vn=- li=- udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7f278e8405a0] bci=[-1,0,9] rc=2 vc=34 vn=- li=- udi=- nc=0
n6n       treetop                                                                             [0x7f278e840690] bci=[-1,0,9] rc=0 vc=34 vn=- li=- udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 sharedMemory )     [0x7f278e840640] bci=[-1,0,9] rc=3 vc=34 vn=- li=- udi=- nc=1 flg=0x4
n3n           ==>loadaddr
n12n      ResolveCHK [#32]                                                                    [0x7f278e840870] bci=[-1,8,9] rc=0 vc=34 vn=- li=- udi=- nc=1
n11n        call  BLine.<init>(IIII)V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ] ()  [0x7f278e840820] bci=[-1,8,9] rc=1 vc=34 vn=- li=- udi=- nc=5 flg=0x20
n5n           ==>new
n7n           iconst 0 (X==0 X>=0 X<=0 )                                                      [0x7f278e8406e0] bci=[-1,4,9] rc=1 vc=34 vn=- li=- udi=- nc=0 flg=0x302
n8n           iconst 0 (X==0 X>=0 X<=0 )                                                      [0x7f278e840730] bci=[-1,5,9] rc=1 vc=34 vn=- li=- udi=- nc=0 flg=0x302
n9n           iconst 0 (X==0 X>=0 X<=0 )                                                      [0x7f278e840780] bci=[-1,6,9] rc=1 vc=34 vn=- li=- udi=- nc=0 flg=0x302
n10n          iconst 0 (X==0 X>=0 X<=0 )                                                      [0x7f278e8407d0] bci=[-1,7,9] rc=1 vc=34 vn=- li=- udi=- nc=0 flg=0x302
n13n      astore  <auto slot 1>[#384  Auto] [flags 0x7 0x0 ] (X!=0 sharedMemory )             [0x7f278e8408c0] bci=[-1,11,9] rc=0 vc=34 vn=- li=- udi=1 nc=1 flg=0x4
n5n         ==>new
n15n      ResolveCHK [#314]                                                                   [0x7f278e840960] bci=[-1,12,10] rc=0 vc=34 vn=- li=- udi=- nc=1
n14n        aload  java/lang/System.out Ljava/io/PrintStream;[#385  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7f278e840910] bci=[-1,12,10] rc=3 vc=34 vn=- li=- udi=- nc=0 flg=0x100
n19n      treetop                                                                             [0x7f278e840aa0] bci=[-1,16,10] rc=0 vc=34 vn=- li=- udi=- nc=1
n18n        acalli  java/lang/Object.toString()Ljava/lang/String;[#387  virtual Method -56] [flags 0x500 0x0 ]  [0x7f278e840a50] bci=[-1,16,10] rc=2 vc=34 vn=- li=- udi=- nc=2
n17n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7f278e840a00] bci=[-1,16,10] rc=1 vc=34 vn=- li=- udi=- nc=1 flg=0x4
n16n            aload  <auto slot 1>[#384  Auto] [flags 0x7 0x0 ] (X!=0 X>=0 sharedMemory )   [0x7f278e8409b0] bci=[-1,15,10] rc=2 vc=34 vn=- li=- udi=2 nc=0 flg=0x104
n16n          ==>aload
n22n      ResolveAndNULLCHK on n14n [#32]                                                     [0x7f278e840b90] bci=[-1,19,10] rc=0 vc=34 vn=- li=- udi=- nc=1
n21n        calli  java/io/PrintStream.println(Ljava/lang/String;)V[#388  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7f278e840b40] bci=[-1,19,10] rc=1 vc=34 vn=- li=- udi=- nc=3 flg=0x20
n20n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7f278e840af0] bci=[-1,19,10] rc=1 vc=34 vn=- li=- udi=- nc=1 flg=0x4
n14n            ==>aload
n14n          ==>aload
n18n          ==>acalli
n23n      return                                                                              [0x7f278e840be0] bci=[-1,22,11] rc=0 vc=34 vn=- li=- udi=- nc=0
n2n       BBEnd </block_2> =====                                                              [0x7f278e840550] bci=[-1,22,11] rc=0 vc=31 vn=- li=- udi=- nc=0

n29n      BBStart <block_4> (freq 0) (cold)                                                   [0x7f278e840dc0] bci=[-1,0,9] rc=0 vc=34 vn=- li=- udi=- nc=0
n34n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e840f50] bci=[-1,0,9] rc=0 vc=34 vn=- li=- udi=- nc=1
n33n        iadd                                                                              [0x7f278e840f00] bci=[-1,0,9] rc=2 vc=34 vn=- li=- udi=- nc=2
n32n          iload  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ] (cannotOverflow )  [0x7f278e840eb0] bci=[-1,0,9] rc=1 vc=34 vn=- li=- udi=- nc=0 flg=0x1000
n31n          iconst -1 (X!=0 X<=0 )                                                          [0x7f278e840e60] bci=[-1,0,9] rc=1 vc=34 vn=- li=- udi=- nc=0 flg=0x204
n36n      ificmpgt --> block_2 BBStart at n1n ()                                              [0x7f278e840ff0] bci=[-1,0,9] rc=0 vc=34 vn=- li=- udi=- nc=2 flg=0x20
n33n        ==>iadd
n35n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7f278e840fa0] bci=[-1,0,9] rc=1 vc=34 vn=- li=- udi=- nc=0 flg=0x302
n30n      BBEnd </block_4> (cold) =====                                                       [0x7f278e840e10] bci=[-1,0,9] rc=0 vc=31 vn=- li=- udi=- nc=0

n37n      BBStart <block_5> (freq 0) (cold)                                                   [0x7f278e841040] bci=[-1,0,9] rc=0 vc=34 vn=- li=- udi=- nc=0
n40n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e841130] bci=[-1,0,9] rc=0 vc=34 vn=- li=- udi=- nc=1
n39n        iconst 0x7fffffff (X!=0 X>=0 )                                                    [0x7f278e8410e0] bci=[-1,0,9] rc=1 vc=34 vn=- li=- udi=- nc=0 flg=0x104
n42n      bstore  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]             [0x7f278e8411d0] bci=[-1,0,9] rc=0 vc=34 vn=- li=- udi=- nc=1
n41n        bconst   2 (X!=0 X>=0 )                                                           [0x7f278e841180] bci=[-1,0,9] rc=1 vc=34 vn=- li=- udi=- nc=0 flg=0x104
n47n      treetop                                                                             [0x7f278e841360] bci=[-1,0,9] rc=0 vc=34 vn=- li=- udi=- nc=1
n43n        icall  jitRetranslateCallerWithPreparation[#71  helper Method] [flags 0x400 0x0 ] ()  [0x7f278e841220] bci=[-1,0,9] rc=1 vc=34 vn=- li=- udi=- nc=3 flg=0x20
n44n          iconst 0x80000 (X!=0 X>=0 )                                                     [0x7f278e841270] bci=[-1,0,9] rc=1 vc=34 vn=- li=- udi=- nc=0 flg=0x104
n45n          loadaddr  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ]             [0x7f278e8412c0] bci=[-1,0,9] rc=1 vc=34 vn=- li=- udi=- nc=0
n46n          loadaddr  <J9Method>[#332  Static] [flags 0x8000307 0x40 ]                      [0x7f278e841310] bci=[-1,0,9] rc=1 vc=34 vn=- li=- udi=- nc=0
n51n      goto --> block_2 BBStart at n1n                                                     [0x7f278e8414a0] bci=[-1,0,9] rc=0 vc=34 vn=- li=- udi=- nc=0
n38n      BBEnd </block_5> (cold)                                                             [0x7f278e841090] bci=[-1,0,9] rc=0 vc=31 vn=- li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 51, symRefCount = 390
</trees>

<cfg>
         0 [0x7f278e85e230] entry
                 in        = []
                 out       = [3(10000) ]
                 exception in  = []
                 exception out = []
         1 [0x7f278e85e140] exit
                 in        = [2(8001) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7f278e88c040] BBStart at 0x7f278e840500, frequency = 8001
                 in        = [5(0) 4(0) 3(5000) ]
                 out       = [1(8001) ]
                 exception in  = []
                 exception out = []
         3 [0x7f278e8ac9f0] BBStart at 0x7f278e840c30, frequency = 10000
                 in        = [0(10000) ]
                 out       = [6(5000) 2(5000) ]
                 exception in  = []
                 exception out = []
         4 [0x7f278e8acbd0] BBStart at 0x7f278e840dc0, frequency = 0
                 in        = [6(8001) ]
                 out       = [5(0) 2(0) ]
                 exception in  = []
                 exception out = []
         5 [0x7f278e8acdd0] BBStart at 0x7f278e841040, frequency = 0
                 in        = [4(0) ]
                 out       = [2(0) ]
                 exception in  = []
                 exception out = []
         6 [0x7f278e8cf210] BBStart at 0x7f278e841400, frequency = 8001
                 in        = [3(5000) ]
                 out       = [4(8001) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7f278e85c310] Acyclic region
         Subgraph: (* = exit edge)
               (0x7f278e85c3e0:0x7f278e85c2b0)0 --> 3(0x7f278e85c470)
               (0x7f278e85c470:0x7f278e85c190)3 --> 2(0x7f278e85c620) 6(0x7f278e85c550)
               (0x7f278e85c550:0x7f278e85c070)6 --> 4(0x7f278e85c710)
               (0x7f278e85c710:0x7f278e85c130)4 --> 2(0x7f278e85c620) 5(0x7f278e85c7e0)
               (0x7f278e85c7e0:0x7f278e85c0d0)5 --> 2(0x7f278e85c620)
               (0x7f278e85c620:0x7f278e85c1f0)2 --> 1(0x7f278e85c990)
               (0x7f278e85c990:0x7f278e85c250)1 -->
         0 [0x7f278e85c2b0] Block
         3 [0x7f278e85c190] Block
         6 [0x7f278e85c070] Block
         4 [0x7f278e85c130] Block
         5 [0x7f278e85c0d0] Block
         2 [0x7f278e85c1f0] Block
         1 [0x7f278e85c250] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007F278E8476E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

      <optgroup name=cheapObjectAllocationGroup>
         <optgroup name=eachEscapeAnalysisPassGroup>
<optimization id=32 name=escapeAnalysis method=BT.foo()V>
Performing 32: escapeAnalysis
            (Building use/def info)
         PREPARTITION VN   (Building value number info)
<trees
	title="Trees after escapeAnalysis"
	method="BT.foo()V"
	hotness="warm">

Trees after escapeAnalysis: for BT.foo()V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n24n      BBStart <block_3> (freq 10000)                                                      [0x7f278e840c30] bci=[-1,0,9] rc=0 vc=42 vn=17 li=- udi=- nc=0
n28n      ificmpne --> block_2 BBStart at n1n ()                                              [0x7f278e840d70] bci=[-1,0,9] rc=0 vc=42 vn=18 li=- udi=- nc=2 flg=0x20
n26n        iload  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ] (cannotOverflow )  [0x7f278e840cd0] bci=[-1,0,9] rc=1 vc=42 vn=3 li=- udi=- nc=0 flg=0x1000
n27n        iconst 1 (X!=0 X>=0 )                                                             [0x7f278e840d20] bci=[-1,0,9] rc=1 vc=42 vn=2 li=- udi=- nc=0 flg=0x104
n25n      BBEnd </block_3> =====                                                              [0x7f278e840c80] bci=[-1,0,9] rc=0 vc=42 vn=19 li=- udi=- nc=0

n49n      BBStart <block_6> (freq 8001)                                                       [0x7f278e841400] bci=[-1,0,9] rc=0 vc=42 vn=20 li=- udi=- nc=0
n48n      goto --> block_4 BBStart at n29n                                                    [0x7f278e8413b0] bci=[-1,0,9] rc=0 vc=42 vn=21 li=- udi=- nc=0
n50n      BBEnd </block_6> =====                                                              [0x7f278e841450] bci=[-1,0,9] rc=0 vc=42 vn=22 li=- udi=- nc=0

n1n       BBStart <block_2> (freq 8001)                                                       [0x7f278e840500] bci=[-1,0,9] rc=0 vc=42 vn=23 li=- udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7f278e8405f0] bci=[-1,0,9] rc=0 vc=42 vn=25 li=- udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7f278e8405a0] bci=[-1,0,9] rc=2 vc=42 vn=24 li=- udi=- nc=0
n6n       treetop                                                                             [0x7f278e840690] bci=[-1,0,9] rc=0 vc=42 vn=27 li=- udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 sharedMemory )     [0x7f278e840640] bci=[-1,0,9] rc=3 vc=42 vn=5 li=- udi=- nc=1 flg=0x4
n3n           ==>loadaddr
n12n      ResolveCHK [#32]                                                                    [0x7f278e840870] bci=[-1,8,9] rc=0 vc=42 vn=29 li=- udi=- nc=1
n11n        call  BLine.<init>(IIII)V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ] ()  [0x7f278e840820] bci=[-1,8,9] rc=1 vc=42 vn=28 li=- udi=- nc=5 flg=0x20
n5n           ==>new
n7n           iconst 0 (X==0 X>=0 X<=0 )                                                      [0x7f278e8406e0] bci=[-1,4,9] rc=1 vc=42 vn=4 li=- udi=- nc=0 flg=0x302
n8n           iconst 0 (X==0 X>=0 X<=0 )                                                      [0x7f278e840730] bci=[-1,5,9] rc=1 vc=42 vn=4 li=- udi=- nc=0 flg=0x302
n9n           iconst 0 (X==0 X>=0 X<=0 )                                                      [0x7f278e840780] bci=[-1,6,9] rc=1 vc=42 vn=4 li=- udi=- nc=0 flg=0x302
n10n          iconst 0 (X==0 X>=0 X<=0 )                                                      [0x7f278e8407d0] bci=[-1,7,9] rc=1 vc=42 vn=4 li=- udi=- nc=0 flg=0x302
n13n      astore  <auto slot 1>[#384  Auto] [flags 0x7 0x0 ] (X!=0 sharedMemory )             [0x7f278e8408c0] bci=[-1,11,9] rc=0 vc=42 vn=5 li=1 udi=1 nc=1 flg=0x4
n5n         ==>new
n15n      ResolveCHK [#314]                                                                   [0x7f278e840960] bci=[-1,12,10] rc=0 vc=42 vn=31 li=- udi=- nc=1
n14n        aload  java/lang/System.out Ljava/io/PrintStream;[#385  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7f278e840910] bci=[-1,12,10] rc=3 vc=42 vn=30 li=- udi=- nc=0 flg=0x100
n19n      treetop                                                                             [0x7f278e840aa0] bci=[-1,16,10] rc=0 vc=42 vn=33 li=- udi=- nc=1
n18n        acalli  java/lang/Object.toString()Ljava/lang/String;[#387  virtual Method -56] [flags 0x500 0x0 ]  [0x7f278e840a50] bci=[-1,16,10] rc=2 vc=42 vn=32 li=- udi=- nc=2
n17n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7f278e840a00] bci=[-1,16,10] rc=1 vc=42 vn=6 li=- udi=- nc=1 flg=0x4
n16n            aload  <auto slot 1>[#384  Auto] [flags 0x7 0x0 ] (X!=0 X>=0 sharedMemory )   [0x7f278e8409b0] bci=[-1,15,10] rc=2 vc=42 vn=5 li=2 udi=2 nc=0 flg=0x104
n16n          ==>aload
n22n      ResolveAndNULLCHK on n14n [#32]                                                     [0x7f278e840b90] bci=[-1,19,10] rc=0 vc=42 vn=35 li=- udi=- nc=1
n21n        calli  java/io/PrintStream.println(Ljava/lang/String;)V[#388  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7f278e840b40] bci=[-1,19,10] rc=1 vc=42 vn=34 li=- udi=- nc=3 flg=0x20
n20n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7f278e840af0] bci=[-1,19,10] rc=1 vc=42 vn=7 li=- udi=- nc=1 flg=0x4
n14n            ==>aload
n14n          ==>aload
n18n          ==>acalli
n23n      return                                                                              [0x7f278e840be0] bci=[-1,22,11] rc=0 vc=42 vn=36 li=- udi=- nc=0
n2n       BBEnd </block_2> =====                                                              [0x7f278e840550] bci=[-1,22,11] rc=0 vc=42 vn=37 li=- udi=- nc=0

n29n      BBStart <block_4> (freq 0) (cold)                                                   [0x7f278e840dc0] bci=[-1,0,9] rc=0 vc=42 vn=38 li=- udi=- nc=0
n34n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e840f50] bci=[-1,0,9] rc=0 vc=42 vn=10 li=- udi=- nc=1
n33n        iadd                                                                              [0x7f278e840f00] bci=[-1,0,9] rc=2 vc=42 vn=10 li=- udi=- nc=2
n32n          iload  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ] (cannotOverflow )  [0x7f278e840eb0] bci=[-1,0,9] rc=1 vc=42 vn=9 li=- udi=- nc=0 flg=0x1000
n31n          iconst -1 (X!=0 X<=0 )                                                          [0x7f278e840e60] bci=[-1,0,9] rc=1 vc=42 vn=8 li=- udi=- nc=0 flg=0x204
n36n      ificmpgt --> block_2 BBStart at n1n ()                                              [0x7f278e840ff0] bci=[-1,0,9] rc=0 vc=42 vn=39 li=- udi=- nc=2 flg=0x20
n33n        ==>iadd
n35n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7f278e840fa0] bci=[-1,0,9] rc=1 vc=42 vn=4 li=- udi=- nc=0 flg=0x302
n30n      BBEnd </block_4> (cold) =====                                                       [0x7f278e840e10] bci=[-1,0,9] rc=0 vc=42 vn=40 li=- udi=- nc=0

n37n      BBStart <block_5> (freq 0) (cold)                                                   [0x7f278e841040] bci=[-1,0,9] rc=0 vc=42 vn=41 li=- udi=- nc=0
n40n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e841130] bci=[-1,0,9] rc=0 vc=42 vn=11 li=- udi=- nc=1
n39n        iconst 0x7fffffff (X!=0 X>=0 )                                                    [0x7f278e8410e0] bci=[-1,0,9] rc=1 vc=42 vn=11 li=- udi=- nc=0 flg=0x104
n42n      bstore  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]             [0x7f278e8411d0] bci=[-1,0,9] rc=0 vc=42 vn=12 li=- udi=- nc=1
n41n        bconst   2 (X!=0 X>=0 )                                                           [0x7f278e841180] bci=[-1,0,9] rc=1 vc=42 vn=12 li=- udi=- nc=0 flg=0x104
n47n      treetop                                                                             [0x7f278e841360] bci=[-1,0,9] rc=0 vc=42 vn=43 li=- udi=- nc=1
n43n        icall  jitRetranslateCallerWithPreparation[#71  helper Method] [flags 0x400 0x0 ] ()  [0x7f278e841220] bci=[-1,0,9] rc=1 vc=42 vn=42 li=- udi=- nc=3 flg=0x20
n44n          iconst 0x80000 (X!=0 X>=0 )                                                     [0x7f278e841270] bci=[-1,0,9] rc=1 vc=42 vn=15 li=- udi=- nc=0 flg=0x104
n45n          loadaddr  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ]             [0x7f278e8412c0] bci=[-1,0,9] rc=1 vc=42 vn=14 li=- udi=- nc=0
n46n          loadaddr  <J9Method>[#332  Static] [flags 0x8000307 0x40 ]                      [0x7f278e841310] bci=[-1,0,9] rc=1 vc=42 vn=13 li=- udi=- nc=0
n51n      goto --> block_2 BBStart at n1n                                                     [0x7f278e8414a0] bci=[-1,0,9] rc=0 vc=42 vn=44 li=- udi=- nc=0
n38n      BBEnd </block_5> (cold)                                                             [0x7f278e841090] bci=[-1,0,9] rc=0 vc=42 vn=45 li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 51, symRefCount = 390
</trees>

<cfg>
         0 [0x7f278e85e230] entry
                 in        = []
                 out       = [3(10000) ]
                 exception in  = []
                 exception out = []
         1 [0x7f278e85e140] exit
                 in        = [2(8001) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7f278e88c040] BBStart at 0x7f278e840500, frequency = 8001
                 in        = [5(0) 4(0) 3(5000) ]
                 out       = [1(8001) ]
                 exception in  = []
                 exception out = []
         3 [0x7f278e8ac9f0] BBStart at 0x7f278e840c30, frequency = 10000
                 in        = [0(10000) ]
                 out       = [6(5000) 2(5000) ]
                 exception in  = []
                 exception out = []
         4 [0x7f278e8acbd0] BBStart at 0x7f278e840dc0, frequency = 0
                 in        = [6(8001) ]
                 out       = [5(0) 2(0) ]
                 exception in  = []
                 exception out = []
         5 [0x7f278e8acdd0] BBStart at 0x7f278e841040, frequency = 0
                 in        = [4(0) ]
                 out       = [2(0) ]
                 exception in  = []
                 exception out = []
         6 [0x7f278e8cf210] BBStart at 0x7f278e841400, frequency = 8001
                 in        = [3(5000) ]
                 out       = [4(8001) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7f278e85c310] Acyclic region
         Subgraph: (* = exit edge)
               (0x7f278e85c3e0:0x7f278e85c2b0)0 --> 3(0x7f278e85c470)
               (0x7f278e85c470:0x7f278e85c190)3 --> 2(0x7f278e85c620) 6(0x7f278e85c550)
               (0x7f278e85c550:0x7f278e85c070)6 --> 4(0x7f278e85c710)
               (0x7f278e85c710:0x7f278e85c130)4 --> 2(0x7f278e85c620) 5(0x7f278e85c7e0)
               (0x7f278e85c7e0:0x7f278e85c0d0)5 --> 2(0x7f278e85c620)
               (0x7f278e85c620:0x7f278e85c1f0)2 --> 1(0x7f278e85c990)
               (0x7f278e85c990:0x7f278e85c250)1 -->
         0 [0x7f278e85c2b0] Block
         3 [0x7f278e85c190] Block
         6 [0x7f278e85c070] Block
         4 [0x7f278e85c130] Block
         5 [0x7f278e85c0d0] Block
         2 [0x7f278e85c1f0] Block
         1 [0x7f278e85c250] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007F278E8476E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

         </optgroup>
<optimization id=35 name=explicitNewInitialization method=BT.foo()V>
Performing 35: explicitNewInitialization
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=36 name=localDeadStoreElimination method=BT.foo()V>
Performing 36: localDeadStoreElimination
         No transformations done by this pass -- omitting listings
</optimization>

      </optgroup>
<optimization id=39 name=catchBlockRemoval method=BT.foo()V>
Performing 39: catchBlockRemoval
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=40 name=osrExceptionEdgeRemoval method=BT.foo()V>
Performing 40: osrExceptionEdgeRemoval
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=45 name=CFGSimplification method=BT.foo()V>
Performing 45: CFGSimplification
         No transformations done by this pass -- omitting listings
</optimization>

   </optgroup>
<optimization id=47 name=dataAccessAccelerator method=BT.foo()V>
Performing 47: dataAccessAccelerator
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=51 name=blockSplitter method=BT.foo()V>
Performing 51: blockSplitter
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=52 name=treeSimplification method=BT.foo()V>
Performing 52: treeSimplification
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=53 name=virtualGuardHeadMerger method=BT.foo()V>
Performing 53: virtualGuardHeadMerger
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=54 name=recognizedCallTransformer method=BT.foo()V>
Performing 54: recognizedCallTransformer
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=55 name=basicBlockExtension method=BT.foo()V>
Performing 55: basicBlockExtension
[     4] O^O ORDER BLOCKS:  in block_3, branch taken dest (2) is a block after a single goto, so redirecting to its goto's destination (4)
[     5] O^O ORDER BLOCKS:  empty block_6, redirecting edges around this block then removing it
[     6] O^O ORDER BLOCKS:  block_6 has no predecessors so removing it and its out edges from the flow graph
[     7] O^O ORDER BLOCKS:  empty block_6, redirecting edges around this block then removing it
[     8] O^O ORDER BLOCKS:  Propagating coldness information
[     9] O^O ORDER BLOCKS:  choose best successor for block_0 (freq:10000)
[    10] O^O ORDER BLOCKS:  choose best successor for block_3 (freq:10000)
[    11] O^O ORDER BLOCKS:  choose best successor for block_2 (freq:8001)
[    12] O^O ORDER BLOCKS:  choose best successor for block_1 (freq:10000)
[    13] O^O ORDER BLOCKS:  choose best successor for block_4 (freq:0)
[    14] O^O ORDER BLOCKS:  choose best successor for block_5 (freq:0)
[    15] O^O ORDER BLOCKS:  block_5 is extension of previous block
<trees
	title="Trees after basicBlockExtension"
	method="BT.foo()V"
	hotness="warm">

Trees after basicBlockExtension: for BT.foo()V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n24n      BBStart <block_3> (freq 10000)                                                      [0x7f278e840c30] bci=[-1,0,9] rc=0 vc=78 vn=17 li=- udi=- nc=0
n28n      ificmpeq --> block_4 BBStart at n29n ()                                             [0x7f278e840d70] bci=[-1,0,9] rc=0 vc=78 vn=18 li=- udi=- nc=2 flg=0x20
n26n        iload  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ] (cannotOverflow )  [0x7f278e840cd0] bci=[-1,0,9] rc=1 vc=78 vn=3 li=- udi=- nc=0 flg=0x1000
n27n        iconst 1 (X!=0 X>=0 )                                                             [0x7f278e840d20] bci=[-1,0,9] rc=1 vc=78 vn=2 li=- udi=- nc=0 flg=0x104
n25n      BBEnd </block_3> =====                                                              [0x7f278e840c80] bci=[-1,0,9] rc=0 vc=78 vn=19 li=- udi=- nc=0

n1n       BBStart <block_2> (freq 8001)                                                       [0x7f278e840500] bci=[-1,0,9] rc=0 vc=78 vn=23 li=- udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7f278e8405f0] bci=[-1,0,9] rc=0 vc=78 vn=25 li=- udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7f278e8405a0] bci=[-1,0,9] rc=2 vc=78 vn=24 li=- udi=- nc=0
n6n       treetop                                                                             [0x7f278e840690] bci=[-1,0,9] rc=0 vc=78 vn=27 li=- udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 sharedMemory )     [0x7f278e840640] bci=[-1,0,9] rc=3 vc=78 vn=5 li=- udi=- nc=1 flg=0x4
n3n           ==>loadaddr
n12n      ResolveCHK [#32]                                                                    [0x7f278e840870] bci=[-1,8,9] rc=0 vc=78 vn=29 li=- udi=- nc=1
n11n        call  BLine.<init>(IIII)V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ] ()  [0x7f278e840820] bci=[-1,8,9] rc=1 vc=78 vn=28 li=- udi=- nc=5 flg=0x20
n5n           ==>new
n7n           iconst 0 (X==0 X>=0 X<=0 )                                                      [0x7f278e8406e0] bci=[-1,4,9] rc=1 vc=78 vn=4 li=- udi=- nc=0 flg=0x302
n8n           iconst 0 (X==0 X>=0 X<=0 )                                                      [0x7f278e840730] bci=[-1,5,9] rc=1 vc=78 vn=4 li=- udi=- nc=0 flg=0x302
n9n           iconst 0 (X==0 X>=0 X<=0 )                                                      [0x7f278e840780] bci=[-1,6,9] rc=1 vc=78 vn=4 li=- udi=- nc=0 flg=0x302
n10n          iconst 0 (X==0 X>=0 X<=0 )                                                      [0x7f278e8407d0] bci=[-1,7,9] rc=1 vc=78 vn=4 li=- udi=- nc=0 flg=0x302
n13n      astore  <auto slot 1>[#384  Auto] [flags 0x7 0x0 ] (X!=0 sharedMemory )             [0x7f278e8408c0] bci=[-1,11,9] rc=0 vc=78 vn=5 li=- udi=1 nc=1 flg=0x4
n5n         ==>new
n15n      ResolveCHK [#314]                                                                   [0x7f278e840960] bci=[-1,12,10] rc=0 vc=78 vn=31 li=- udi=- nc=1
n14n        aload  java/lang/System.out Ljava/io/PrintStream;[#385  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7f278e840910] bci=[-1,12,10] rc=3 vc=78 vn=30 li=- udi=- nc=0 flg=0x100
n19n      treetop                                                                             [0x7f278e840aa0] bci=[-1,16,10] rc=0 vc=78 vn=33 li=- udi=- nc=1
n18n        acalli  java/lang/Object.toString()Ljava/lang/String;[#387  virtual Method -56] [flags 0x500 0x0 ]  [0x7f278e840a50] bci=[-1,16,10] rc=2 vc=78 vn=32 li=- udi=- nc=2
n17n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7f278e840a00] bci=[-1,16,10] rc=1 vc=78 vn=6 li=- udi=- nc=1 flg=0x4
n16n            aload  <auto slot 1>[#384  Auto] [flags 0x7 0x0 ] (X!=0 X>=0 sharedMemory )   [0x7f278e8409b0] bci=[-1,15,10] rc=2 vc=78 vn=5 li=- udi=2 nc=0 flg=0x104
n16n          ==>aload
n22n      ResolveAndNULLCHK on n14n [#32]                                                     [0x7f278e840b90] bci=[-1,19,10] rc=0 vc=78 vn=35 li=- udi=- nc=1
n21n        calli  java/io/PrintStream.println(Ljava/lang/String;)V[#388  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7f278e840b40] bci=[-1,19,10] rc=1 vc=78 vn=34 li=- udi=- nc=3 flg=0x20
n20n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7f278e840af0] bci=[-1,19,10] rc=1 vc=78 vn=7 li=- udi=- nc=1 flg=0x4
n14n            ==>aload
n14n          ==>aload
n18n          ==>acalli
n23n      return                                                                              [0x7f278e840be0] bci=[-1,22,11] rc=0 vc=78 vn=36 li=- udi=- nc=0
n2n       BBEnd </block_2> =====                                                              [0x7f278e840550] bci=[-1,22,11] rc=0 vc=78 vn=37 li=- udi=- nc=0

n29n      BBStart <block_4> (freq 0) (cold)                                                   [0x7f278e840dc0] bci=[-1,0,9] rc=0 vc=78 vn=38 li=- udi=- nc=0
n34n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e840f50] bci=[-1,0,9] rc=0 vc=78 vn=10 li=- udi=- nc=1
n33n        iadd                                                                              [0x7f278e840f00] bci=[-1,0,9] rc=2 vc=78 vn=10 li=- udi=- nc=2
n32n          iload  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ] (cannotOverflow )  [0x7f278e840eb0] bci=[-1,0,9] rc=1 vc=78 vn=9 li=- udi=- nc=0 flg=0x1000
n31n          iconst -1 (X!=0 X<=0 )                                                          [0x7f278e840e60] bci=[-1,0,9] rc=1 vc=78 vn=8 li=- udi=- nc=0 flg=0x204
n36n      ificmpgt --> block_2 BBStart at n1n ()                                              [0x7f278e840ff0] bci=[-1,0,9] rc=0 vc=78 vn=39 li=- udi=- nc=2 flg=0x20
n33n        ==>iadd
n35n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7f278e840fa0] bci=[-1,0,9] rc=1 vc=78 vn=4 li=- udi=- nc=0 flg=0x302
n30n      BBEnd </block_4> (cold)                                                             [0x7f278e840e10] bci=[-1,0,9] rc=0 vc=78 vn=40 li=- udi=- nc=0
n37n      BBStart <block_5> (freq 0) (extension of previous block) (cold)                     [0x7f278e841040] bci=[-1,0,9] rc=0 vc=78 vn=41 li=- udi=- nc=0
n40n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e841130] bci=[-1,0,9] rc=0 vc=78 vn=11 li=- udi=- nc=1
n39n        iconst 0x7fffffff (X!=0 X>=0 )                                                    [0x7f278e8410e0] bci=[-1,0,9] rc=1 vc=78 vn=11 li=- udi=- nc=0 flg=0x104
n42n      bstore  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]             [0x7f278e8411d0] bci=[-1,0,9] rc=0 vc=78 vn=12 li=- udi=- nc=1
n41n        bconst   2 (X!=0 X>=0 )                                                           [0x7f278e841180] bci=[-1,0,9] rc=1 vc=78 vn=12 li=- udi=- nc=0 flg=0x104
n47n      treetop                                                                             [0x7f278e841360] bci=[-1,0,9] rc=0 vc=78 vn=43 li=- udi=- nc=1
n43n        icall  jitRetranslateCallerWithPreparation[#71  helper Method] [flags 0x400 0x0 ] ()  [0x7f278e841220] bci=[-1,0,9] rc=1 vc=78 vn=42 li=- udi=- nc=3 flg=0x20
n44n          iconst 0x80000 (X!=0 X>=0 )                                                     [0x7f278e841270] bci=[-1,0,9] rc=1 vc=78 vn=15 li=- udi=- nc=0 flg=0x104
n45n          loadaddr  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ]             [0x7f278e8412c0] bci=[-1,0,9] rc=1 vc=78 vn=14 li=- udi=- nc=0
n46n          loadaddr  <J9Method>[#332  Static] [flags 0x8000307 0x40 ]                      [0x7f278e841310] bci=[-1,0,9] rc=1 vc=78 vn=13 li=- udi=- nc=0
n51n      goto --> block_2 BBStart at n1n                                                     [0x7f278e8414a0] bci=[-1,0,9] rc=0 vc=78 vn=44 li=- udi=- nc=0
n38n      BBEnd </block_5> (cold)                                                             [0x7f278e841090] bci=[-1,0,9] rc=0 vc=78 vn=45 li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 48, symRefCount = 390
</trees>

<cfg>
         0 [0x7f278e85e230] entry
                 in        = []
                 out       = [3(10000) ]
                 exception in  = []
                 exception out = []
         1 [0x7f278e85e140] exit
                 in        = [2(8001) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7f278e88c040] BBStart at 0x7f278e840500, frequency = 8001
                 in        = [5(0) 4(0) 3(5000) ]
                 out       = [1(8001) ]
                 exception in  = []
                 exception out = []
         3 [0x7f278e8ac9f0] BBStart at 0x7f278e840c30, frequency = 10000
                 in        = [0(10000) ]
                 out       = [4(5000) 2(5000) ]
                 exception in  = []
                 exception out = []
         4 [0x7f278e8acbd0] BBStart at 0x7f278e840dc0, frequency = 0
                 in        = [3(5000) ]
                 out       = [5(0) 2(0) ]
                 exception in  = []
                 exception out = []
         5 [0x7f278e8acdd0] BBStart at 0x7f278e841040, frequency = 0
                 in        = [4(0) ]
                 out       = [2(0) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7f278e85c310] Acyclic region
         Subgraph: (* = exit edge)
               (0x7f278e85c3e0:0x7f278e85c2b0)0 --> 3(0x7f278e85c470)
               (0x7f278e85c470:0x7f278e85c190)3 --> 4(0x7f278e85c710) 2(0x7f278e85c620)
               (0x7f278e85c710:0x7f278e85c130)4 --> 2(0x7f278e85c620) 5(0x7f278e85c7e0)
               (0x7f278e85c7e0:0x7f278e85c0d0)5 --> 2(0x7f278e85c620)
               (0x7f278e85c620:0x7f278e85c1f0)2 --> 1(0x7f278e85c990)
               (0x7f278e85c990:0x7f278e85c250)1 -->
         0 [0x7f278e85c2b0] Block
         3 [0x7f278e85c190] Block
         4 [0x7f278e85c130] Block
         5 [0x7f278e85c0d0] Block
         2 [0x7f278e85c1f0] Block
         1 [0x7f278e85c250] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007F278E8476E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

   <optgroup name=localValuePropagationGroup>
<optimization id=56 name=localCSE method=BT.foo()V>
Performing 56: localCSE
[    16] O^O LOCAL COMMON SUBEXPRESSION ELIMINATION:    Local Common Subexpression Elimination commoning node : 00007F278E840730 by available node : 00007F278E8406E0
[    17] O^O LOCAL COMMON SUBEXPRESSION ELIMINATION:    Local Common Subexpression Elimination commoning node : 00007F278E840780 by available node : 00007F278E8406E0
[    18] O^O LOCAL COMMON SUBEXPRESSION ELIMINATION:    Local Common Subexpression Elimination commoning node : 00007F278E8407D0 by available node : 00007F278E8406E0
[    19] O^O LOCAL COMMON SUBEXPRESSION ELIMINATION:    Local Common Subexpression Elimination propagating local #384 in node : 00007F278E8409B0 PARENT : 00007F278E840A00 from node 00007F278E8408C0
         O^O LOCAL COMMON SUBEXPRESSION ELIMINATION:    Rhs of store def node : 00007F278E840640
[    20] O^O LOCAL COMMON SUBEXPRESSION ELIMINATION:    Local Common Subexpression Elimination commoning node : 00007F278E8409B0 again
              (Invalidating use/def info)
<trees
	title="Trees after localCSE"
	method="BT.foo()V"
	hotness="warm">

Trees after localCSE: for BT.foo()V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n24n      BBStart <block_3> (freq 10000)                                                      [0x7f278e840c30] bci=[-1,0,9] rc=0 vc=78 vn=17 li=- udi=- nc=0
n28n      ificmpeq --> block_4 BBStart at n29n ()                                             [0x7f278e840d70] bci=[-1,0,9] rc=0 vc=86 vn=18 li=- udi=- nc=2 flg=0x20
n26n        iload  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ] (cannotOverflow )  [0x7f278e840cd0] bci=[-1,0,9] rc=1 vc=86 vn=3 li=- udi=- nc=0 flg=0x1000
n27n        iconst 1 (X!=0 X>=0 )                                                             [0x7f278e840d20] bci=[-1,0,9] rc=1 vc=86 vn=2 li=- udi=- nc=0 flg=0x104
n25n      BBEnd </block_3> =====                                                              [0x7f278e840c80] bci=[-1,0,9] rc=0 vc=86 vn=19 li=- udi=- nc=0

n1n       BBStart <block_2> (freq 8001)                                                       [0x7f278e840500] bci=[-1,0,9] rc=0 vc=78 vn=23 li=- udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7f278e8405f0] bci=[-1,0,9] rc=0 vc=88 vn=25 li=- udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7f278e8405a0] bci=[-1,0,9] rc=2 vc=88 vn=24 li=- udi=- nc=0
n6n       treetop                                                                             [0x7f278e840690] bci=[-1,0,9] rc=0 vc=88 vn=27 li=- udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 sharedMemory )     [0x7f278e840640] bci=[-1,0,9] rc=5 vc=88 vn=5 li=- udi=- nc=1 flg=0x4
n3n           ==>loadaddr
n12n      ResolveCHK [#32]                                                                    [0x7f278e840870] bci=[-1,8,9] rc=0 vc=88 vn=29 li=- udi=- nc=1
n11n        call  BLine.<init>(IIII)V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ] ()  [0x7f278e840820] bci=[-1,8,9] rc=1 vc=88 vn=28 li=- udi=- nc=5 flg=0x20
n5n           ==>new
n7n           iconst 0 (X==0 X>=0 X<=0 )                                                      [0x7f278e8406e0] bci=[-1,4,9] rc=4 vc=88 vn=4 li=- udi=- nc=0 flg=0x302
n7n           ==>iconst 0
n7n           ==>iconst 0
n7n           ==>iconst 0
n13n      astore  <auto slot 1>[#384  Auto] [flags 0x7 0x0 ] (X!=0 sharedMemory )             [0x7f278e8408c0] bci=[-1,11,9] rc=0 vc=88 vn=5 li=- udi=1 nc=1 flg=0x4
n5n         ==>new
n15n      ResolveCHK [#314]                                                                   [0x7f278e840960] bci=[-1,12,10] rc=0 vc=88 vn=31 li=- udi=- nc=1
n14n        aload  java/lang/System.out Ljava/io/PrintStream;[#385  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7f278e840910] bci=[-1,12,10] rc=3 vc=88 vn=30 li=- udi=- nc=0 flg=0x100
n19n      treetop                                                                             [0x7f278e840aa0] bci=[-1,16,10] rc=0 vc=88 vn=33 li=- udi=- nc=1
n18n        acalli  java/lang/Object.toString()Ljava/lang/String;[#387  virtual Method -56] [flags 0x500 0x0 ]  [0x7f278e840a50] bci=[-1,16,10] rc=2 vc=88 vn=32 li=- udi=- nc=2
n17n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7f278e840a00] bci=[-1,16,10] rc=1 vc=88 vn=6 li=- udi=- nc=1 flg=0x4
n5n             ==>new
n5n           ==>new
n22n      ResolveAndNULLCHK on n14n [#32]                                                     [0x7f278e840b90] bci=[-1,19,10] rc=0 vc=88 vn=35 li=- udi=- nc=1
n21n        calli  java/io/PrintStream.println(Ljava/lang/String;)V[#388  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7f278e840b40] bci=[-1,19,10] rc=1 vc=88 vn=34 li=- udi=- nc=3 flg=0x20
n20n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7f278e840af0] bci=[-1,19,10] rc=1 vc=88 vn=7 li=- udi=- nc=1 flg=0x4
n14n            ==>aload
n14n          ==>aload
n18n          ==>acalli
n23n      return                                                                              [0x7f278e840be0] bci=[-1,22,11] rc=0 vc=88 vn=36 li=- udi=- nc=0
n2n       BBEnd </block_2> =====                                                              [0x7f278e840550] bci=[-1,22,11] rc=0 vc=88 vn=37 li=- udi=- nc=0

n29n      BBStart <block_4> (freq 0) (cold)                                                   [0x7f278e840dc0] bci=[-1,0,9] rc=0 vc=78 vn=38 li=- udi=- nc=0
n34n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e840f50] bci=[-1,0,9] rc=0 vc=78 vn=10 li=- udi=- nc=1
n33n        iadd                                                                              [0x7f278e840f00] bci=[-1,0,9] rc=2 vc=78 vn=10 li=- udi=- nc=2
n32n          iload  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ] (cannotOverflow )  [0x7f278e840eb0] bci=[-1,0,9] rc=1 vc=78 vn=9 li=- udi=- nc=0 flg=0x1000
n31n          iconst -1 (X!=0 X<=0 )                                                          [0x7f278e840e60] bci=[-1,0,9] rc=1 vc=78 vn=8 li=- udi=- nc=0 flg=0x204
n36n      ificmpgt --> block_2 BBStart at n1n ()                                              [0x7f278e840ff0] bci=[-1,0,9] rc=0 vc=78 vn=39 li=- udi=- nc=2 flg=0x20
n33n        ==>iadd
n35n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7f278e840fa0] bci=[-1,0,9] rc=1 vc=78 vn=4 li=- udi=- nc=0 flg=0x302
n30n      BBEnd </block_4> (cold)                                                             [0x7f278e840e10] bci=[-1,0,9] rc=0 vc=78 vn=40 li=- udi=- nc=0
n37n      BBStart <block_5> (freq 0) (extension of previous block) (cold)                     [0x7f278e841040] bci=[-1,0,9] rc=0 vc=78 vn=41 li=- udi=- nc=0
n40n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e841130] bci=[-1,0,9] rc=0 vc=78 vn=11 li=- udi=- nc=1
n39n        iconst 0x7fffffff (X!=0 X>=0 )                                                    [0x7f278e8410e0] bci=[-1,0,9] rc=1 vc=78 vn=11 li=- udi=- nc=0 flg=0x104
n42n      bstore  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]             [0x7f278e8411d0] bci=[-1,0,9] rc=0 vc=78 vn=12 li=- udi=- nc=1
n41n        bconst   2 (X!=0 X>=0 )                                                           [0x7f278e841180] bci=[-1,0,9] rc=1 vc=78 vn=12 li=- udi=- nc=0 flg=0x104
n47n      treetop                                                                             [0x7f278e841360] bci=[-1,0,9] rc=0 vc=78 vn=43 li=- udi=- nc=1
n43n        icall  jitRetranslateCallerWithPreparation[#71  helper Method] [flags 0x400 0x0 ] ()  [0x7f278e841220] bci=[-1,0,9] rc=1 vc=78 vn=42 li=- udi=- nc=3 flg=0x20
n44n          iconst 0x80000 (X!=0 X>=0 )                                                     [0x7f278e841270] bci=[-1,0,9] rc=1 vc=78 vn=15 li=- udi=- nc=0 flg=0x104
n45n          loadaddr  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ]             [0x7f278e8412c0] bci=[-1,0,9] rc=1 vc=78 vn=14 li=- udi=- nc=0
n46n          loadaddr  <J9Method>[#332  Static] [flags 0x8000307 0x40 ]                      [0x7f278e841310] bci=[-1,0,9] rc=1 vc=78 vn=13 li=- udi=- nc=0
n51n      goto --> block_2 BBStart at n1n                                                     [0x7f278e8414a0] bci=[-1,0,9] rc=0 vc=78 vn=44 li=- udi=- nc=0
n38n      BBEnd </block_5> (cold)                                                             [0x7f278e841090] bci=[-1,0,9] rc=0 vc=78 vn=45 li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 44, symRefCount = 390
</trees>

<cfg>
         0 [0x7f278e85e230] entry
                 in        = []
                 out       = [3(10000) ]
                 exception in  = []
                 exception out = []
         1 [0x7f278e85e140] exit
                 in        = [2(8001) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7f278e88c040] BBStart at 0x7f278e840500, frequency = 8001
                 in        = [5(0) 4(0) 3(5000) ]
                 out       = [1(8001) ]
                 exception in  = []
                 exception out = []
         3 [0x7f278e8ac9f0] BBStart at 0x7f278e840c30, frequency = 10000
                 in        = [0(10000) ]
                 out       = [4(5000) 2(5000) ]
                 exception in  = []
                 exception out = []
         4 [0x7f278e8acbd0] BBStart at 0x7f278e840dc0, frequency = 0
                 in        = [3(5000) ]
                 out       = [5(0) 2(0) ]
                 exception in  = []
                 exception out = []
         5 [0x7f278e8acdd0] BBStart at 0x7f278e841040, frequency = 0
                 in        = [4(0) ]
                 out       = [2(0) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7f278e85c310] Acyclic region
         Subgraph: (* = exit edge)
               (0x7f278e85c3e0:0x7f278e85c2b0)0 --> 3(0x7f278e85c470)
               (0x7f278e85c470:0x7f278e85c190)3 --> 4(0x7f278e85c710) 2(0x7f278e85c620)
               (0x7f278e85c710:0x7f278e85c130)4 --> 2(0x7f278e85c620) 5(0x7f278e85c7e0)
               (0x7f278e85c7e0:0x7f278e85c0d0)5 --> 2(0x7f278e85c620)
               (0x7f278e85c620:0x7f278e85c1f0)2 --> 1(0x7f278e85c990)
               (0x7f278e85c990:0x7f278e85c250)1 -->
         0 [0x7f278e85c2b0] Block
         3 [0x7f278e85c190] Block
         4 [0x7f278e85c130] Block
         5 [0x7f278e85c0d0] Block
         2 [0x7f278e85c1f0] Block
         1 [0x7f278e85c250] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007F278E8476E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

<optimization id=57 name=localValuePropagation method=BT.foo()V>
Performing 57: localValuePropagation
         No transformations done by this pass -- omitting listings
</optimization>

   </optgroup>
<optimization id=60 name=explicitNewInitialization method=BT.foo()V>
Performing 60: explicitNewInitialization
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=61 name=arraycopyTransformation method=BT.foo()V>
Performing 61: arraycopyTransformation
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=62 name=treeSimplification method=BT.foo()V>
Performing 62: treeSimplification
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=63 name=asyncCheckInsertion method=BT.foo()V>
Performing 63: asyncCheckInsertion
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=64 name=localCSE method=BT.foo()V>
Performing 64: localCSE
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=65 name=treeSimplification method=BT.foo()V>
Performing 65: treeSimplification
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=66 name=andSimplification method=BT.foo()V>
Performing 66: andSimplification
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=67 name=compactNullChecks method=BT.foo()V>
Performing 67: compactNullChecks
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=68 name=deadTreesElimination method=BT.foo()V>
Performing 68: deadTreesElimination
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=74 name=dynamicLiteralPool method=BT.foo()V>
Performing 74: dynamicLiteralPool
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=76 name=trivialBlockExtension method=BT.foo()V>
Performing 76: trivialBlockExtension
         No transformations done by this pass -- omitting listings
</optimization>

   <optgroup name=cheapTacticalGlobalRegisterAllocatorGroup>
<optimization id=86 name=redundantGotoElimination method=BT.foo()V>
Performing 86: redundantGotoElimination
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=87 name=tacticalGlobalRegisterAllocator method=BT.foo()V>
Performing 87: tacticalGlobalRegisterAllocator
         Weight of candidate (symRef #384 ) is 0
              (Invalidating value number info)
<trees
	title="Trees after tacticalGlobalRegisterAllocator"
	method="BT.foo()V"
	hotness="warm">

Trees after tacticalGlobalRegisterAllocator: for BT.foo()V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n24n      BBStart <block_3> (freq 10000)                                                      [0x7f278e840c30] bci=[-1,0,9] rc=0 vc=112 vn=- li=-1 udi=- nc=0
n28n      ificmpeq --> block_4 BBStart at n29n ()                                             [0x7f278e840d70] bci=[-1,0,9] rc=0 vc=112 vn=- li=-1 udi=- nc=2 flg=0x20
n26n        iload  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ] (cannotOverflow )  [0x7f278e840cd0] bci=[-1,0,9] rc=1 vc=112 vn=- li=- udi=- nc=0 flg=0x1000
n27n        iconst 1 (X!=0 X>=0 )                                                             [0x7f278e840d20] bci=[-1,0,9] rc=1 vc=112 vn=- li=- udi=- nc=0 flg=0x104
n25n      BBEnd </block_3> =====                                                              [0x7f278e840c80] bci=[-1,0,9] rc=0 vc=112 vn=- li=-1 udi=- nc=0

n1n       BBStart <block_2> (freq 8001)                                                       [0x7f278e840500] bci=[-1,0,9] rc=0 vc=112 vn=- li=-1 udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7f278e8405f0] bci=[-1,0,9] rc=0 vc=112 vn=- li=-1 udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7f278e8405a0] bci=[-1,0,9] rc=2 vc=112 vn=- li=- udi=- nc=0
n6n       treetop                                                                             [0x7f278e840690] bci=[-1,0,9] rc=0 vc=112 vn=- li=-1 udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7f278e840640] bci=[-1,0,9] rc=5 vc=112 vn=- li=- udi=- nc=1 flg=0x104
n3n           ==>loadaddr
n12n      ResolveCHK [#32]                                                                    [0x7f278e840870] bci=[-1,8,9] rc=0 vc=112 vn=- li=-1 udi=- nc=1
n11n        call  BLine.<init>(IIII)V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ] ()  [0x7f278e840820] bci=[-1,8,9] rc=1 vc=112 vn=- li=- udi=- nc=5 flg=0x20
n5n           ==>new
n7n           iconst 0 (X==0 X>=0 X<=0 )                                                      [0x7f278e8406e0] bci=[-1,4,9] rc=4 vc=112 vn=- li=- udi=- nc=0 flg=0x302
n7n           ==>iconst 0
n7n           ==>iconst 0
n7n           ==>iconst 0
n13n      astore  <auto slot 1>[#384  Auto] [flags 0x7 0x0 ] (X!=0 sharedMemory )             [0x7f278e8408c0] bci=[-1,11,9] rc=0 vc=112 vn=- li=-1 udi=1 nc=1 flg=0x4
n5n         ==>new
n15n      ResolveCHK [#314]                                                                   [0x7f278e840960] bci=[-1,12,10] rc=0 vc=112 vn=- li=-1 udi=- nc=1
n14n        aload  java/lang/System.out Ljava/io/PrintStream;[#385  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7f278e840910] bci=[-1,12,10] rc=3 vc=112 vn=- li=- udi=- nc=0 flg=0x100
n19n      treetop                                                                             [0x7f278e840aa0] bci=[-1,16,10] rc=0 vc=112 vn=- li=-1 udi=- nc=1
n18n        acalli  java/lang/Object.toString()Ljava/lang/String;[#387  virtual Method -56] [flags 0x500 0x0 ]  [0x7f278e840a50] bci=[-1,16,10] rc=2 vc=112 vn=- li=- udi=- nc=2
n17n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7f278e840a00] bci=[-1,16,10] rc=1 vc=112 vn=- li=- udi=- nc=1 flg=0x4
n5n             ==>new
n5n           ==>new
n22n      ResolveAndNULLCHK on n14n [#32]                                                     [0x7f278e840b90] bci=[-1,19,10] rc=0 vc=112 vn=- li=-1 udi=- nc=1
n21n        calli  java/io/PrintStream.println(Ljava/lang/String;)V[#388  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7f278e840b40] bci=[-1,19,10] rc=1 vc=112 vn=- li=- udi=- nc=3 flg=0x20
n20n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7f278e840af0] bci=[-1,19,10] rc=1 vc=112 vn=- li=- udi=- nc=1 flg=0x4
n14n            ==>aload
n14n          ==>aload
n18n          ==>acalli
n23n      return                                                                              [0x7f278e840be0] bci=[-1,22,11] rc=0 vc=112 vn=- li=-1 udi=- nc=0
n2n       BBEnd </block_2> =====                                                              [0x7f278e840550] bci=[-1,22,11] rc=0 vc=112 vn=- li=-1 udi=- nc=0

n29n      BBStart <block_4> (freq 0) (cold)                                                   [0x7f278e840dc0] bci=[-1,0,9] rc=0 vc=112 vn=- li=-1 udi=- nc=0
n34n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e840f50] bci=[-1,0,9] rc=0 vc=112 vn=- li=-1 udi=- nc=1
n33n        iadd                                                                              [0x7f278e840f00] bci=[-1,0,9] rc=2 vc=112 vn=- li=- udi=- nc=2
n32n          iload  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ] (cannotOverflow )  [0x7f278e840eb0] bci=[-1,0,9] rc=1 vc=112 vn=- li=- udi=- nc=0 flg=0x1000
n31n          iconst -1 (X!=0 X<=0 )                                                          [0x7f278e840e60] bci=[-1,0,9] rc=1 vc=112 vn=- li=- udi=- nc=0 flg=0x204
n36n      ificmpgt --> block_2 BBStart at n1n ()                                              [0x7f278e840ff0] bci=[-1,0,9] rc=0 vc=112 vn=- li=-1 udi=- nc=2 flg=0x20
n33n        ==>iadd
n35n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7f278e840fa0] bci=[-1,0,9] rc=1 vc=112 vn=- li=- udi=- nc=0 flg=0x302
n30n      BBEnd </block_4> (cold)                                                             [0x7f278e840e10] bci=[-1,0,9] rc=0 vc=112 vn=- li=-1 udi=- nc=0
n37n      BBStart <block_5> (freq 0) (extension of previous block) (cold)                     [0x7f278e841040] bci=[-1,0,9] rc=0 vc=112 vn=- li=-1 udi=- nc=0
n40n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e841130] bci=[-1,0,9] rc=0 vc=112 vn=- li=-1 udi=- nc=1
n39n        iconst 0x7fffffff (X!=0 X>=0 )                                                    [0x7f278e8410e0] bci=[-1,0,9] rc=1 vc=112 vn=- li=- udi=- nc=0 flg=0x104
n42n      bstore  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]             [0x7f278e8411d0] bci=[-1,0,9] rc=0 vc=112 vn=- li=-1 udi=- nc=1
n41n        bconst   2 (X!=0 X>=0 )                                                           [0x7f278e841180] bci=[-1,0,9] rc=1 vc=112 vn=- li=- udi=- nc=0 flg=0x104
n47n      treetop                                                                             [0x7f278e841360] bci=[-1,0,9] rc=0 vc=112 vn=- li=-1 udi=- nc=1
n43n        icall  jitRetranslateCallerWithPreparation[#71  helper Method] [flags 0x400 0x0 ] ()  [0x7f278e841220] bci=[-1,0,9] rc=1 vc=112 vn=- li=- udi=- nc=3 flg=0x20
n44n          iconst 0x80000 (X!=0 X>=0 )                                                     [0x7f278e841270] bci=[-1,0,9] rc=1 vc=112 vn=- li=- udi=- nc=0 flg=0x104
n45n          loadaddr  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ]             [0x7f278e8412c0] bci=[-1,0,9] rc=1 vc=112 vn=- li=- udi=- nc=0
n46n          loadaddr  <J9Method>[#332  Static] [flags 0x8000307 0x40 ]                      [0x7f278e841310] bci=[-1,0,9] rc=1 vc=112 vn=- li=- udi=- nc=0
n51n      goto --> block_2 BBStart at n1n                                                     [0x7f278e8414a0] bci=[-1,0,9] rc=0 vc=112 vn=- li=-1 udi=- nc=0
n38n      BBEnd </block_5> (cold)                                                             [0x7f278e841090] bci=[-1,0,9] rc=0 vc=112 vn=- li=-1 udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 44, symRefCount = 390
</trees>

<cfg>
         0 [0x7f278e85e230] entry
                 in        = []
                 out       = [3(10000) ]
                 exception in  = []
                 exception out = []
         1 [0x7f278e85e140] exit
                 in        = [2(8001) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7f278e88c040] BBStart at 0x7f278e840500, frequency = 8001
                 in        = [5(0) 4(0) 3(5000) ]
                 out       = [1(8001) ]
                 exception in  = []
                 exception out = []
         3 [0x7f278e8ac9f0] BBStart at 0x7f278e840c30, frequency = 10000
                 in        = [0(10000) ]
                 out       = [4(5000) 2(5000) ]
                 exception in  = []
                 exception out = []
         4 [0x7f278e8acbd0] BBStart at 0x7f278e840dc0, frequency = 0
                 in        = [3(5000) ]
                 out       = [5(0) 2(0) ]
                 exception in  = []
                 exception out = []
         5 [0x7f278e8acdd0] BBStart at 0x7f278e841040, frequency = 0
                 in        = [4(0) ]
                 out       = [2(0) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7f278e85c310] Acyclic region
         Subgraph: (* = exit edge)
               (0x7f278e85c3e0:0x7f278e85c2b0)0 --> 3(0x7f278e85c470)
               (0x7f278e85c470:0x7f278e85c190)3 --> 4(0x7f278e85c710) 2(0x7f278e85c620)
               (0x7f278e85c710:0x7f278e85c130)4 --> 2(0x7f278e85c620) 5(0x7f278e85c7e0)
               (0x7f278e85c7e0:0x7f278e85c0d0)5 --> 2(0x7f278e85c620)
               (0x7f278e85c620:0x7f278e85c1f0)2 --> 1(0x7f278e85c990)
               (0x7f278e85c990:0x7f278e85c250)1 -->
         0 [0x7f278e85c2b0] Block
         3 [0x7f278e85c190] Block
         4 [0x7f278e85c130] Block
         5 [0x7f278e85c0d0] Block
         2 [0x7f278e85c1f0] Block
         1 [0x7f278e85c250] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007F278E8476E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

   </optgroup>
<optimization id=88 name=jProfilingValue method=BT.foo()V>
Performing 88: jProfilingValue mustBeDone
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=89 name=treeLowering method=BT.foo()V>
Performing 89: treeLowering mustBeDone
         No transformations done by this pass -- omitting listings
</optimization>

   <optgroup name=globalDeadStoreGroup>
<optimization id=90 name=globalDeadStoreElimination method=BT.foo()V>
Performing 90: globalDeadStoreElimination
            (Building use/def info)
[    21] O^O DEAD STORE ELIMINATION: Global Store Elimination eliminating group 0:
         O^O DEAD STORE ELIMINATION: Removing astore n13n [00007F278E8408C0] 
              (Invalidating use/def info)
<trees
	title="Trees after globalDeadStoreElimination"
	method="BT.foo()V"
	hotness="warm">

Trees after globalDeadStoreElimination: for BT.foo()V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n24n      BBStart <block_3> (freq 10000)                                                      [0x7f278e840c30] bci=[-1,0,9] rc=0 vc=119 vn=- li=- udi=- nc=0
n28n      ificmpeq --> block_4 BBStart at n29n ()                                             [0x7f278e840d70] bci=[-1,0,9] rc=0 vc=119 vn=- li=- udi=- nc=2 flg=0x20
n26n        iload  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ] (cannotOverflow )  [0x7f278e840cd0] bci=[-1,0,9] rc=1 vc=119 vn=- li=- udi=- nc=0 flg=0x1000
n27n        iconst 1 (X!=0 X>=0 )                                                             [0x7f278e840d20] bci=[-1,0,9] rc=1 vc=119 vn=- li=- udi=- nc=0 flg=0x104
n25n      BBEnd </block_3> =====                                                              [0x7f278e840c80] bci=[-1,0,9] rc=0 vc=119 vn=- li=- udi=- nc=0

n1n       BBStart <block_2> (freq 8001)                                                       [0x7f278e840500] bci=[-1,0,9] rc=0 vc=119 vn=- li=- udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7f278e8405f0] bci=[-1,0,9] rc=0 vc=119 vn=- li=- udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7f278e8405a0] bci=[-1,0,9] rc=2 vc=119 vn=- li=- udi=- nc=0
n6n       treetop                                                                             [0x7f278e840690] bci=[-1,0,9] rc=0 vc=119 vn=- li=- udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7f278e840640] bci=[-1,0,9] rc=5 vc=119 vn=- li=- udi=- nc=1 flg=0x104
n3n           ==>loadaddr
n12n      ResolveCHK [#32]                                                                    [0x7f278e840870] bci=[-1,8,9] rc=0 vc=119 vn=- li=- udi=- nc=1
n11n        call  BLine.<init>(IIII)V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ] ()  [0x7f278e840820] bci=[-1,8,9] rc=1 vc=119 vn=- li=- udi=- nc=5 flg=0x20
n5n           ==>new
n7n           iconst 0 (X==0 X>=0 X<=0 )                                                      [0x7f278e8406e0] bci=[-1,4,9] rc=4 vc=119 vn=- li=- udi=- nc=0 flg=0x302
n7n           ==>iconst 0
n7n           ==>iconst 0
n7n           ==>iconst 0
n13n      treetop                                                                             [0x7f278e8408c0] bci=[-1,11,9] rc=0 vc=119 vn=- li=- udi=1 nc=1
n5n         ==>new
n15n      ResolveCHK [#314]                                                                   [0x7f278e840960] bci=[-1,12,10] rc=0 vc=119 vn=- li=- udi=- nc=1
n14n        aload  java/lang/System.out Ljava/io/PrintStream;[#385  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7f278e840910] bci=[-1,12,10] rc=3 vc=119 vn=- li=- udi=- nc=0 flg=0x100
n19n      treetop                                                                             [0x7f278e840aa0] bci=[-1,16,10] rc=0 vc=119 vn=- li=- udi=- nc=1
n18n        acalli  java/lang/Object.toString()Ljava/lang/String;[#387  virtual Method -56] [flags 0x500 0x0 ]  [0x7f278e840a50] bci=[-1,16,10] rc=2 vc=119 vn=- li=- udi=- nc=2
n17n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7f278e840a00] bci=[-1,16,10] rc=1 vc=119 vn=- li=- udi=- nc=1 flg=0x4
n5n             ==>new
n5n           ==>new
n22n      ResolveAndNULLCHK on n14n [#32]                                                     [0x7f278e840b90] bci=[-1,19,10] rc=0 vc=119 vn=- li=- udi=- nc=1
n21n        calli  java/io/PrintStream.println(Ljava/lang/String;)V[#388  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7f278e840b40] bci=[-1,19,10] rc=1 vc=119 vn=- li=- udi=- nc=3 flg=0x20
n20n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7f278e840af0] bci=[-1,19,10] rc=1 vc=119 vn=- li=- udi=- nc=1 flg=0x4
n14n            ==>aload
n14n          ==>aload
n18n          ==>acalli
n23n      return                                                                              [0x7f278e840be0] bci=[-1,22,11] rc=0 vc=119 vn=- li=- udi=- nc=0
n2n       BBEnd </block_2> =====                                                              [0x7f278e840550] bci=[-1,22,11] rc=0 vc=119 vn=- li=- udi=- nc=0

n29n      BBStart <block_4> (freq 0) (cold)                                                   [0x7f278e840dc0] bci=[-1,0,9] rc=0 vc=119 vn=- li=- udi=- nc=0
n34n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e840f50] bci=[-1,0,9] rc=0 vc=119 vn=- li=- udi=- nc=1
n33n        iadd                                                                              [0x7f278e840f00] bci=[-1,0,9] rc=2 vc=119 vn=- li=- udi=- nc=2
n32n          iload  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ] (cannotOverflow )  [0x7f278e840eb0] bci=[-1,0,9] rc=1 vc=119 vn=- li=- udi=- nc=0 flg=0x1000
n31n          iconst -1 (X!=0 X<=0 )                                                          [0x7f278e840e60] bci=[-1,0,9] rc=1 vc=119 vn=- li=- udi=- nc=0 flg=0x204
n36n      ificmpgt --> block_2 BBStart at n1n ()                                              [0x7f278e840ff0] bci=[-1,0,9] rc=0 vc=119 vn=- li=- udi=- nc=2 flg=0x20
n33n        ==>iadd
n35n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7f278e840fa0] bci=[-1,0,9] rc=1 vc=119 vn=- li=- udi=- nc=0 flg=0x302
n30n      BBEnd </block_4> (cold)                                                             [0x7f278e840e10] bci=[-1,0,9] rc=0 vc=119 vn=- li=- udi=- nc=0
n37n      BBStart <block_5> (freq 0) (extension of previous block) (cold)                     [0x7f278e841040] bci=[-1,0,9] rc=0 vc=119 vn=- li=- udi=- nc=0
n40n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e841130] bci=[-1,0,9] rc=0 vc=119 vn=- li=- udi=- nc=1
n39n        iconst 0x7fffffff (X!=0 X>=0 )                                                    [0x7f278e8410e0] bci=[-1,0,9] rc=1 vc=119 vn=- li=- udi=- nc=0 flg=0x104
n42n      bstore  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]             [0x7f278e8411d0] bci=[-1,0,9] rc=0 vc=119 vn=- li=- udi=- nc=1
n41n        bconst   2 (X!=0 X>=0 )                                                           [0x7f278e841180] bci=[-1,0,9] rc=1 vc=119 vn=- li=- udi=- nc=0 flg=0x104
n47n      treetop                                                                             [0x7f278e841360] bci=[-1,0,9] rc=0 vc=119 vn=- li=- udi=- nc=1
n43n        icall  jitRetranslateCallerWithPreparation[#71  helper Method] [flags 0x400 0x0 ] ()  [0x7f278e841220] bci=[-1,0,9] rc=1 vc=119 vn=- li=- udi=- nc=3 flg=0x20
n44n          iconst 0x80000 (X!=0 X>=0 )                                                     [0x7f278e841270] bci=[-1,0,9] rc=1 vc=119 vn=- li=- udi=- nc=0 flg=0x104
n45n          loadaddr  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ]             [0x7f278e8412c0] bci=[-1,0,9] rc=1 vc=119 vn=- li=- udi=- nc=0
n46n          loadaddr  <J9Method>[#332  Static] [flags 0x8000307 0x40 ]                      [0x7f278e841310] bci=[-1,0,9] rc=1 vc=119 vn=- li=- udi=- nc=0
n51n      goto --> block_2 BBStart at n1n                                                     [0x7f278e8414a0] bci=[-1,0,9] rc=0 vc=119 vn=- li=- udi=- nc=0
n38n      BBEnd </block_5> (cold)                                                             [0x7f278e841090] bci=[-1,0,9] rc=0 vc=119 vn=- li=- udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 44, symRefCount = 390
</trees>

<cfg>
         0 [0x7f278e85e230] entry
                 in        = []
                 out       = [3(10000) ]
                 exception in  = []
                 exception out = []
         1 [0x7f278e85e140] exit
                 in        = [2(8001) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7f278e88c040] BBStart at 0x7f278e840500, frequency = 8001
                 in        = [5(0) 4(0) 3(5000) ]
                 out       = [1(8001) ]
                 exception in  = []
                 exception out = []
         3 [0x7f278e8ac9f0] BBStart at 0x7f278e840c30, frequency = 10000
                 in        = [0(10000) ]
                 out       = [4(5000) 2(5000) ]
                 exception in  = []
                 exception out = []
         4 [0x7f278e8acbd0] BBStart at 0x7f278e840dc0, frequency = 0
                 in        = [3(5000) ]
                 out       = [5(0) 2(0) ]
                 exception in  = []
                 exception out = []
         5 [0x7f278e8acdd0] BBStart at 0x7f278e841040, frequency = 0
                 in        = [4(0) ]
                 out       = [2(0) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7f278e85c310] Acyclic region
         Subgraph: (* = exit edge)
               (0x7f278e85c3e0:0x7f278e85c2b0)0 --> 3(0x7f278e85c470)
               (0x7f278e85c470:0x7f278e85c190)3 --> 4(0x7f278e85c710) 2(0x7f278e85c620)
               (0x7f278e85c710:0x7f278e85c130)4 --> 2(0x7f278e85c620) 5(0x7f278e85c7e0)
               (0x7f278e85c7e0:0x7f278e85c0d0)5 --> 2(0x7f278e85c620)
               (0x7f278e85c620:0x7f278e85c1f0)2 --> 1(0x7f278e85c990)
               (0x7f278e85c990:0x7f278e85c250)1 -->
         0 [0x7f278e85c2b0] Block
         3 [0x7f278e85c190] Block
         4 [0x7f278e85c130] Block
         5 [0x7f278e85c0d0] Block
         2 [0x7f278e85c1f0] Block
         1 [0x7f278e85c250] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007F278E8476E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

<optimization id=91 name=deadTreesElimination method=BT.foo()V>
Performing 91: deadTreesElimination
[    22] O^O DEAD TREES ELIMINATION: Remove trivial dead tree: 00007F278E8408C0
<trees
	title="Trees after deadTreesElimination"
	method="BT.foo()V"
	hotness="warm">

Trees after deadTreesElimination: for BT.foo()V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n24n      BBStart <block_3> (freq 10000)                                                      [0x7f278e840c30] bci=[-1,0,9] rc=0 vc=122 vn=- li=-1 udi=- nc=0
n28n      ificmpeq --> block_4 BBStart at n29n ()                                             [0x7f278e840d70] bci=[-1,0,9] rc=0 vc=122 vn=- li=-1 udi=- nc=2 flg=0x20
n26n        iload  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ] (cannotOverflow )  [0x7f278e840cd0] bci=[-1,0,9] rc=1 vc=122 vn=- li=- udi=- nc=0 flg=0x1000
n27n        iconst 1 (X!=0 X>=0 )                                                             [0x7f278e840d20] bci=[-1,0,9] rc=1 vc=122 vn=- li=- udi=- nc=0 flg=0x104
n25n      BBEnd </block_3> =====                                                              [0x7f278e840c80] bci=[-1,0,9] rc=0 vc=122 vn=- li=-1 udi=- nc=0

n1n       BBStart <block_2> (freq 8001)                                                       [0x7f278e840500] bci=[-1,0,9] rc=0 vc=122 vn=- li=-1 udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7f278e8405f0] bci=[-1,0,9] rc=0 vc=122 vn=- li=-1 udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7f278e8405a0] bci=[-1,0,9] rc=2 vc=122 vn=- li=- udi=- nc=0
n6n       treetop                                                                             [0x7f278e840690] bci=[-1,0,9] rc=0 vc=122 vn=- li=-1 udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7f278e840640] bci=[-1,0,9] rc=4 vc=122 vn=- li=- udi=- nc=1 flg=0x104
n3n           ==>loadaddr
n12n      ResolveCHK [#32]                                                                    [0x7f278e840870] bci=[-1,8,9] rc=0 vc=122 vn=- li=-1 udi=- nc=1
n11n        call  BLine.<init>(IIII)V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ] ()  [0x7f278e840820] bci=[-1,8,9] rc=1 vc=122 vn=- li=- udi=- nc=5 flg=0x20
n5n           ==>new
n7n           iconst 0 (X==0 X>=0 X<=0 )                                                      [0x7f278e8406e0] bci=[-1,4,9] rc=4 vc=122 vn=- li=- udi=- nc=0 flg=0x302
n7n           ==>iconst 0
n7n           ==>iconst 0
n7n           ==>iconst 0
n15n      ResolveCHK [#314]                                                                   [0x7f278e840960] bci=[-1,12,10] rc=0 vc=122 vn=- li=-1 udi=- nc=1
n14n        aload  java/lang/System.out Ljava/io/PrintStream;[#385  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7f278e840910] bci=[-1,12,10] rc=3 vc=122 vn=- li=- udi=- nc=0 flg=0x100
n19n      treetop                                                                             [0x7f278e840aa0] bci=[-1,16,10] rc=0 vc=122 vn=- li=-1 udi=- nc=1
n18n        acalli  java/lang/Object.toString()Ljava/lang/String;[#387  virtual Method -56] [flags 0x500 0x0 ]  [0x7f278e840a50] bci=[-1,16,10] rc=2 vc=122 vn=- li=- udi=- nc=2
n17n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7f278e840a00] bci=[-1,16,10] rc=1 vc=122 vn=- li=- udi=- nc=1 flg=0x4
n5n             ==>new
n5n           ==>new
n22n      ResolveAndNULLCHK on n14n [#32]                                                     [0x7f278e840b90] bci=[-1,19,10] rc=0 vc=122 vn=- li=-1 udi=- nc=1
n21n        calli  java/io/PrintStream.println(Ljava/lang/String;)V[#388  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7f278e840b40] bci=[-1,19,10] rc=1 vc=122 vn=- li=- udi=- nc=3 flg=0x20
n20n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7f278e840af0] bci=[-1,19,10] rc=1 vc=122 vn=- li=- udi=- nc=1 flg=0x4
n14n            ==>aload
n14n          ==>aload
n18n          ==>acalli
n23n      return                                                                              [0x7f278e840be0] bci=[-1,22,11] rc=0 vc=122 vn=- li=-1 udi=- nc=0
n2n       BBEnd </block_2> =====                                                              [0x7f278e840550] bci=[-1,22,11] rc=0 vc=122 vn=- li=-1 udi=- nc=0

n29n      BBStart <block_4> (freq 0) (cold)                                                   [0x7f278e840dc0] bci=[-1,0,9] rc=0 vc=122 vn=- li=-1 udi=- nc=0
n34n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e840f50] bci=[-1,0,9] rc=0 vc=122 vn=- li=-1 udi=- nc=1
n33n        iadd                                                                              [0x7f278e840f00] bci=[-1,0,9] rc=2 vc=122 vn=- li=- udi=- nc=2
n32n          iload  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ] (cannotOverflow )  [0x7f278e840eb0] bci=[-1,0,9] rc=1 vc=122 vn=- li=- udi=- nc=0 flg=0x1000
n31n          iconst -1 (X!=0 X<=0 )                                                          [0x7f278e840e60] bci=[-1,0,9] rc=1 vc=122 vn=- li=- udi=- nc=0 flg=0x204
n36n      ificmpgt --> block_2 BBStart at n1n ()                                              [0x7f278e840ff0] bci=[-1,0,9] rc=0 vc=122 vn=- li=-1 udi=- nc=2 flg=0x20
n33n        ==>iadd
n35n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7f278e840fa0] bci=[-1,0,9] rc=1 vc=122 vn=- li=- udi=- nc=0 flg=0x302
n30n      BBEnd </block_4> (cold)                                                             [0x7f278e840e10] bci=[-1,0,9] rc=0 vc=122 vn=- li=-1 udi=- nc=0
n37n      BBStart <block_5> (freq 0) (extension of previous block) (cold)                     [0x7f278e841040] bci=[-1,0,9] rc=0 vc=122 vn=- li=-1 udi=- nc=0
n40n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e841130] bci=[-1,0,9] rc=0 vc=122 vn=- li=-1 udi=- nc=1
n39n        iconst 0x7fffffff (X!=0 X>=0 )                                                    [0x7f278e8410e0] bci=[-1,0,9] rc=1 vc=122 vn=- li=- udi=- nc=0 flg=0x104
n42n      bstore  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]             [0x7f278e8411d0] bci=[-1,0,9] rc=0 vc=122 vn=- li=-1 udi=- nc=1
n41n        bconst   2 (X!=0 X>=0 )                                                           [0x7f278e841180] bci=[-1,0,9] rc=1 vc=122 vn=- li=- udi=- nc=0 flg=0x104
n47n      treetop                                                                             [0x7f278e841360] bci=[-1,0,9] rc=0 vc=122 vn=- li=-1 udi=- nc=1
n43n        icall  jitRetranslateCallerWithPreparation[#71  helper Method] [flags 0x400 0x0 ] ()  [0x7f278e841220] bci=[-1,0,9] rc=1 vc=122 vn=- li=- udi=- nc=3 flg=0x20
n44n          iconst 0x80000 (X!=0 X>=0 )                                                     [0x7f278e841270] bci=[-1,0,9] rc=1 vc=122 vn=- li=- udi=- nc=0 flg=0x104
n45n          loadaddr  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ]             [0x7f278e8412c0] bci=[-1,0,9] rc=1 vc=122 vn=- li=- udi=- nc=0
n46n          loadaddr  <J9Method>[#332  Static] [flags 0x8000307 0x40 ]                      [0x7f278e841310] bci=[-1,0,9] rc=1 vc=122 vn=- li=- udi=- nc=0
n51n      goto --> block_2 BBStart at n1n                                                     [0x7f278e8414a0] bci=[-1,0,9] rc=0 vc=122 vn=- li=-1 udi=- nc=0
n38n      BBEnd </block_5> (cold)                                                             [0x7f278e841090] bci=[-1,0,9] rc=0 vc=122 vn=- li=-1 udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 43, symRefCount = 390
</trees>

<cfg>
         0 [0x7f278e85e230] entry
                 in        = []
                 out       = [3(10000) ]
                 exception in  = []
                 exception out = []
         1 [0x7f278e85e140] exit
                 in        = [2(8001) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7f278e88c040] BBStart at 0x7f278e840500, frequency = 8001
                 in        = [5(0) 4(0) 3(5000) ]
                 out       = [1(8001) ]
                 exception in  = []
                 exception out = []
         3 [0x7f278e8ac9f0] BBStart at 0x7f278e840c30, frequency = 10000
                 in        = [0(10000) ]
                 out       = [4(5000) 2(5000) ]
                 exception in  = []
                 exception out = []
         4 [0x7f278e8acbd0] BBStart at 0x7f278e840dc0, frequency = 0
                 in        = [3(5000) ]
                 out       = [5(0) 2(0) ]
                 exception in  = []
                 exception out = []
         5 [0x7f278e8acdd0] BBStart at 0x7f278e841040, frequency = 0
                 in        = [4(0) ]
                 out       = [2(0) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7f278e85c310] Acyclic region
         Subgraph: (* = exit edge)
               (0x7f278e85c3e0:0x7f278e85c2b0)0 --> 3(0x7f278e85c470)
               (0x7f278e85c470:0x7f278e85c190)3 --> 4(0x7f278e85c710) 2(0x7f278e85c620)
               (0x7f278e85c710:0x7f278e85c130)4 --> 2(0x7f278e85c620) 5(0x7f278e85c7e0)
               (0x7f278e85c7e0:0x7f278e85c0d0)5 --> 2(0x7f278e85c620)
               (0x7f278e85c620:0x7f278e85c1f0)2 --> 1(0x7f278e85c990)
               (0x7f278e85c990:0x7f278e85c250)1 -->
         0 [0x7f278e85c2b0] Block
         3 [0x7f278e85c190] Block
         4 [0x7f278e85c130] Block
         5 [0x7f278e85c0d0] Block
         2 [0x7f278e85c1f0] Block
         1 [0x7f278e85c250] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007F278E8476E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimization>

   </optgroup>
<optimization id=96 name=compactLocals method=BT.foo()V>
Performing 96: compactLocals
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=97 name=globalLiveVariablesForGC method=BT.foo()V>
Performing 97: globalLiveVariablesForGC
         No transformations done by this pass -- omitting listings
</optimization>

<optimization id=100 name=hotFieldMarking method=BT.foo()V>
Performing 100: hotFieldMarking
         No transformations done by this pass -- omitting listings
</optimization>

<trees
	title="Post Optimization Trees"
	method="BT.foo()V"
	hotness="warm">

Post Optimization Trees: for BT.foo()V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n24n      BBStart <block_3> (freq 10000)                                                      [0x7f278e840c30] bci=[-1,0,9] rc=0 vc=123 vn=- li=-1 udi=- nc=0
n28n      ificmpeq --> block_4 BBStart at n29n ()                                             [0x7f278e840d70] bci=[-1,0,9] rc=0 vc=123 vn=- li=-1 udi=- nc=2 flg=0x20
n26n        iload  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ] (cannotOverflow )  [0x7f278e840cd0] bci=[-1,0,9] rc=1 vc=123 vn=- li=- udi=- nc=0 flg=0x1000
n27n        iconst 1 (X!=0 X>=0 )                                                             [0x7f278e840d20] bci=[-1,0,9] rc=1 vc=123 vn=- li=- udi=- nc=0 flg=0x104
n25n      BBEnd </block_3> =====                                                              [0x7f278e840c80] bci=[-1,0,9] rc=0 vc=123 vn=- li=-1 udi=- nc=0

n1n       BBStart <block_2> (freq 8001)                                                       [0x7f278e840500] bci=[-1,0,9] rc=0 vc=123 vn=- li=-1 udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7f278e8405f0] bci=[-1,0,9] rc=0 vc=123 vn=- li=-1 udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7f278e8405a0] bci=[-1,0,9] rc=2 vc=123 vn=- li=- udi=- nc=0
n6n       treetop                                                                             [0x7f278e840690] bci=[-1,0,9] rc=0 vc=123 vn=- li=-1 udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7f278e840640] bci=[-1,0,9] rc=4 vc=123 vn=- li=- udi=- nc=1 flg=0x104
n3n           ==>loadaddr
n12n      ResolveCHK [#32]                                                                    [0x7f278e840870] bci=[-1,8,9] rc=0 vc=123 vn=- li=-1 udi=- nc=1
n11n        call  BLine.<init>(IIII)V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ] ()  [0x7f278e840820] bci=[-1,8,9] rc=1 vc=123 vn=- li=- udi=- nc=5 flg=0x20
n5n           ==>new
n7n           iconst 0 (X==0 X>=0 X<=0 )                                                      [0x7f278e8406e0] bci=[-1,4,9] rc=4 vc=123 vn=- li=- udi=- nc=0 flg=0x302
n7n           ==>iconst 0
n7n           ==>iconst 0
n7n           ==>iconst 0
n15n      ResolveCHK [#314]                                                                   [0x7f278e840960] bci=[-1,12,10] rc=0 vc=123 vn=- li=-1 udi=- nc=1
n14n        aload  java/lang/System.out Ljava/io/PrintStream;[#385  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7f278e840910] bci=[-1,12,10] rc=3 vc=123 vn=- li=- udi=- nc=0 flg=0x100
n19n      treetop                                                                             [0x7f278e840aa0] bci=[-1,16,10] rc=0 vc=123 vn=- li=-1 udi=- nc=1
n18n        acalli  java/lang/Object.toString()Ljava/lang/String;[#387  virtual Method -56] [flags 0x500 0x0 ]  [0x7f278e840a50] bci=[-1,16,10] rc=2 vc=123 vn=- li=- udi=- nc=2
n17n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7f278e840a00] bci=[-1,16,10] rc=1 vc=123 vn=- li=- udi=- nc=1 flg=0x4
n5n             ==>new
n5n           ==>new
n22n      ResolveAndNULLCHK on n14n [#32]                                                     [0x7f278e840b90] bci=[-1,19,10] rc=0 vc=123 vn=- li=-1 udi=- nc=1
n21n        calli  java/io/PrintStream.println(Ljava/lang/String;)V[#388  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7f278e840b40] bci=[-1,19,10] rc=1 vc=123 vn=- li=- udi=- nc=3 flg=0x20
n20n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7f278e840af0] bci=[-1,19,10] rc=1 vc=123 vn=- li=- udi=- nc=1 flg=0x4
n14n            ==>aload
n14n          ==>aload
n18n          ==>acalli
n23n      return                                                                              [0x7f278e840be0] bci=[-1,22,11] rc=0 vc=123 vn=- li=-1 udi=- nc=0
n2n       BBEnd </block_2> =====                                                              [0x7f278e840550] bci=[-1,22,11] rc=0 vc=123 vn=- li=-1 udi=- nc=0

n29n      BBStart <block_4> (freq 0) (cold)                                                   [0x7f278e840dc0] bci=[-1,0,9] rc=0 vc=123 vn=- li=-1 udi=- nc=0
n34n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e840f50] bci=[-1,0,9] rc=0 vc=123 vn=- li=-1 udi=- nc=1
n33n        iadd                                                                              [0x7f278e840f00] bci=[-1,0,9] rc=2 vc=123 vn=- li=- udi=- nc=2
n32n          iload  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ] (cannotOverflow )  [0x7f278e840eb0] bci=[-1,0,9] rc=1 vc=123 vn=- li=- udi=- nc=0 flg=0x1000
n31n          iconst -1 (X!=0 X<=0 )                                                          [0x7f278e840e60] bci=[-1,0,9] rc=1 vc=123 vn=- li=- udi=- nc=0 flg=0x204
n36n      ificmpgt --> block_2 BBStart at n1n ()                                              [0x7f278e840ff0] bci=[-1,0,9] rc=0 vc=123 vn=- li=-1 udi=- nc=2 flg=0x20
n33n        ==>iadd
n35n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7f278e840fa0] bci=[-1,0,9] rc=1 vc=123 vn=- li=- udi=- nc=0 flg=0x302
n30n      BBEnd </block_4> (cold)                                                             [0x7f278e840e10] bci=[-1,0,9] rc=0 vc=123 vn=- li=-1 udi=- nc=0
n37n      BBStart <block_5> (freq 0) (extension of previous block) (cold)                     [0x7f278e841040] bci=[-1,0,9] rc=0 vc=123 vn=- li=-1 udi=- nc=0
n40n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e841130] bci=[-1,0,9] rc=0 vc=123 vn=- li=-1 udi=- nc=1
n39n        iconst 0x7fffffff (X!=0 X>=0 )                                                    [0x7f278e8410e0] bci=[-1,0,9] rc=1 vc=123 vn=- li=- udi=- nc=0 flg=0x104
n42n      bstore  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]             [0x7f278e8411d0] bci=[-1,0,9] rc=0 vc=123 vn=- li=-1 udi=- nc=1
n41n        bconst   2 (X!=0 X>=0 )                                                           [0x7f278e841180] bci=[-1,0,9] rc=1 vc=123 vn=- li=- udi=- nc=0 flg=0x104
n47n      treetop                                                                             [0x7f278e841360] bci=[-1,0,9] rc=0 vc=123 vn=- li=-1 udi=- nc=1
n43n        icall  jitRetranslateCallerWithPreparation[#71  helper Method] [flags 0x400 0x0 ] ()  [0x7f278e841220] bci=[-1,0,9] rc=1 vc=123 vn=- li=- udi=- nc=3 flg=0x20
n44n          iconst 0x80000 (X!=0 X>=0 )                                                     [0x7f278e841270] bci=[-1,0,9] rc=1 vc=123 vn=- li=- udi=- nc=0 flg=0x104
n45n          loadaddr  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ]             [0x7f278e8412c0] bci=[-1,0,9] rc=1 vc=123 vn=- li=- udi=- nc=0
n46n          loadaddr  <J9Method>[#332  Static] [flags 0x8000307 0x40 ]                      [0x7f278e841310] bci=[-1,0,9] rc=1 vc=123 vn=- li=- udi=- nc=0
n51n      goto --> block_2 BBStart at n1n                                                     [0x7f278e8414a0] bci=[-1,0,9] rc=0 vc=123 vn=- li=-1 udi=- nc=0
n38n      BBEnd </block_5> (cold)                                                             [0x7f278e841090] bci=[-1,0,9] rc=0 vc=123 vn=- li=-1 udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 43, symRefCount = 390
</trees>

<cfg>
         0 [0x7f278e85e230] entry
                 in        = []
                 out       = [3(10000) ]
                 exception in  = []
                 exception out = []
         1 [0x7f278e85e140] exit
                 in        = [2(8001) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7f278e88c040] BBStart at 0x7f278e840500, frequency = 8001
                 in        = [5(0) 4(0) 3(5000) ]
                 out       = [1(8001) ]
                 exception in  = []
                 exception out = []
         3 [0x7f278e8ac9f0] BBStart at 0x7f278e840c30, frequency = 10000
                 in        = [0(10000) ]
                 out       = [4(5000) 2(5000) ]
                 exception in  = []
                 exception out = []
         4 [0x7f278e8acbd0] BBStart at 0x7f278e840dc0, frequency = 0
                 in        = [3(5000) ]
                 out       = [5(0) 2(0) ]
                 exception in  = []
                 exception out = []
         5 [0x7f278e8acdd0] BBStart at 0x7f278e841040, frequency = 0
                 in        = [4(0) ]
                 out       = [2(0) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7f278e85c310] Acyclic region
         Subgraph: (* = exit edge)
               (0x7f278e85c3e0:0x7f278e85c2b0)0 --> 3(0x7f278e85c470)
               (0x7f278e85c470:0x7f278e85c190)3 --> 4(0x7f278e85c710) 2(0x7f278e85c620)
               (0x7f278e85c710:0x7f278e85c130)4 --> 2(0x7f278e85c620) 5(0x7f278e85c7e0)
               (0x7f278e85c7e0:0x7f278e85c0d0)5 --> 2(0x7f278e85c620)
               (0x7f278e85c620:0x7f278e85c1f0)2 --> 1(0x7f278e85c990)
               (0x7f278e85c990:0x7f278e85c250)1 -->
         0 [0x7f278e85c2b0] Block
         3 [0x7f278e85c190] Block
         4 [0x7f278e85c130] Block
         5 [0x7f278e85c0d0] Block
         2 [0x7f278e85c1f0] Block
         1 [0x7f278e85c250] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007F278E8476E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
</optimize>
         No anchor found for load/store [00007F278E840AF0]
         field at [00007F278E840AF0] need not be compressed
         No anchor found for load/store [00007F278E840A00]
         field at [00007F278E840A00] need not be compressed
         successfully verified compressedRefs anchors
<codegen
	method="BT.foo()V"
	hotness="warm">
<LowerTrees>
</LowerTrees>
<trees
	title="Post Lower Trees"
	method="BT.foo()V"
	hotness="warm">

Post Lower Trees: for BT.foo()V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n24n      BBStart <block_3> (freq 10000)                                                      [0x7f278e840c30] bci=[-1,0,9] rc=0 vc=126 vn=- li=3 udi=- nc=0
n28n      ificmpeq --> block_4 BBStart at n29n ()                                             [0x7f278e840d70] bci=[-1,0,9] rc=0 vc=126 vn=- li=3 udi=- nc=2 flg=0x20
n26n        iload  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ] (cannotOverflow )  [0x7f278e840cd0] bci=[-1,0,9] rc=1 vc=126 vn=- li=3 udi=- nc=0 flg=0x1000
n27n        iconst 1 (X!=0 X>=0 )                                                             [0x7f278e840d20] bci=[-1,0,9] rc=1 vc=126 vn=- li=3 udi=- nc=0 flg=0x104
n25n      BBEnd </block_3> =====                                                              [0x7f278e840c80] bci=[-1,0,9] rc=0 vc=126 vn=- li=3 udi=- nc=0

n1n       BBStart <block_2> (freq 8001)                                                       [0x7f278e840500] bci=[-1,0,9] rc=0 vc=126 vn=- li=2 udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7f278e8405f0] bci=[-1,0,9] rc=0 vc=126 vn=- li=2 udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7f278e8405a0] bci=[-1,0,9] rc=2 vc=126 vn=- li=2 udi=- nc=0
n6n       treetop                                                                             [0x7f278e840690] bci=[-1,0,9] rc=0 vc=126 vn=- li=2 udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7f278e840640] bci=[-1,0,9] rc=4 vc=126 vn=- li=2 udi=- nc=1 flg=0x104
n3n           ==>loadaddr
n12n      ResolveCHK [#32]                                                                    [0x7f278e840870] bci=[-1,8,9] rc=0 vc=126 vn=- li=2 udi=- nc=1
n11n        call  BLine.<init>(IIII)V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ] ()  [0x7f278e840820] bci=[-1,8,9] rc=1 vc=126 vn=- li=2 udi=- nc=5 flg=0x20
n5n           ==>new
n7n           iconst 0 (X==0 X>=0 X<=0 )                                                      [0x7f278e8406e0] bci=[-1,4,9] rc=4 vc=126 vn=- li=2 udi=- nc=0 flg=0x302
n7n           ==>iconst 0
n7n           ==>iconst 0
n7n           ==>iconst 0
n15n      ResolveCHK [#314]                                                                   [0x7f278e840960] bci=[-1,12,10] rc=0 vc=126 vn=- li=2 udi=- nc=1
n14n        aload  java/lang/System.out Ljava/io/PrintStream;[#385  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7f278e840910] bci=[-1,12,10] rc=3 vc=126 vn=- li=2 udi=- nc=0 flg=0x100
n19n      treetop                                                                             [0x7f278e840aa0] bci=[-1,16,10] rc=0 vc=126 vn=- li=2 udi=- nc=1
n18n        acalli  java/lang/Object.toString()Ljava/lang/String;[#387  virtual Method -56] [flags 0x500 0x0 ]  [0x7f278e840a50] bci=[-1,16,10] rc=2 vc=126 vn=- li=2 udi=- nc=2
n17n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7f278e840a00] bci=[-1,16,10] rc=1 vc=126 vn=- li=2 udi=- nc=1 flg=0x4
n5n             ==>new
n5n           ==>new
n22n      ResolveAndNULLCHK on n14n [#32]                                                     [0x7f278e840b90] bci=[-1,19,10] rc=0 vc=126 vn=- li=2 udi=- nc=1
n21n        calli  java/io/PrintStream.println(Ljava/lang/String;)V[#388  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7f278e840b40] bci=[-1,19,10] rc=1 vc=126 vn=- li=2 udi=- nc=3 flg=0x20
n20n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7f278e840af0] bci=[-1,19,10] rc=1 vc=126 vn=- li=2 udi=- nc=1 flg=0x4
n14n            ==>aload
n14n          ==>aload
n18n          ==>acalli
n23n      return                                                                              [0x7f278e840be0] bci=[-1,22,11] rc=0 vc=126 vn=- li=2 udi=- nc=0
n2n       BBEnd </block_2> =====                                                              [0x7f278e840550] bci=[-1,22,11] rc=0 vc=126 vn=- li=2 udi=- nc=0

n29n      BBStart <block_4> (freq 0) (cold)                                                   [0x7f278e840dc0] bci=[-1,0,9] rc=0 vc=126 vn=- li=4 udi=- nc=0
n34n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e840f50] bci=[-1,0,9] rc=0 vc=126 vn=- li=4 udi=- nc=1
n33n        iadd                                                                              [0x7f278e840f00] bci=[-1,0,9] rc=2 vc=126 vn=- li=4 udi=- nc=2
n32n          iload  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ] (cannotOverflow )  [0x7f278e840eb0] bci=[-1,0,9] rc=1 vc=126 vn=- li=4 udi=- nc=0 flg=0x1000
n31n          iconst -1 (X!=0 X<=0 )                                                          [0x7f278e840e60] bci=[-1,0,9] rc=1 vc=126 vn=- li=4 udi=- nc=0 flg=0x204
n36n      ificmpgt --> block_2 BBStart at n1n ()                                              [0x7f278e840ff0] bci=[-1,0,9] rc=0 vc=126 vn=- li=4 udi=- nc=2 flg=0x20
n33n        ==>iadd
n35n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7f278e840fa0] bci=[-1,0,9] rc=1 vc=126 vn=- li=4 udi=- nc=0 flg=0x302
n30n      BBEnd </block_4> (cold)                                                             [0x7f278e840e10] bci=[-1,0,9] rc=0 vc=126 vn=- li=4 udi=- nc=0
n37n      BBStart <block_5> (freq 0) (extension of previous block) (cold)                     [0x7f278e841040] bci=[-1,0,9] rc=0 vc=126 vn=- li=5 udi=- nc=0
n40n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e841130] bci=[-1,0,9] rc=0 vc=126 vn=- li=5 udi=- nc=1
n39n        iconst 0x7fffffff (X!=0 X>=0 )                                                    [0x7f278e8410e0] bci=[-1,0,9] rc=1 vc=126 vn=- li=5 udi=- nc=0 flg=0x104
n42n      bstore  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]             [0x7f278e8411d0] bci=[-1,0,9] rc=0 vc=126 vn=- li=5 udi=- nc=1
n41n        bconst   2 (X!=0 X>=0 )                                                           [0x7f278e841180] bci=[-1,0,9] rc=1 vc=126 vn=- li=5 udi=- nc=0 flg=0x104
n47n      treetop                                                                             [0x7f278e841360] bci=[-1,0,9] rc=0 vc=126 vn=- li=5 udi=- nc=1
n43n        icall  jitRetranslateCallerWithPreparation[#71  helper Method] [flags 0x400 0x0 ] ()  [0x7f278e841220] bci=[-1,0,9] rc=1 vc=126 vn=- li=5 udi=- nc=3 flg=0x20
n44n          iconst 0x80000 (X!=0 X>=0 )                                                     [0x7f278e841270] bci=[-1,0,9] rc=1 vc=126 vn=- li=5 udi=- nc=0 flg=0x104
n45n          loadaddr  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ]             [0x7f278e8412c0] bci=[-1,0,9] rc=1 vc=126 vn=- li=5 udi=- nc=0
n46n          loadaddr  <J9Method>[#332  Static] [flags 0x8000307 0x40 ]                      [0x7f278e841310] bci=[-1,0,9] rc=1 vc=126 vn=- li=5 udi=- nc=0
n51n      goto --> block_2 BBStart at n1n                                                     [0x7f278e8414a0] bci=[-1,0,9] rc=0 vc=126 vn=- li=5 udi=- nc=0
n38n      BBEnd </block_5> (cold)                                                             [0x7f278e841090] bci=[-1,0,9] rc=0 vc=126 vn=- li=5 udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 43, symRefCount = 390
</trees>

<cfg>
         0 [0x7f278e85e230] entry
                 in        = []
                 out       = [3(10000) ]
                 exception in  = []
                 exception out = []
         1 [0x7f278e85e140] exit
                 in        = [2(8001) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7f278e88c040] BBStart at 0x7f278e840500, frequency = 8001
                 in        = [5(0) 4(0) 3(5000) ]
                 out       = [1(8001) ]
                 exception in  = []
                 exception out = []
         3 [0x7f278e8ac9f0] BBStart at 0x7f278e840c30, frequency = 10000
                 in        = [0(10000) ]
                 out       = [4(5000) 2(5000) ]
                 exception in  = []
                 exception out = []
         4 [0x7f278e8acbd0] BBStart at 0x7f278e840dc0, frequency = 0
                 in        = [3(5000) ]
                 out       = [5(0) 2(0) ]
                 exception in  = []
                 exception out = []
         5 [0x7f278e8acdd0] BBStart at 0x7f278e841040, frequency = 0
                 in        = [4(0) ]
                 out       = [2(0) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7f278e85c310] Acyclic region
         Subgraph: (* = exit edge)
               (0x7f278e85c3e0:0x7f278e85c2b0)0 --> 3(0x7f278e85c470)
               (0x7f278e85c470:0x7f278e85c190)3 --> 4(0x7f278e85c710) 2(0x7f278e85c620)
               (0x7f278e85c710:0x7f278e85c130)4 --> 2(0x7f278e85c620) 5(0x7f278e85c7e0)
               (0x7f278e85c7e0:0x7f278e85c0d0)5 --> 2(0x7f278e85c620)
               (0x7f278e85c620:0x7f278e85c1f0)2 --> 1(0x7f278e85c990)
               (0x7f278e85c990:0x7f278e85c250)1 -->
         0 [0x7f278e85c2b0] Block
         3 [0x7f278e85c190] Block
         4 [0x7f278e85c130] Block
         5 [0x7f278e85c0d0] Block
         2 [0x7f278e85c1f0] Block
         1 [0x7f278e85c250] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007F278E8476E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
<trees
	title="Trees before this remat phase"
	method="BT.foo()V"
	hotness="warm">

Trees before this remat phase: for BT.foo()V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n24n      BBStart <block_3> (freq 10000)                                                      [0x7f278e840c30] bci=[-1,0,9] rc=0 vc=126 vn=- li=3 udi=- nc=0
n28n      ificmpeq --> block_4 BBStart at n29n ()                                             [0x7f278e840d70] bci=[-1,0,9] rc=0 vc=126 vn=- li=3 udi=- nc=2 flg=0x20
n26n        iload  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ] (cannotOverflow )  [0x7f278e840cd0] bci=[-1,0,9] rc=1 vc=126 vn=- li=3 udi=- nc=0 flg=0x1000
n27n        iconst 1 (X!=0 X>=0 )                                                             [0x7f278e840d20] bci=[-1,0,9] rc=1 vc=126 vn=- li=3 udi=- nc=0 flg=0x104
n25n      BBEnd </block_3> =====                                                              [0x7f278e840c80] bci=[-1,0,9] rc=0 vc=126 vn=- li=3 udi=- nc=0

n1n       BBStart <block_2> (freq 8001)                                                       [0x7f278e840500] bci=[-1,0,9] rc=0 vc=126 vn=- li=2 udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7f278e8405f0] bci=[-1,0,9] rc=0 vc=126 vn=- li=2 udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7f278e8405a0] bci=[-1,0,9] rc=2 vc=126 vn=- li=2 udi=- nc=0
n6n       treetop                                                                             [0x7f278e840690] bci=[-1,0,9] rc=0 vc=126 vn=- li=2 udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7f278e840640] bci=[-1,0,9] rc=4 vc=126 vn=- li=2 udi=- nc=1 flg=0x104
n3n           ==>loadaddr
n12n      ResolveCHK [#32]                                                                    [0x7f278e840870] bci=[-1,8,9] rc=0 vc=126 vn=- li=2 udi=- nc=1
n11n        call  BLine.<init>(IIII)V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ] ()  [0x7f278e840820] bci=[-1,8,9] rc=1 vc=126 vn=- li=2 udi=- nc=5 flg=0x20
n5n           ==>new
n7n           iconst 0 (X==0 X>=0 X<=0 )                                                      [0x7f278e8406e0] bci=[-1,4,9] rc=4 vc=126 vn=- li=2 udi=- nc=0 flg=0x302
n7n           ==>iconst 0
n7n           ==>iconst 0
n7n           ==>iconst 0
n15n      ResolveCHK [#314]                                                                   [0x7f278e840960] bci=[-1,12,10] rc=0 vc=126 vn=- li=2 udi=- nc=1
n14n        aload  java/lang/System.out Ljava/io/PrintStream;[#385  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7f278e840910] bci=[-1,12,10] rc=3 vc=126 vn=- li=2 udi=- nc=0 flg=0x100
n19n      treetop                                                                             [0x7f278e840aa0] bci=[-1,16,10] rc=0 vc=126 vn=- li=2 udi=- nc=1
n18n        acalli  java/lang/Object.toString()Ljava/lang/String;[#387  virtual Method -56] [flags 0x500 0x0 ]  [0x7f278e840a50] bci=[-1,16,10] rc=2 vc=126 vn=- li=2 udi=- nc=2
n17n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7f278e840a00] bci=[-1,16,10] rc=1 vc=126 vn=- li=2 udi=- nc=1 flg=0x4
n5n             ==>new
n5n           ==>new
n22n      ResolveAndNULLCHK on n14n [#32]                                                     [0x7f278e840b90] bci=[-1,19,10] rc=0 vc=126 vn=- li=2 udi=- nc=1
n21n        calli  java/io/PrintStream.println(Ljava/lang/String;)V[#388  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7f278e840b40] bci=[-1,19,10] rc=1 vc=126 vn=- li=2 udi=- nc=3 flg=0x20
n20n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7f278e840af0] bci=[-1,19,10] rc=1 vc=126 vn=- li=2 udi=- nc=1 flg=0x4
n14n            ==>aload
n14n          ==>aload
n18n          ==>acalli
n23n      return                                                                              [0x7f278e840be0] bci=[-1,22,11] rc=0 vc=126 vn=- li=2 udi=- nc=0
n2n       BBEnd </block_2> =====                                                              [0x7f278e840550] bci=[-1,22,11] rc=0 vc=126 vn=- li=2 udi=- nc=0

n29n      BBStart <block_4> (freq 0) (cold)                                                   [0x7f278e840dc0] bci=[-1,0,9] rc=0 vc=126 vn=- li=4 udi=- nc=0
n34n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e840f50] bci=[-1,0,9] rc=0 vc=126 vn=- li=4 udi=- nc=1
n33n        iadd                                                                              [0x7f278e840f00] bci=[-1,0,9] rc=2 vc=126 vn=- li=4 udi=- nc=2
n32n          iload  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ] (cannotOverflow )  [0x7f278e840eb0] bci=[-1,0,9] rc=1 vc=126 vn=- li=4 udi=- nc=0 flg=0x1000
n31n          iconst -1 (X!=0 X<=0 )                                                          [0x7f278e840e60] bci=[-1,0,9] rc=1 vc=126 vn=- li=4 udi=- nc=0 flg=0x204
n36n      ificmpgt --> block_2 BBStart at n1n ()                                              [0x7f278e840ff0] bci=[-1,0,9] rc=0 vc=126 vn=- li=4 udi=- nc=2 flg=0x20
n33n        ==>iadd
n35n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7f278e840fa0] bci=[-1,0,9] rc=1 vc=126 vn=- li=4 udi=- nc=0 flg=0x302
n30n      BBEnd </block_4> (cold)                                                             [0x7f278e840e10] bci=[-1,0,9] rc=0 vc=126 vn=- li=4 udi=- nc=0
n37n      BBStart <block_5> (freq 0) (extension of previous block) (cold)                     [0x7f278e841040] bci=[-1,0,9] rc=0 vc=126 vn=- li=5 udi=- nc=0
n40n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e841130] bci=[-1,0,9] rc=0 vc=126 vn=- li=5 udi=- nc=1
n39n        iconst 0x7fffffff (X!=0 X>=0 )                                                    [0x7f278e8410e0] bci=[-1,0,9] rc=1 vc=126 vn=- li=5 udi=- nc=0 flg=0x104
n42n      bstore  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]             [0x7f278e8411d0] bci=[-1,0,9] rc=0 vc=126 vn=- li=5 udi=- nc=1
n41n        bconst   2 (X!=0 X>=0 )                                                           [0x7f278e841180] bci=[-1,0,9] rc=1 vc=126 vn=- li=5 udi=- nc=0 flg=0x104
n47n      treetop                                                                             [0x7f278e841360] bci=[-1,0,9] rc=0 vc=126 vn=- li=5 udi=- nc=1
n43n        icall  jitRetranslateCallerWithPreparation[#71  helper Method] [flags 0x400 0x0 ] ()  [0x7f278e841220] bci=[-1,0,9] rc=1 vc=126 vn=- li=5 udi=- nc=3 flg=0x20
n44n          iconst 0x80000 (X!=0 X>=0 )                                                     [0x7f278e841270] bci=[-1,0,9] rc=1 vc=126 vn=- li=5 udi=- nc=0 flg=0x104
n45n          loadaddr  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ]             [0x7f278e8412c0] bci=[-1,0,9] rc=1 vc=126 vn=- li=5 udi=- nc=0
n46n          loadaddr  <J9Method>[#332  Static] [flags 0x8000307 0x40 ]                      [0x7f278e841310] bci=[-1,0,9] rc=1 vc=126 vn=- li=5 udi=- nc=0
n51n      goto --> block_2 BBStart at n1n                                                     [0x7f278e8414a0] bci=[-1,0,9] rc=0 vc=126 vn=- li=5 udi=- nc=0
n38n      BBEnd </block_5> (cold)                                                             [0x7f278e841090] bci=[-1,0,9] rc=0 vc=126 vn=- li=5 udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 43, symRefCount = 390
</trees>

<cfg>
         0 [0x7f278e85e230] entry
                 in        = []
                 out       = [3(10000) ]
                 exception in  = []
                 exception out = []
         1 [0x7f278e85e140] exit
                 in        = [2(8001) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7f278e88c040] BBStart at 0x7f278e840500, frequency = 8001
                 in        = [5(0) 4(0) 3(5000) ]
                 out       = [1(8001) ]
                 exception in  = []
                 exception out = []
         3 [0x7f278e8ac9f0] BBStart at 0x7f278e840c30, frequency = 10000
                 in        = [0(10000) ]
                 out       = [4(5000) 2(5000) ]
                 exception in  = []
                 exception out = []
         4 [0x7f278e8acbd0] BBStart at 0x7f278e840dc0, frequency = 0
                 in        = [3(5000) ]
                 out       = [5(0) 2(0) ]
                 exception in  = []
                 exception out = []
         5 [0x7f278e8acdd0] BBStart at 0x7f278e841040, frequency = 0
                 in        = [4(0) ]
                 out       = [2(0) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7f278e85c310] Acyclic region
         Subgraph: (* = exit edge)
               (0x7f278e85c3e0:0x7f278e85c2b0)0 --> 3(0x7f278e85c470)
               (0x7f278e85c470:0x7f278e85c190)3 --> 4(0x7f278e85c710) 2(0x7f278e85c620)
               (0x7f278e85c710:0x7f278e85c130)4 --> 2(0x7f278e85c620) 5(0x7f278e85c7e0)
               (0x7f278e85c7e0:0x7f278e85c0d0)5 --> 2(0x7f278e85c620)
               (0x7f278e85c620:0x7f278e85c1f0)2 --> 1(0x7f278e85c990)
               (0x7f278e85c990:0x7f278e85c250)1 -->
         0 [0x7f278e85c2b0] Block
         3 [0x7f278e85c190] Block
         4 [0x7f278e85c130] Block
         5 [0x7f278e85c0d0] Block
         2 [0x7f278e85c1f0] Block
         1 [0x7f278e85c250] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007F278E8476E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
<trees
	title="Trees after this remat phase"
	method="BT.foo()V"
	hotness="warm">

Trees after this remat phase: for BT.foo()V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n24n      BBStart <block_3> (freq 10000)                                                      [0x7f278e840c30] bci=[-1,0,9] rc=0 vc=127 vn=- li=3 udi=- nc=0
n28n      ificmpeq --> block_4 BBStart at n29n ()                                             [0x7f278e840d70] bci=[-1,0,9] rc=0 vc=127 vn=- li=3 udi=- nc=2 flg=0x20
n26n        iload  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ] (cannotOverflow )  [0x7f278e840cd0] bci=[-1,0,9] rc=1 vc=127 vn=- li=3 udi=- nc=0 flg=0x1000
n27n        iconst 1 (X!=0 X>=0 )                                                             [0x7f278e840d20] bci=[-1,0,9] rc=1 vc=127 vn=- li=3 udi=- nc=0 flg=0x104
n25n      BBEnd </block_3> =====                                                              [0x7f278e840c80] bci=[-1,0,9] rc=0 vc=127 vn=- li=3 udi=- nc=0

n1n       BBStart <block_2> (freq 8001)                                                       [0x7f278e840500] bci=[-1,0,9] rc=0 vc=127 vn=- li=2 udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7f278e8405f0] bci=[-1,0,9] rc=0 vc=127 vn=- li=2 udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7f278e8405a0] bci=[-1,0,9] rc=2 vc=127 vn=- li=2 udi=- nc=0
n6n       treetop                                                                             [0x7f278e840690] bci=[-1,0,9] rc=0 vc=127 vn=- li=2 udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7f278e840640] bci=[-1,0,9] rc=4 vc=127 vn=- li=2 udi=- nc=1 flg=0x104
n3n           ==>loadaddr
n12n      ResolveCHK [#32]                                                                    [0x7f278e840870] bci=[-1,8,9] rc=0 vc=127 vn=- li=2 udi=- nc=1
n11n        call  BLine.<init>(IIII)V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ] ()  [0x7f278e840820] bci=[-1,8,9] rc=1 vc=127 vn=- li=2 udi=- nc=5 flg=0x20
n5n           ==>new
n7n           iconst 0 (X==0 X>=0 X<=0 )                                                      [0x7f278e8406e0] bci=[-1,4,9] rc=4 vc=127 vn=- li=2 udi=- nc=0 flg=0x302
n7n           ==>iconst 0
n7n           ==>iconst 0
n7n           ==>iconst 0
n15n      ResolveCHK [#314]                                                                   [0x7f278e840960] bci=[-1,12,10] rc=0 vc=127 vn=- li=2 udi=- nc=1
n14n        aload  java/lang/System.out Ljava/io/PrintStream;[#385  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7f278e840910] bci=[-1,12,10] rc=3 vc=127 vn=- li=2 udi=- nc=0 flg=0x100
n19n      treetop                                                                             [0x7f278e840aa0] bci=[-1,16,10] rc=0 vc=127 vn=- li=2 udi=- nc=1
n18n        acalli  java/lang/Object.toString()Ljava/lang/String;[#387  virtual Method -56] [flags 0x500 0x0 ]  [0x7f278e840a50] bci=[-1,16,10] rc=2 vc=127 vn=- li=2 udi=- nc=2
n17n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7f278e840a00] bci=[-1,16,10] rc=1 vc=127 vn=- li=2 udi=- nc=1 flg=0x4
n5n             ==>new
n5n           ==>new
n22n      ResolveAndNULLCHK on n14n [#32]                                                     [0x7f278e840b90] bci=[-1,19,10] rc=0 vc=127 vn=- li=2 udi=- nc=1
n21n        calli  java/io/PrintStream.println(Ljava/lang/String;)V[#388  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7f278e840b40] bci=[-1,19,10] rc=1 vc=127 vn=- li=2 udi=- nc=3 flg=0x20
n20n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7f278e840af0] bci=[-1,19,10] rc=1 vc=127 vn=- li=2 udi=- nc=1 flg=0x4
n14n            ==>aload
n14n          ==>aload
n18n          ==>acalli
n23n      return                                                                              [0x7f278e840be0] bci=[-1,22,11] rc=0 vc=127 vn=- li=2 udi=- nc=0
n2n       BBEnd </block_2> =====                                                              [0x7f278e840550] bci=[-1,22,11] rc=0 vc=127 vn=- li=2 udi=- nc=0

n29n      BBStart <block_4> (freq 0) (cold)                                                   [0x7f278e840dc0] bci=[-1,0,9] rc=0 vc=127 vn=- li=4 udi=- nc=0
n34n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e840f50] bci=[-1,0,9] rc=0 vc=127 vn=- li=4 udi=- nc=1
n33n        iadd                                                                              [0x7f278e840f00] bci=[-1,0,9] rc=2 vc=127 vn=- li=4 udi=- nc=2
n32n          iload  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ] (cannotOverflow )  [0x7f278e840eb0] bci=[-1,0,9] rc=1 vc=127 vn=- li=4 udi=- nc=0 flg=0x1000
n31n          iconst -1 (X!=0 X<=0 )                                                          [0x7f278e840e60] bci=[-1,0,9] rc=1 vc=127 vn=- li=4 udi=- nc=0 flg=0x204
n36n      ificmpgt --> block_2 BBStart at n1n ()                                              [0x7f278e840ff0] bci=[-1,0,9] rc=0 vc=127 vn=- li=4 udi=- nc=2 flg=0x20
n33n        ==>iadd
n35n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7f278e840fa0] bci=[-1,0,9] rc=1 vc=127 vn=- li=4 udi=- nc=0 flg=0x302
n30n      BBEnd </block_4> (cold)                                                             [0x7f278e840e10] bci=[-1,0,9] rc=0 vc=127 vn=- li=4 udi=- nc=0
n37n      BBStart <block_5> (freq 0) (extension of previous block) (cold)                     [0x7f278e841040] bci=[-1,0,9] rc=0 vc=127 vn=- li=5 udi=- nc=0
n40n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e841130] bci=[-1,0,9] rc=0 vc=127 vn=- li=5 udi=- nc=1
n39n        iconst 0x7fffffff (X!=0 X>=0 )                                                    [0x7f278e8410e0] bci=[-1,0,9] rc=1 vc=127 vn=- li=5 udi=- nc=0 flg=0x104
n42n      bstore  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]             [0x7f278e8411d0] bci=[-1,0,9] rc=0 vc=127 vn=- li=5 udi=- nc=1
n41n        bconst   2 (X!=0 X>=0 )                                                           [0x7f278e841180] bci=[-1,0,9] rc=1 vc=127 vn=- li=5 udi=- nc=0 flg=0x104
n47n      treetop                                                                             [0x7f278e841360] bci=[-1,0,9] rc=0 vc=127 vn=- li=5 udi=- nc=1
n43n        icall  jitRetranslateCallerWithPreparation[#71  helper Method] [flags 0x400 0x0 ] ()  [0x7f278e841220] bci=[-1,0,9] rc=1 vc=127 vn=- li=5 udi=- nc=3 flg=0x20
n44n          iconst 0x80000 (X!=0 X>=0 )                                                     [0x7f278e841270] bci=[-1,0,9] rc=1 vc=127 vn=- li=5 udi=- nc=0 flg=0x104
n45n          loadaddr  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ]             [0x7f278e8412c0] bci=[-1,0,9] rc=1 vc=127 vn=- li=5 udi=- nc=0
n46n          loadaddr  <J9Method>[#332  Static] [flags 0x8000307 0x40 ]                      [0x7f278e841310] bci=[-1,0,9] rc=1 vc=127 vn=- li=5 udi=- nc=0
n51n      goto --> block_2 BBStart at n1n                                                     [0x7f278e8414a0] bci=[-1,0,9] rc=0 vc=127 vn=- li=5 udi=- nc=0
n38n      BBEnd </block_5> (cold)                                                             [0x7f278e841090] bci=[-1,0,9] rc=0 vc=127 vn=- li=5 udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 43, symRefCount = 390
</trees>

<cfg>
         0 [0x7f278e85e230] entry
                 in        = []
                 out       = [3(10000) ]
                 exception in  = []
                 exception out = []
         1 [0x7f278e85e140] exit
                 in        = [2(8001) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7f278e88c040] BBStart at 0x7f278e840500, frequency = 8001
                 in        = [5(0) 4(0) 3(5000) ]
                 out       = [1(8001) ]
                 exception in  = []
                 exception out = []
         3 [0x7f278e8ac9f0] BBStart at 0x7f278e840c30, frequency = 10000
                 in        = [0(10000) ]
                 out       = [4(5000) 2(5000) ]
                 exception in  = []
                 exception out = []
         4 [0x7f278e8acbd0] BBStart at 0x7f278e840dc0, frequency = 0
                 in        = [3(5000) ]
                 out       = [5(0) 2(0) ]
                 exception in  = []
                 exception out = []
         5 [0x7f278e8acdd0] BBStart at 0x7f278e841040, frequency = 0
                 in        = [4(0) ]
                 out       = [2(0) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7f278e85c310] Acyclic region
         Subgraph: (* = exit edge)
               (0x7f278e85c3e0:0x7f278e85c2b0)0 --> 3(0x7f278e85c470)
               (0x7f278e85c470:0x7f278e85c190)3 --> 4(0x7f278e85c710) 2(0x7f278e85c620)
               (0x7f278e85c710:0x7f278e85c130)4 --> 2(0x7f278e85c620) 5(0x7f278e85c7e0)
               (0x7f278e85c7e0:0x7f278e85c0d0)5 --> 2(0x7f278e85c620)
               (0x7f278e85c620:0x7f278e85c1f0)2 --> 1(0x7f278e85c990)
               (0x7f278e85c990:0x7f278e85c250)1 -->
         0 [0x7f278e85c2b0] Block
         3 [0x7f278e85c190] Block
         4 [0x7f278e85c130] Block
         5 [0x7f278e85c0d0] Block
         2 [0x7f278e85c1f0] Block
         1 [0x7f278e85c250] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007F278E8476E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
<AllocateLinkageRegisters>
           Initial globalRegsWithRegLoad: {}         
</AllocateLinkageRegisters>
[    23] O^O CODE GENERATION:  ===>   Identify and mark Unneeded b2i/i2b conversions  <===
<trees
	title="Pre Uncommon Call Constant Node Trees"
	method="BT.foo()V"
	hotness="warm">

Pre Uncommon Call Constant Node Trees: for BT.foo()V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n24n      BBStart <block_3> (freq 10000)                                                      [0x7f278e840c30] bci=[-1,0,9] rc=0 vc=127 vn=- li=3 udi=- nc=0
n28n      ificmpeq --> block_4 BBStart at n29n ()                                             [0x7f278e840d70] bci=[-1,0,9] rc=0 vc=129 vn=- li=3 udi=- nc=2 flg=0x20
n26n        iload  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ] (cannotOverflow )  [0x7f278e840cd0] bci=[-1,0,9] rc=1 vc=129 vn=- li=3 udi=- nc=0 flg=0x1000
n27n        iconst 1 (X!=0 X>=0 )                                                             [0x7f278e840d20] bci=[-1,0,9] rc=1 vc=129 vn=- li=3 udi=- nc=0 flg=0x104
n25n      BBEnd </block_3> =====                                                              [0x7f278e840c80] bci=[-1,0,9] rc=0 vc=128 vn=- li=3 udi=- nc=0

n1n       BBStart <block_2> (freq 8001)                                                       [0x7f278e840500] bci=[-1,0,9] rc=0 vc=127 vn=- li=2 udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7f278e8405f0] bci=[-1,0,9] rc=0 vc=127 vn=- li=2 udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7f278e8405a0] bci=[-1,0,9] rc=2 vc=127 vn=- li=2 udi=- nc=0
n6n       treetop                                                                             [0x7f278e840690] bci=[-1,0,9] rc=0 vc=127 vn=- li=2 udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7f278e840640] bci=[-1,0,9] rc=4 vc=127 vn=- li=2 udi=- nc=1 flg=0x104
n3n           ==>loadaddr
n12n      ResolveCHK [#32]                                                                    [0x7f278e840870] bci=[-1,8,9] rc=0 vc=127 vn=- li=2 udi=- nc=1
n11n        call  BLine.<init>(IIII)V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ] ()  [0x7f278e840820] bci=[-1,8,9] rc=1 vc=127 vn=- li=2 udi=- nc=5 flg=0x20
n5n           ==>new
n7n           iconst 0 (X==0 X>=0 X<=0 )                                                      [0x7f278e8406e0] bci=[-1,4,9] rc=4 vc=127 vn=- li=2 udi=- nc=0 flg=0x302
n7n           ==>iconst 0
n7n           ==>iconst 0
n7n           ==>iconst 0
n15n      ResolveCHK [#314]                                                                   [0x7f278e840960] bci=[-1,12,10] rc=0 vc=127 vn=- li=2 udi=- nc=1
n14n        aload  java/lang/System.out Ljava/io/PrintStream;[#385  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7f278e840910] bci=[-1,12,10] rc=3 vc=127 vn=- li=2 udi=- nc=0 flg=0x100
n19n      treetop                                                                             [0x7f278e840aa0] bci=[-1,16,10] rc=0 vc=127 vn=- li=2 udi=- nc=1
n18n        acalli  java/lang/Object.toString()Ljava/lang/String;[#387  virtual Method -56] [flags 0x500 0x0 ]  [0x7f278e840a50] bci=[-1,16,10] rc=2 vc=127 vn=- li=2 udi=- nc=2
n17n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7f278e840a00] bci=[-1,16,10] rc=1 vc=127 vn=- li=2 udi=- nc=1 flg=0x4
n5n             ==>new
n5n           ==>new
n22n      ResolveAndNULLCHK on n14n [#32]                                                     [0x7f278e840b90] bci=[-1,19,10] rc=0 vc=127 vn=- li=2 udi=- nc=1
n21n        calli  java/io/PrintStream.println(Ljava/lang/String;)V[#388  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7f278e840b40] bci=[-1,19,10] rc=1 vc=127 vn=- li=2 udi=- nc=3 flg=0x20
n20n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7f278e840af0] bci=[-1,19,10] rc=1 vc=127 vn=- li=2 udi=- nc=1 flg=0x4
n14n            ==>aload
n14n          ==>aload
n18n          ==>acalli
n23n      return                                                                              [0x7f278e840be0] bci=[-1,22,11] rc=0 vc=127 vn=- li=2 udi=- nc=0
n2n       BBEnd </block_2> =====                                                              [0x7f278e840550] bci=[-1,22,11] rc=0 vc=127 vn=- li=2 udi=- nc=0

n29n      BBStart <block_4> (freq 0) (cold)                                                   [0x7f278e840dc0] bci=[-1,0,9] rc=0 vc=127 vn=- li=4 udi=- nc=0
n34n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e840f50] bci=[-1,0,9] rc=0 vc=127 vn=- li=4 udi=- nc=1
n33n        iadd                                                                              [0x7f278e840f00] bci=[-1,0,9] rc=2 vc=127 vn=- li=4 udi=- nc=2
n32n          iload  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ] (cannotOverflow )  [0x7f278e840eb0] bci=[-1,0,9] rc=1 vc=127 vn=- li=4 udi=- nc=0 flg=0x1000
n31n          iconst -1 (X!=0 X<=0 )                                                          [0x7f278e840e60] bci=[-1,0,9] rc=1 vc=127 vn=- li=4 udi=- nc=0 flg=0x204
n36n      ificmpgt --> block_2 BBStart at n1n ()                                              [0x7f278e840ff0] bci=[-1,0,9] rc=0 vc=127 vn=- li=4 udi=- nc=2 flg=0x20
n33n        ==>iadd
n35n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7f278e840fa0] bci=[-1,0,9] rc=1 vc=127 vn=- li=4 udi=- nc=0 flg=0x302
n30n      BBEnd </block_4> (cold)                                                             [0x7f278e840e10] bci=[-1,0,9] rc=0 vc=127 vn=- li=4 udi=- nc=0
n37n      BBStart <block_5> (freq 0) (extension of previous block) (cold)                     [0x7f278e841040] bci=[-1,0,9] rc=0 vc=127 vn=- li=5 udi=- nc=0
n40n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e841130] bci=[-1,0,9] rc=0 vc=127 vn=- li=5 udi=- nc=1
n39n        iconst 0x7fffffff (X!=0 X>=0 )                                                    [0x7f278e8410e0] bci=[-1,0,9] rc=1 vc=127 vn=- li=5 udi=- nc=0 flg=0x104
n42n      bstore  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]             [0x7f278e8411d0] bci=[-1,0,9] rc=0 vc=129 vn=- li=5 udi=- nc=1
n41n        bconst   2 (X!=0 X>=0 )                                                           [0x7f278e841180] bci=[-1,0,9] rc=1 vc=129 vn=- li=5 udi=- nc=0 flg=0x104
n47n      treetop                                                                             [0x7f278e841360] bci=[-1,0,9] rc=0 vc=127 vn=- li=5 udi=- nc=1
n43n        icall  jitRetranslateCallerWithPreparation[#71  helper Method] [flags 0x400 0x0 ] ()  [0x7f278e841220] bci=[-1,0,9] rc=1 vc=127 vn=- li=5 udi=- nc=3 flg=0x20
n44n          iconst 0x80000 (X!=0 X>=0 )                                                     [0x7f278e841270] bci=[-1,0,9] rc=1 vc=127 vn=- li=5 udi=- nc=0 flg=0x104
n45n          loadaddr  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ]             [0x7f278e8412c0] bci=[-1,0,9] rc=1 vc=127 vn=- li=5 udi=- nc=0
n46n          loadaddr  <J9Method>[#332  Static] [flags 0x8000307 0x40 ]                      [0x7f278e841310] bci=[-1,0,9] rc=1 vc=127 vn=- li=5 udi=- nc=0
n51n      goto --> block_2 BBStart at n1n                                                     [0x7f278e8414a0] bci=[-1,0,9] rc=0 vc=127 vn=- li=5 udi=- nc=0
n38n      BBEnd </block_5> (cold)                                                             [0x7f278e841090] bci=[-1,0,9] rc=0 vc=127 vn=- li=5 udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 43, symRefCount = 390
</trees>

<cfg>
         0 [0x7f278e85e230] entry
                 in        = []
                 out       = [3(10000) ]
                 exception in  = []
                 exception out = []
         1 [0x7f278e85e140] exit
                 in        = [2(8001) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7f278e88c040] BBStart at 0x7f278e840500, frequency = 8001
                 in        = [5(0) 4(0) 3(5000) ]
                 out       = [1(8001) ]
                 exception in  = []
                 exception out = []
         3 [0x7f278e8ac9f0] BBStart at 0x7f278e840c30, frequency = 10000
                 in        = [0(10000) ]
                 out       = [4(5000) 2(5000) ]
                 exception in  = []
                 exception out = []
         4 [0x7f278e8acbd0] BBStart at 0x7f278e840dc0, frequency = 0
                 in        = [3(5000) ]
                 out       = [5(0) 2(0) ]
                 exception in  = []
                 exception out = []
         5 [0x7f278e8acdd0] BBStart at 0x7f278e841040, frequency = 0
                 in        = [4(0) ]
                 out       = [2(0) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7f278e85c310] Acyclic region
         Subgraph: (* = exit edge)
               (0x7f278e85c3e0:0x7f278e85c2b0)0 --> 3(0x7f278e85c470)
               (0x7f278e85c470:0x7f278e85c190)3 --> 4(0x7f278e85c710) 2(0x7f278e85c620)
               (0x7f278e85c710:0x7f278e85c130)4 --> 2(0x7f278e85c620) 5(0x7f278e85c7e0)
               (0x7f278e85c7e0:0x7f278e85c0d0)5 --> 2(0x7f278e85c620)
               (0x7f278e85c620:0x7f278e85c1f0)2 --> 1(0x7f278e85c990)
               (0x7f278e85c990:0x7f278e85c250)1 -->
         0 [0x7f278e85c2b0] Block
         3 [0x7f278e85c190] Block
         4 [0x7f278e85c130] Block
         5 [0x7f278e85c0d0] Block
         2 [0x7f278e85c1f0] Block
         1 [0x7f278e85c250] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007F278E8476E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
Performing uncommon call constant nodes
Uncommon const node 8E8406E0 [n7n]
Uncommon const node 8E8406E0 [n7n]
Uncommon const node 8E8406E0 [n7n]
<trees
	title="Post Uncommon Call Constant Node Trees"
	method="BT.foo()V"
	hotness="warm">

Post Uncommon Call Constant Node Trees: for BT.foo()V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n24n      BBStart <block_3> (freq 10000)                                                      [0x7f278e840c30] bci=[-1,0,9] rc=0 vc=127 vn=- li=3 udi=- nc=0
n28n      ificmpeq --> block_4 BBStart at n29n ()                                             [0x7f278e840d70] bci=[-1,0,9] rc=0 vc=129 vn=- li=3 udi=- nc=2 flg=0x20
n26n        iload  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ] (cannotOverflow )  [0x7f278e840cd0] bci=[-1,0,9] rc=1 vc=129 vn=- li=3 udi=- nc=0 flg=0x1000
n27n        iconst 1 (X!=0 X>=0 )                                                             [0x7f278e840d20] bci=[-1,0,9] rc=1 vc=129 vn=- li=3 udi=- nc=0 flg=0x104
n25n      BBEnd </block_3> =====                                                              [0x7f278e840c80] bci=[-1,0,9] rc=0 vc=128 vn=- li=3 udi=- nc=0

n1n       BBStart <block_2> (freq 8001)                                                       [0x7f278e840500] bci=[-1,0,9] rc=0 vc=127 vn=- li=2 udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7f278e8405f0] bci=[-1,0,9] rc=0 vc=127 vn=- li=2 udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7f278e8405a0] bci=[-1,0,9] rc=2 vc=127 vn=- li=2 udi=- nc=0
n6n       treetop                                                                             [0x7f278e840690] bci=[-1,0,9] rc=0 vc=127 vn=- li=2 udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7f278e840640] bci=[-1,0,9] rc=4 vc=127 vn=- li=2 udi=- nc=1 flg=0x104
n3n           ==>loadaddr
n12n      ResolveCHK [#32]                                                                    [0x7f278e840870] bci=[-1,8,9] rc=0 vc=127 vn=- li=2 udi=- nc=1
n11n        call  BLine.<init>(IIII)V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ] ()  [0x7f278e840820] bci=[-1,8,9] rc=1 vc=127 vn=- li=2 udi=- nc=5 flg=0x20
n5n           ==>new
n55n          iconst 0                                                                        [0x7f278e95c0f0] bci=[-1,0,9] rc=1 vc=0 vn=- li=- udi=- nc=0
n56n          iconst 0                                                                        [0x7f278e95c140] bci=[-1,0,9] rc=1 vc=0 vn=- li=- udi=- nc=0
n57n          iconst 0                                                                        [0x7f278e95c190] bci=[-1,0,9] rc=1 vc=0 vn=- li=- udi=- nc=0
n7n           iconst 0 (X==0 X>=0 X<=0 )                                                      [0x7f278e8406e0] bci=[-1,4,9] rc=1 vc=127 vn=- li=2 udi=- nc=0 flg=0x302
n15n      ResolveCHK [#314]                                                                   [0x7f278e840960] bci=[-1,12,10] rc=0 vc=127 vn=- li=2 udi=- nc=1
n14n        aload  java/lang/System.out Ljava/io/PrintStream;[#385  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7f278e840910] bci=[-1,12,10] rc=3 vc=127 vn=- li=2 udi=- nc=0 flg=0x100
n19n      treetop                                                                             [0x7f278e840aa0] bci=[-1,16,10] rc=0 vc=127 vn=- li=2 udi=- nc=1
n18n        acalli  java/lang/Object.toString()Ljava/lang/String;[#387  virtual Method -56] [flags 0x500 0x0 ]  [0x7f278e840a50] bci=[-1,16,10] rc=2 vc=127 vn=- li=2 udi=- nc=2
n17n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7f278e840a00] bci=[-1,16,10] rc=1 vc=127 vn=- li=2 udi=- nc=1 flg=0x4
n5n             ==>new
n5n           ==>new
n22n      ResolveAndNULLCHK on n14n [#32]                                                     [0x7f278e840b90] bci=[-1,19,10] rc=0 vc=127 vn=- li=2 udi=- nc=1
n21n        calli  java/io/PrintStream.println(Ljava/lang/String;)V[#388  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7f278e840b40] bci=[-1,19,10] rc=1 vc=127 vn=- li=2 udi=- nc=3 flg=0x20
n20n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7f278e840af0] bci=[-1,19,10] rc=1 vc=127 vn=- li=2 udi=- nc=1 flg=0x4
n14n            ==>aload
n14n          ==>aload
n18n          ==>acalli
n23n      return                                                                              [0x7f278e840be0] bci=[-1,22,11] rc=0 vc=127 vn=- li=2 udi=- nc=0
n2n       BBEnd </block_2> =====                                                              [0x7f278e840550] bci=[-1,22,11] rc=0 vc=127 vn=- li=2 udi=- nc=0

n29n      BBStart <block_4> (freq 0) (cold)                                                   [0x7f278e840dc0] bci=[-1,0,9] rc=0 vc=127 vn=- li=4 udi=- nc=0
n34n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e840f50] bci=[-1,0,9] rc=0 vc=127 vn=- li=4 udi=- nc=1
n33n        iadd                                                                              [0x7f278e840f00] bci=[-1,0,9] rc=2 vc=127 vn=- li=4 udi=- nc=2
n32n          iload  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ] (cannotOverflow )  [0x7f278e840eb0] bci=[-1,0,9] rc=1 vc=127 vn=- li=4 udi=- nc=0 flg=0x1000
n31n          iconst -1 (X!=0 X<=0 )                                                          [0x7f278e840e60] bci=[-1,0,9] rc=1 vc=127 vn=- li=4 udi=- nc=0 flg=0x204
n36n      ificmpgt --> block_2 BBStart at n1n ()                                              [0x7f278e840ff0] bci=[-1,0,9] rc=0 vc=127 vn=- li=4 udi=- nc=2 flg=0x20
n33n        ==>iadd
n35n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7f278e840fa0] bci=[-1,0,9] rc=1 vc=127 vn=- li=4 udi=- nc=0 flg=0x302
n30n      BBEnd </block_4> (cold)                                                             [0x7f278e840e10] bci=[-1,0,9] rc=0 vc=127 vn=- li=4 udi=- nc=0
n37n      BBStart <block_5> (freq 0) (extension of previous block) (cold)                     [0x7f278e841040] bci=[-1,0,9] rc=0 vc=127 vn=- li=5 udi=- nc=0
n40n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e841130] bci=[-1,0,9] rc=0 vc=127 vn=- li=5 udi=- nc=1
n39n        iconst 0x7fffffff (X!=0 X>=0 )                                                    [0x7f278e8410e0] bci=[-1,0,9] rc=1 vc=127 vn=- li=5 udi=- nc=0 flg=0x104
n42n      bstore  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]             [0x7f278e8411d0] bci=[-1,0,9] rc=0 vc=129 vn=- li=5 udi=- nc=1
n41n        bconst   2 (X!=0 X>=0 )                                                           [0x7f278e841180] bci=[-1,0,9] rc=1 vc=129 vn=- li=5 udi=- nc=0 flg=0x104
n47n      treetop                                                                             [0x7f278e841360] bci=[-1,0,9] rc=0 vc=127 vn=- li=5 udi=- nc=1
n43n        icall  jitRetranslateCallerWithPreparation[#71  helper Method] [flags 0x400 0x0 ] ()  [0x7f278e841220] bci=[-1,0,9] rc=1 vc=127 vn=- li=5 udi=- nc=3 flg=0x20
n44n          iconst 0x80000 (X!=0 X>=0 )                                                     [0x7f278e841270] bci=[-1,0,9] rc=1 vc=127 vn=- li=5 udi=- nc=0 flg=0x104
n45n          loadaddr  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ]             [0x7f278e8412c0] bci=[-1,0,9] rc=1 vc=127 vn=- li=5 udi=- nc=0
n46n          loadaddr  <J9Method>[#332  Static] [flags 0x8000307 0x40 ]                      [0x7f278e841310] bci=[-1,0,9] rc=1 vc=127 vn=- li=5 udi=- nc=0
n51n      goto --> block_2 BBStart at n1n                                                     [0x7f278e8414a0] bci=[-1,0,9] rc=0 vc=127 vn=- li=5 udi=- nc=0
n38n      BBEnd </block_5> (cold)                                                             [0x7f278e841090] bci=[-1,0,9] rc=0 vc=127 vn=- li=5 udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 46, symRefCount = 390
</trees>

<cfg>
         0 [0x7f278e85e230] entry
                 in        = []
                 out       = [3(10000) ]
                 exception in  = []
                 exception out = []
         1 [0x7f278e85e140] exit
                 in        = [2(8001) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7f278e88c040] BBStart at 0x7f278e840500, frequency = 8001
                 in        = [5(0) 4(0) 3(5000) ]
                 out       = [1(8001) ]
                 exception in  = []
                 exception out = []
         3 [0x7f278e8ac9f0] BBStart at 0x7f278e840c30, frequency = 10000
                 in        = [0(10000) ]
                 out       = [4(5000) 2(5000) ]
                 exception in  = []
                 exception out = []
         4 [0x7f278e8acbd0] BBStart at 0x7f278e840dc0, frequency = 0
                 in        = [3(5000) ]
                 out       = [5(0) 2(0) ]
                 exception in  = []
                 exception out = []
         5 [0x7f278e8acdd0] BBStart at 0x7f278e841040, frequency = 0
                 in        = [4(0) ]
                 out       = [2(0) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7f278e85c310] Acyclic region
         Subgraph: (* = exit edge)
               (0x7f278e85c3e0:0x7f278e85c2b0)0 --> 3(0x7f278e85c470)
               (0x7f278e85c470:0x7f278e85c190)3 --> 4(0x7f278e85c710) 2(0x7f278e85c620)
               (0x7f278e85c710:0x7f278e85c130)4 --> 2(0x7f278e85c620) 5(0x7f278e85c7e0)
               (0x7f278e85c7e0:0x7f278e85c0d0)5 --> 2(0x7f278e85c620)
               (0x7f278e85c620:0x7f278e85c1f0)2 --> 1(0x7f278e85c990)
               (0x7f278e85c990:0x7f278e85c250)1 -->
         0 [0x7f278e85c2b0] Block
         3 [0x7f278e85c190] Block
         4 [0x7f278e85c130] Block
         5 [0x7f278e85c0d0] Block
         2 [0x7f278e85c1f0] Block
         1 [0x7f278e85c250] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007F278E8476E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>
<trees
	title="Pre Instruction Selection Trees"
	method="BT.foo()V"
	hotness="warm">

Pre Instruction Selection Trees: for BT.foo()V

------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n24n      BBStart <block_3> (freq 10000)                                                      [0x7f278e840c30] bci=[-1,0,9] rc=0 vc=130 vn=- li=3 udi=- nc=0
n28n      ificmpeq --> block_4 BBStart at n29n ()                                             [0x7f278e840d70] bci=[-1,0,9] rc=0 vc=130 vn=- li=3 udi=- nc=2 flg=0x20
n26n        iload  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ] (cannotOverflow )  [0x7f278e840cd0] bci=[-1,0,9] rc=1 vc=130 vn=- li=3 udi=- nc=0 flg=0x1000
n27n        iconst 1 (X!=0 X>=0 )                                                             [0x7f278e840d20] bci=[-1,0,9] rc=1 vc=130 vn=- li=3 udi=- nc=0 flg=0x104
n25n      BBEnd </block_3> =====                                                              [0x7f278e840c80] bci=[-1,0,9] rc=0 vc=130 vn=- li=3 udi=- nc=0

n1n       BBStart <block_2> (freq 8001)                                                       [0x7f278e840500] bci=[-1,0,9] rc=0 vc=130 vn=- li=2 udi=- nc=0
n4n       ResolveCHK [#314]                                                                   [0x7f278e8405f0] bci=[-1,0,9] rc=0 vc=130 vn=- li=2 udi=- nc=1
n3n         loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]      [0x7f278e8405a0] bci=[-1,0,9] rc=2 vc=130 vn=- li=2 udi=- nc=0
n6n       treetop                                                                             [0x7f278e840690] bci=[-1,0,9] rc=0 vc=130 vn=- li=2 udi=- nc=1
n5n         new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7f278e840640] bci=[-1,0,9] rc=4 vc=130 vn=- li=2 udi=- nc=1 flg=0x104
n3n           ==>loadaddr
n12n      ResolveCHK [#32]                                                                    [0x7f278e840870] bci=[-1,8,9] rc=0 vc=130 vn=- li=2 udi=- nc=1
n11n        call  BLine.<init>(IIII)V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ] ()  [0x7f278e840820] bci=[-1,8,9] rc=1 vc=130 vn=- li=2 udi=- nc=5 flg=0x20
n5n           ==>new
n55n          iconst 0                                                                        [0x7f278e95c0f0] bci=[-1,0,9] rc=1 vc=130 vn=- li=- udi=- nc=0
n56n          iconst 0                                                                        [0x7f278e95c140] bci=[-1,0,9] rc=1 vc=130 vn=- li=- udi=- nc=0
n57n          iconst 0                                                                        [0x7f278e95c190] bci=[-1,0,9] rc=1 vc=130 vn=- li=- udi=- nc=0
n7n           iconst 0 (X==0 X>=0 X<=0 )                                                      [0x7f278e8406e0] bci=[-1,4,9] rc=1 vc=130 vn=- li=2 udi=- nc=0 flg=0x302
n15n      ResolveCHK [#314]                                                                   [0x7f278e840960] bci=[-1,12,10] rc=0 vc=130 vn=- li=2 udi=- nc=1
n14n        aload  java/lang/System.out Ljava/io/PrintStream;[#385  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7f278e840910] bci=[-1,12,10] rc=3 vc=130 vn=- li=2 udi=- nc=0 flg=0x100
n19n      treetop                                                                             [0x7f278e840aa0] bci=[-1,16,10] rc=0 vc=130 vn=- li=2 udi=- nc=1
n18n        acalli  java/lang/Object.toString()Ljava/lang/String;[#387  virtual Method -56] [flags 0x500 0x0 ]  [0x7f278e840a50] bci=[-1,16,10] rc=2 vc=130 vn=- li=2 udi=- nc=2
n17n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7f278e840a00] bci=[-1,16,10] rc=1 vc=130 vn=- li=2 udi=- nc=1 flg=0x4
n5n             ==>new
n5n           ==>new
n22n      ResolveAndNULLCHK on n14n [#32]                                                     [0x7f278e840b90] bci=[-1,19,10] rc=0 vc=130 vn=- li=2 udi=- nc=1
n21n        calli  java/io/PrintStream.println(Ljava/lang/String;)V[#388  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7f278e840b40] bci=[-1,19,10] rc=1 vc=130 vn=- li=2 udi=- nc=3 flg=0x20
n20n          aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )    [0x7f278e840af0] bci=[-1,19,10] rc=1 vc=130 vn=- li=2 udi=- nc=1 flg=0x4
n14n            ==>aload
n14n          ==>aload
n18n          ==>acalli
n23n      return                                                                              [0x7f278e840be0] bci=[-1,22,11] rc=0 vc=130 vn=- li=2 udi=- nc=0
n2n       BBEnd </block_2> =====                                                              [0x7f278e840550] bci=[-1,22,11] rc=0 vc=130 vn=- li=2 udi=- nc=0

n29n      BBStart <block_4> (freq 0) (cold)                                                   [0x7f278e840dc0] bci=[-1,0,9] rc=0 vc=130 vn=- li=4 udi=- nc=0
n34n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e840f50] bci=[-1,0,9] rc=0 vc=130 vn=- li=4 udi=- nc=1
n33n        iadd                                                                              [0x7f278e840f00] bci=[-1,0,9] rc=2 vc=130 vn=- li=4 udi=- nc=2
n32n          iload  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ] (cannotOverflow )  [0x7f278e840eb0] bci=[-1,0,9] rc=1 vc=130 vn=- li=4 udi=- nc=0 flg=0x1000
n31n          iconst -1 (X!=0 X<=0 )                                                          [0x7f278e840e60] bci=[-1,0,9] rc=1 vc=130 vn=- li=4 udi=- nc=0 flg=0x204
n36n      ificmpgt --> block_2 BBStart at n1n ()                                              [0x7f278e840ff0] bci=[-1,0,9] rc=0 vc=130 vn=- li=4 udi=- nc=2 flg=0x20
n33n        ==>iadd
n35n        iconst 0 (X==0 X>=0 X<=0 )                                                        [0x7f278e840fa0] bci=[-1,0,9] rc=1 vc=130 vn=- li=4 udi=- nc=0 flg=0x302
n30n      BBEnd </block_4> (cold)                                                             [0x7f278e840e10] bci=[-1,0,9] rc=0 vc=130 vn=- li=4 udi=- nc=0
n37n      BBStart <block_5> (freq 0) (extension of previous block) (cold)                     [0x7f278e841040] bci=[-1,0,9] rc=0 vc=130 vn=- li=5 udi=- nc=0
n40n      istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]               [0x7f278e841130] bci=[-1,0,9] rc=0 vc=130 vn=- li=5 udi=- nc=1
n39n        iconst 0x7fffffff (X!=0 X>=0 )                                                    [0x7f278e8410e0] bci=[-1,0,9] rc=1 vc=130 vn=- li=5 udi=- nc=0 flg=0x104
n42n      bstore  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]             [0x7f278e8411d0] bci=[-1,0,9] rc=0 vc=130 vn=- li=5 udi=- nc=1
n41n        bconst   2 (X!=0 X>=0 )                                                           [0x7f278e841180] bci=[-1,0,9] rc=1 vc=130 vn=- li=5 udi=- nc=0 flg=0x104
n47n      treetop                                                                             [0x7f278e841360] bci=[-1,0,9] rc=0 vc=130 vn=- li=5 udi=- nc=1
n43n        icall  jitRetranslateCallerWithPreparation[#71  helper Method] [flags 0x400 0x0 ] ()  [0x7f278e841220] bci=[-1,0,9] rc=1 vc=130 vn=- li=5 udi=- nc=3 flg=0x20
n44n          iconst 0x80000 (X!=0 X>=0 )                                                     [0x7f278e841270] bci=[-1,0,9] rc=1 vc=130 vn=- li=5 udi=- nc=0 flg=0x104
n45n          loadaddr  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ]             [0x7f278e8412c0] bci=[-1,0,9] rc=1 vc=130 vn=- li=5 udi=- nc=0
n46n          loadaddr  <J9Method>[#332  Static] [flags 0x8000307 0x40 ]                      [0x7f278e841310] bci=[-1,0,9] rc=1 vc=130 vn=- li=5 udi=- nc=0
n51n      goto --> block_2 BBStart at n1n                                                     [0x7f278e8414a0] bci=[-1,0,9] rc=0 vc=130 vn=- li=5 udi=- nc=0
n38n      BBEnd </block_5> (cold)                                                             [0x7f278e841090] bci=[-1,0,9] rc=0 vc=130 vn=- li=5 udi=- nc=0

index:       node global index
bci=[x,y,z]: byte-code-info [callee-index, bytecode-index, line-number]
rc:          reference count
vc:          visit count
vn:          value number
li:          local index
udi:         use/def index
nc:          number of children
addr:        address size in bytes
flg:         node flags

Number of nodes = 46, symRefCount = 390
</trees>

<cfg>
         0 [0x7f278e85e230] entry
                 in        = []
                 out       = [3(10000) ]
                 exception in  = []
                 exception out = []
         1 [0x7f278e85e140] exit
                 in        = [2(8001) ]
                 out       = []
                 exception in  = []
                 exception out = []
         2 [0x7f278e88c040] BBStart at 0x7f278e840500, frequency = 8001
                 in        = [5(0) 4(0) 3(5000) ]
                 out       = [1(8001) ]
                 exception in  = []
                 exception out = []
         3 [0x7f278e8ac9f0] BBStart at 0x7f278e840c30, frequency = 10000
                 in        = [0(10000) ]
                 out       = [4(5000) 2(5000) ]
                 exception in  = []
                 exception out = []
         4 [0x7f278e8acbd0] BBStart at 0x7f278e840dc0, frequency = 0
                 in        = [3(5000) ]
                 out       = [5(0) 2(0) ]
                 exception in  = []
                 exception out = []
         5 [0x7f278e8acdd0] BBStart at 0x7f278e841040, frequency = 0
                 in        = [4(0) ]
                 out       = [2(0) ]
                 exception in  = []
                 exception out = []
<structure>
      0 [0x7f278e85c310] Acyclic region
         Subgraph: (* = exit edge)
               (0x7f278e85c3e0:0x7f278e85c2b0)0 --> 3(0x7f278e85c470)
               (0x7f278e85c470:0x7f278e85c190)3 --> 4(0x7f278e85c710) 2(0x7f278e85c620)
               (0x7f278e85c710:0x7f278e85c130)4 --> 2(0x7f278e85c620) 5(0x7f278e85c7e0)
               (0x7f278e85c7e0:0x7f278e85c0d0)5 --> 2(0x7f278e85c620)
               (0x7f278e85c620:0x7f278e85c1f0)2 --> 1(0x7f278e85c990)
               (0x7f278e85c990:0x7f278e85c250)1 -->
         0 [0x7f278e85c2b0] Block
         3 [0x7f278e85c190] Block
         4 [0x7f278e85c130] Block
         5 [0x7f278e85c0d0] Block
         2 [0x7f278e85c1f0] Block
         1 [0x7f278e85c250] Block
</structure>
</cfg>
<knownObjectTable size="1"> // 00007F278E8476E0
  id       JNI Ref            Address          Hash       Class
  obj0                        NULL
</knownObjectTable>

Performing Instruction Selection:


============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n24n     (  0)  BBStart <block_3> (freq 10000)                                                       [0x7f278e840c30] bci=[-1,0,9] rc=0 vc=130 vn=- li=3 udi=- nc=0
------------------------------
------------------------------
 n24n     (  0)  BBStart <block_3> (freq 10000)                                                       [0x7f278e840c30] bci=[-1,0,9] rc=0 vc=130 vn=- li=3 udi=- nc=0
------------------------------

 [0x7f278e97b2f0]	Label L0032:			# label
========================================
 [0x7f278e97b390]	fence Relative [ 00007F278E8ACA90 ]	# fence BBStart <block_3> (frequency 10000)

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n28n     (  0)  ificmpeq --> block_4 BBStart at n29n ()                                              [0x7f278e840d70] bci=[-1,0,9] rc=0 vc=130 vn=- li=3 udi=- nc=2 flg=0x20
 n26n     (  1)    iload  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ] (cannotOverflow )  [0x7f278e840cd0] bci=[-1,0,9] rc=1 vc=130 vn=- li=3 udi=- nc=0 flg=0x1000
 n27n     (  1)    iconst 1 (X!=0 X>=0 )                                                              [0x7f278e840d20] bci=[-1,0,9] rc=1 vc=130 vn=- li=3 udi=- nc=0 flg=0x104
------------------------------
------------------------------
 n28n     (  0)  ificmpeq --> block_4 BBStart at n29n ()                                              [0x7f278e840d70] bci=[-1,0,9] rc=0 vc=130 vn=- li=3 udi=- nc=2 flg=0x20
 n26n     (  0)    iload  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ] (cannotOverflow )  [0x7f278e840cd0] bci=[-1,0,9] rc=0 vc=130 vn=- li=3 udi=- nc=0 flg=0x1000
 n27n     (  0)    iconst 1 (X!=0 X>=0 )                                                              [0x7f278e840d20] bci=[-1,0,9] rc=0 vc=130 vn=- li=3 udi=- nc=0 flg=0x104
------------------------------

 [0x7f278e97b6a0]	cmp	dword ptr [$0x00007f27b011acd8], 0x00000001	# CMP4MemImms, SymRef  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ]
 [0x7f278e97b730]	je	Label L0016			# JE4

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n25n     (  0)  BBEnd </block_3> =====                                                               [0x7f278e840c80] bci=[-1,0,9] rc=0 vc=130 vn=- li=3 udi=- nc=0
------------------------------
------------------------------
 n25n     (  0)  BBEnd </block_3> =====                                                               [0x7f278e840c80] bci=[-1,0,9] rc=0 vc=130 vn=- li=3 udi=- nc=0
------------------------------

 [0x7f278e97b970]	fence Relative [ 00007F278E8ACA94 ]	# fence BBEnd </block_3>
 [0x7f278e97bbc0]	assocreg                        # assocreg
	POST: None
 [0x7f278e97bca0]	Label L0033:			# label

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n1n      (  0)  BBStart <block_2> (freq 8001)                                                        [0x7f278e840500] bci=[-1,0,9] rc=0 vc=130 vn=- li=2 udi=- nc=0
------------------------------
------------------------------
 n1n      (  0)  BBStart <block_2> (freq 8001)                                                        [0x7f278e840500] bci=[-1,0,9] rc=0 vc=130 vn=- li=2 udi=- nc=0
------------------------------

 [0x7f278e97be80]	Label L0017:			# label
========================================
 [0x7f278e97bf20]	fence Relative [ 00007F278E88C0E0 ]	# fence BBStart <block_2> (frequency 8001)

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n4n      (  0)  ResolveCHK [#314]                                                                    [0x7f278e8405f0] bci=[-1,0,9] rc=0 vc=130 vn=- li=2 udi=- nc=1
 n3n      (  2)    loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ]       [0x7f278e8405a0] bci=[-1,0,9] rc=2 vc=130 vn=- li=2 udi=- nc=0
------------------------------
[    24] O^O OMIT HCR CLASS POINTER ASSUMPTION: class=0000000000000000, for node 00007F278E8405A0
------------------------------
 n4n      (  0)  ResolveCHK [#314]                                                                    [0x7f278e8405f0] bci=[-1,0,9] rc=0 vc=130 vn=- li=2 udi=- nc=1
 n3n      (  1)    loadaddr  unknown class object[#382  unresolved Static] [flags 0x18307 0x0 ] (in GPR_0049)  [0x7f278e8405a0] bci=[-1,0,9] rc=1 vc=130 vn=- li=2 udi=49952 nc=0
------------------------------

 [0x7f278e97c430]	nop			# Avoid boundary @8 [0x0:8]
 [0x7f278e97c3a0]	lea	GPR_0049, dword ptr [$0x0000000000000000]		# LEA4RegMem, SymRef  unknown class object[#392  unresolved Static] [flags 0x18307 0x0 ]

============================================================
; Live regs: GPR=1 FPR=0 VRF=0 {GPR_0049}
------------------------------
 n6n      (  0)  treetop                                                                              [0x7f278e840690] bci=[-1,0,9] rc=0 vc=130 vn=- li=2 udi=- nc=1
 n5n      (  4)    new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (X!=0 X>=0 sharedMemory )  [0x7f278e840640] bci=[-1,0,9] rc=4 vc=130 vn=- li=2 udi=- nc=1 flg=0x104
 n3n      (  1)      ==>loadaddr (in GPR_0049)
------------------------------
X86 HelperCall: [0091] jitNewObject
------------------------------
 n6n      (  0)  treetop                                                                              [0x7f278e840690] bci=[-1,0,9] rc=0 vc=130 vn=- li=2 udi=- nc=1
 n5n      (  3)    new  jitNewObject[#91  helper Method] [flags 0x400 0x0 ] (in &GPR_0089) (X!=0 X>=0 sharedMemory )  [0x7f278e840640] bci=[-1,0,9] rc=3 vc=130 vn=- li=2 udi=59392 nc=1 flg=0x104
 n3n      (  0)      ==>loadaddr (in GPR_0049)
------------------------------

 [0x7f278e97dee0]	mov	GPR_0068, GPR_0049		# MOV8RegReg
 [0x7f278e97df70]	mov	GPR_0067, GPR_0000		# MOV8RegReg
 [0x7f278e97e780]	assocreg                        # assocreg
	POST: None
 [0x7f278e97e520]	call	jitNewObject            # CALLImm4 (00007F27AF410DC0)# CALLImm4
	 PRE: [GPR_0064 : eax] [GPR_0065 : ecx] [GPR_0066 : edx] [GPR_0067 : edi] [GPR_0068 : esi] [GPR_0069 : r8d] [GPR_0070 : r9d] [GPR_0071 : r10d] [GPR_0072 : r11d] [FPR_0073 : xmm0] [FPR_0074 : xmm1] [FPR_0075 : xmm2] [FPR_0076 : xmm3] [FPR_0077 : xmm4] [FPR_0078 : xmm5] [FPR_0079 : xmm6] [FPR_0080 : xmm7] [FPR_0081 : xmm8] [FPR_0082 : xmm9] [FPR_0083 : xmm10] [FPR_0084 : xmm11] [FPR_0085 : xmm12] [FPR_0086 : xmm13] [FPR_0087 : xmm14] [FPR_0088 : xmm15] [GPR_0000 : ebp]
	POST: [GPR_0064 : eax] [GPR_0065 : ecx] [GPR_0066 : edx] [GPR_0067 : edi] [GPR_0068 : esi] [GPR_0069 : r8d] [GPR_0070 : r9d] [GPR_0071 : r10d] [GPR_0072 : r11d] [FPR_0073 : xmm0] [FPR_0074 : xmm1] [FPR_0075 : xmm2] [FPR_0076 : xmm3] [FPR_0077 : xmm4] [FPR_0078 : xmm5] [FPR_0079 : xmm6] [FPR_0080 : xmm7] [FPR_0081 : xmm8] [FPR_0082 : xmm9] [FPR_0083 : xmm10] [FPR_0084 : xmm11] [FPR_0085 : xmm12] [FPR_0086 : xmm13] [FPR_0087 : xmm14] [FPR_0088 : xmm15] [GPR_0000 : ebp]
 [0x7f278e97eac0]	mov	&GPR_0089, GPR_0064		# MOV8RegReg

============================================================
; Live regs: GPR=1 FPR=0 VRF=0 {&GPR_0089}
------------------------------
 n12n     (  0)  ResolveCHK [#32]                                                                     [0x7f278e840870] bci=[-1,8,9] rc=0 vc=130 vn=- li=2 udi=- nc=1
 n11n     (  1)    call  BLine.<init>(IIII)V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ] ()  [0x7f278e840820] bci=[-1,8,9] rc=1 vc=130 vn=- li=2 udi=- nc=5 flg=0x20
 n5n      (  3)      ==>new (in &GPR_0089) (X!=0 X>=0 sharedMemory )
 n55n     (  1)      iconst 0                                                                         [0x7f278e95c0f0] bci=[-1,0,9] rc=1 vc=130 vn=- li=- udi=- nc=0
 n56n     (  1)      iconst 0                                                                         [0x7f278e95c140] bci=[-1,0,9] rc=1 vc=130 vn=- li=- udi=- nc=0
 n57n     (  1)      iconst 0                                                                         [0x7f278e95c190] bci=[-1,0,9] rc=1 vc=130 vn=- li=- udi=- nc=0
 n7n      (  1)      iconst 0 (X==0 X>=0 X<=0 )                                                       [0x7f278e8406e0] bci=[-1,4,9] rc=1 vc=130 vn=- li=2 udi=- nc=0 flg=0x302
------------------------------
------------------------------
 n12n     (  0)  ResolveCHK [#32]                                                                     [0x7f278e840870] bci=[-1,8,9] rc=0 vc=130 vn=- li=2 udi=- nc=1
 n11n     (  0)    call  BLine.<init>(IIII)V[#383  unresolved notAccessed special Method] [flags 0x400 0x0 ] ()  [0x7f278e840820] bci=[-1,8,9] rc=0 vc=130 vn=- li=2 udi=- nc=5 flg=0x20
 n5n      (  2)      ==>new (in &GPR_0089) (X!=0 X>=0 sharedMemory )
 n55n     (  0)      iconst 0                                                                         [0x7f278e95c0f0] bci=[-1,0,9] rc=0 vc=130 vn=- li=- udi=- nc=0
 n56n     (  0)      iconst 0                                                                         [0x7f278e95c140] bci=[-1,0,9] rc=0 vc=130 vn=- li=- udi=- nc=0
 n57n     (  0)      iconst 0                                                                         [0x7f278e95c190] bci=[-1,0,9] rc=0 vc=130 vn=- li=- udi=- nc=0
 n7n      (  0)      iconst 0 (X==0 X>=0 X<=0 )                                                       [0x7f278e8406e0] bci=[-1,4,9] rc=0 vc=130 vn=- li=2 udi=- nc=0 flg=0x302
------------------------------

 [0x7f278e97f910]	mov	&GPR_0090, &GPR_0089		# MOV8RegReg
 [0x7f278e97fa20]	xor	GPR_0091, GPR_0091		# XOR4RegReg
 [0x7f278e97fb30]	xor	GPR_0092, GPR_0092		# XOR4RegReg
 [0x7f278e97fc40]	xor	GPR_0093, GPR_0093		# XOR4RegReg
 [0x7f278e97fd60]	mov	qword ptr [rsp], 0x00000000	# S8MemImm4
 [0x7f278e9806e0]	Label L0064:			# label	# (Start of internal control flow)
	 PRE: [&GPR_0090 : eax] [GPR_0091 : esi] [GPR_0092 : edx] [GPR_0093 : ecx]
 [0x7f278e980040]	nop			# Avoid boundary @8 [0x0:8]
 [0x7f278e97ffa0]	call	Snippet Label L0066     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7f278e9809e0]	assocreg                        # assocreg
	POST: [GPR_0064 : eax] [GPR_0065 : ecx] [GPR_0066 : edx] [GPR_0067 : edi] [GPR_0068 : esi] [GPR_0069 : r8d] [GPR_0070 : r9d] [GPR_0071 : r10d] [GPR_0072 : r11d]
 [0x7f278e980780]	Label L0065:			# label	# (End of internal control flow)
	 PRE: [&GPR_0090 : eax] [GPR_0091 : esi] [GPR_0092 : edx] [GPR_0093 : ecx]
	POST: [D_GPR_0094 : eax] [D_GPR_0095 : ecx] [D_GPR_0096 : edx] [D_GPR_0097 : edi] [D_GPR_0098 : esi] [D_GPR_0099 : r8d] [D_GPR_0100 : r10d] [D_GPR_0101 : r11d] [D_GPR_0102 : r12d] [D_GPR_0103 : r13d] [D_GPR_0104 : r14d] [D_GPR_0105 : r15d] [GPR_0000 : ebp]

============================================================
; Live regs: GPR=1 FPR=0 VRF=0 {&GPR_0089}
------------------------------
 n15n     (  0)  ResolveCHK [#314]                                                                    [0x7f278e840960] bci=[-1,12,10] rc=0 vc=130 vn=- li=2 udi=- nc=1
 n14n     (  3)    aload  java/lang/System.out Ljava/io/PrintStream;[#385  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (X>=0 sharedMemory )  [0x7f278e840910] bci=[-1,12,10] rc=3 vc=130 vn=- li=2 udi=- nc=0 flg=0x100
------------------------------
------------------------------
 n15n     (  0)  ResolveCHK [#314]                                                                    [0x7f278e840960] bci=[-1,12,10] rc=0 vc=130 vn=- li=2 udi=- nc=1
 n14n     (  2)    aload  java/lang/System.out Ljava/io/PrintStream;[#385  unresolved notAccessed volatile Static] [flags 0x2307 0x0 ] (in &GPR_0107) (X>=0 sharedMemory )  [0x7f278e840910] bci=[-1,12,10] rc=2 vc=130 vn=- li=2 udi=4848 nc=0 flg=0x100
------------------------------

 [0x7f278e981400]	nop			# Avoid boundary @8 [0x0:8]
 [0x7f278e981370]	mov	&GPR_0107, qword ptr [$0x0000000000000000]		# L8RegMem, SymRef  java/lang/System.out Ljava/io/PrintStream;[#395  unresolved volatile Static] [flags 0x2307 0x0 ]

============================================================
; Live regs: GPR=2 FPR=0 VRF=0 {&GPR_0107, &GPR_0089}
------------------------------
 n19n     (  0)  treetop                                                                              [0x7f278e840aa0] bci=[-1,16,10] rc=0 vc=130 vn=- li=2 udi=- nc=1
 n18n     (  2)    acalli  java/lang/Object.toString()Ljava/lang/String;[#387  virtual Method -56] [flags 0x500 0x0 ]  [0x7f278e840a50] bci=[-1,16,10] rc=2 vc=130 vn=- li=2 udi=- nc=2
 n17n     (  1)      aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )     [0x7f278e840a00] bci=[-1,16,10] rc=1 vc=130 vn=- li=2 udi=- nc=1 flg=0x4
 n5n      (  2)        ==>new (in &GPR_0089) (X!=0 X>=0 sharedMemory )
 n5n      (  2)      ==>new (in &GPR_0089) (X!=0 X>=0 sharedMemory )
------------------------------
buildVirtualOrComputedCall(00007F278E840A50), isComputed=0
------------------------------
 n19n     (  0)  treetop                                                                              [0x7f278e840aa0] bci=[-1,16,10] rc=0 vc=130 vn=- li=2 udi=- nc=1
 n18n     (  1)    acalli  java/lang/Object.toString()Ljava/lang/String;[#387  virtual Method -56] [flags 0x500 0x0 ] (in &GPR_0122)  [0x7f278e840a50] bci=[-1,16,10] rc=1 vc=130 vn=- li=2 udi=11744 nc=2
 n17n     (  0)      aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (in GPR_0110) (X!=0 sharedMemory )  [0x7f278e840a00] bci=[-1,16,10] rc=0 vc=130 vn=- li=2 udi=8608 nc=1 flg=0x4
 n5n      (  0)        ==>new (in &GPR_0089) (X!=0 X>=0 sharedMemory )
 n5n      (  0)      ==>new (in &GPR_0089) (X!=0 X>=0 sharedMemory )
------------------------------

 [0x7f278e981ee0]	mov	&GPR_0108, &GPR_0089		# MOV8RegReg
 [0x7f278e982e60]	Label L0068:			# label	# (Start of internal control flow)
	 PRE: [&GPR_0108 : eax]
 [0x7f278e982220]	mov	GPR_0110, dword ptr [&GPR_0089]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7f278e9822b0]	and	GPR_0110, 0xffffffffffffff00	# AND8RegImm4
 [0x7f278e9823d0]	call	dword ptr [GPR_0110-0x38]		# CALLMem, SymRef [#397 -56]
 [0x7f278e983160]	assocreg                        # assocreg
	POST: [D_GPR_0094 : eax] [&GPR_0089 : ebx] [D_GPR_0095 : ecx] [D_GPR_0096 : edx] [D_GPR_0097 : edi] [D_GPR_0098 : esi] [D_GPR_0099 : r8d] [D_GPR_0100 : r10d] [D_GPR_0101 : r11d] [D_GPR_0102 : r12d] [D_GPR_0103 : r13d] [D_GPR_0104 : r14d] [D_GPR_0105 : r15d]
 [0x7f278e982f00]	Label L0069:			# label	# (End of internal control flow)
	 PRE: [&GPR_0108 : eax]
	POST: [D_GPR_0111 : ecx] [D_GPR_0112 : edx] [D_GPR_0113 : edi] [D_GPR_0114 : esi] [D_GPR_0115 : r8d] [D_GPR_0116 : r10d] [D_GPR_0117 : r11d] [D_GPR_0118 : r12d] [D_GPR_0119 : r13d] [D_GPR_0120 : r14d] [D_GPR_0121 : r15d] [GPR_0000 : ebp] [&GPR_0122 : eax]

============================================================
; Live regs: GPR=2 FPR=0 VRF=0 {&GPR_0122, &GPR_0107}
------------------------------
 n22n     (  0)  ResolveAndNULLCHK on n14n [#32]                                                      [0x7f278e840b90] bci=[-1,19,10] rc=0 vc=130 vn=- li=2 udi=- nc=1
 n21n     (  1)    calli  java/io/PrintStream.println(Ljava/lang/String;)V[#388  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7f278e840b40] bci=[-1,19,10] rc=1 vc=130 vn=- li=2 udi=- nc=3 flg=0x20
 n20n     (  1)      aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (X!=0 sharedMemory )     [0x7f278e840af0] bci=[-1,19,10] rc=1 vc=130 vn=- li=2 udi=- nc=1 flg=0x4
 n14n     (  2)        ==>aload (in &GPR_0107) (X>=0 sharedMemory )
 n14n     (  2)      ==>aload (in &GPR_0107) (X>=0 sharedMemory )
 n18n     (  1)      ==>acalli (in &GPR_0122)
------------------------------
buildVirtualOrComputedCall(00007F278E840B40), isComputed=0
------------------------------
 n22n     (  0)  ResolveAndNULLCHK on n14n [#32]                                                      [0x7f278e840b90] bci=[-1,19,10] rc=0 vc=130 vn=- li=2 udi=- nc=1
 n21n     (  0)    calli  java/io/PrintStream.println(Ljava/lang/String;)V[#388  unresolved virtual Method] [flags 0x400 0x0 ] ()  [0x7f278e840b40] bci=[-1,19,10] rc=0 vc=130 vn=- li=2 udi=- nc=3 flg=0x20
 n20n     (  0)      aloadi  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ] (in GPR_0125) (X!=0 sharedMemory )  [0x7f278e840af0] bci=[-1,19,10] rc=0 vc=130 vn=- li=2 udi=16528 nc=1 flg=0x4
 n14n     (  0)        ==>aload (in &GPR_0107) (X!=0 X>=0 sharedMemory )
 n14n     (  0)      ==>aload (in &GPR_0107) (X!=0 X>=0 sharedMemory )
 n18n     (  0)      ==>acalli (in &GPR_0122)
------------------------------

 [0x7f278e983ef0]	mov	&GPR_0123, &GPR_0107		# MOV8RegReg
 [0x7f278e984110]	mov	GPR_0125, dword ptr [&GPR_0107]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7f278e9841a0]	and	GPR_0125, 0xffffffffffffff00	# AND8RegImm4
 [0x7f278e984e50]	Label L0071:			# label	# (Start of internal control flow)
	 PRE: [&GPR_0123 : eax] [&GPR_0122 : esi]
 [0x7f278e984560]	nop			# Avoid boundary @8 [0x0:8]
 [0x7f278e9844c0]	mov	GPR_0126, 0x0000000000000000	# MOV8RegImm64
 [0x7f278e984600]	cmp	GPR_0126, GPR_0125		# CMP8RegReg
 [0x7f278e984690]	jne	Snippet Label L0074		# JNE4	# (VPic Data)
 [0x7f278e984730]	call	populateVPicSlotCall    # CALLImm4 (00007F27AEE275C0)# CALLImm4
 [0x7f278e985150]	assocreg                        # assocreg
	POST: [&GPR_0122 : eax] [&GPR_0107 : ebx] [D_GPR_0111 : ecx] [D_GPR_0112 : edx] [D_GPR_0113 : edi] [D_GPR_0114 : esi] [D_GPR_0115 : r8d] [D_GPR_0116 : r10d] [D_GPR_0117 : r11d] [D_GPR_0118 : r12d] [D_GPR_0119 : r13d] [D_GPR_0120 : r14d] [D_GPR_0121 : r15d]
 [0x7f278e984ef0]	Label L0072:			# label	# (End of internal control flow)
	 PRE: [&GPR_0123 : eax] [&GPR_0122 : esi]
	POST: [D_GPR_0127 : eax] [D_GPR_0128 : ecx] [D_GPR_0129 : edx] [D_GPR_0130 : edi] [D_GPR_0131 : esi] [D_GPR_0132 : r8d] [D_GPR_0133 : r10d] [D_GPR_0134 : r11d] [D_GPR_0135 : r12d] [D_GPR_0136 : r13d] [D_GPR_0137 : r14d] [D_GPR_0138 : r15d] [GPR_0000 : ebp]

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n23n     (  0)  return                                                                               [0x7f278e840be0] bci=[-1,22,11] rc=0 vc=130 vn=- li=2 udi=- nc=0
------------------------------
------------------------------
 n23n     (  0)  return                                                                               [0x7f278e840be0] bci=[-1,22,11] rc=0 vc=130 vn=- li=2 udi=- nc=0
------------------------------

 [0x7f278e9857a0]	ret                             # RET

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n2n      (  0)  BBEnd </block_2> =====                                                               [0x7f278e840550] bci=[-1,22,11] rc=0 vc=130 vn=- li=2 udi=- nc=0
------------------------------
------------------------------
 n2n      (  0)  BBEnd </block_2> =====                                                               [0x7f278e840550] bci=[-1,22,11] rc=0 vc=130 vn=- li=2 udi=- nc=0
------------------------------

 [0x7f278e9858b0]	fence Relative [ 00007F278E88C0E4 ]	# fence BBEnd </block_2>
 [0x7f278e985b00]	assocreg                        # assocreg
	POST: [D_GPR_0127 : eax] [D_GPR_0128 : ecx] [D_GPR_0129 : edx] [D_GPR_0130 : edi] [D_GPR_0131 : esi] [D_GPR_0132 : r8d] [D_GPR_0133 : r10d] [D_GPR_0134 : r11d] [D_GPR_0135 : r12d] [D_GPR_0136 : r13d] [D_GPR_0137 : r14d] [D_GPR_0138 : r15d]
 [0x7f278e985be0]	Label L0075:			# label

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n29n     (  0)  BBStart <block_4> (freq 0) (cold)                                                    [0x7f278e840dc0] bci=[-1,0,9] rc=0 vc=130 vn=- li=4 udi=- nc=0
------------------------------
------------------------------
 n29n     (  0)  BBStart <block_4> (freq 0) (cold)                                                    [0x7f278e840dc0] bci=[-1,0,9] rc=0 vc=130 vn=- li=4 udi=- nc=0
------------------------------

 [0x7f278e985dc0]	Label L0016:			# label
========================================
 [0x7f278e985e60]	fence Relative [ 00007F278E8ACC70 ]	# fence BBStart <block_4> (frequency 0) (cold)

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n34n     (  0)  istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]                [0x7f278e840f50] bci=[-1,0,9] rc=0 vc=130 vn=- li=4 udi=- nc=1
 n33n     (  2)    iadd                                                                               [0x7f278e840f00] bci=[-1,0,9] rc=2 vc=130 vn=- li=4 udi=- nc=2
 n32n     (  1)      iload  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ] (cannotOverflow )  [0x7f278e840eb0] bci=[-1,0,9] rc=1 vc=130 vn=- li=4 udi=- nc=0 flg=0x1000
 n31n     (  1)      iconst -1 (X!=0 X<=0 )                                                           [0x7f278e840e60] bci=[-1,0,9] rc=1 vc=130 vn=- li=4 udi=- nc=0 flg=0x204
------------------------------
[    25] O^O analyseAddForLEA
[    26] O^O analyseAddForLEA: checking that second node is a memory reference ffffffff
------------------------------
 n34n     (  0)  istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]                [0x7f278e840f50] bci=[-1,0,9] rc=0 vc=130 vn=- li=4 udi=- nc=1
 n33n     (  1)    iadd (in GPR_0145)                                                                 [0x7f278e840f00] bci=[-1,0,9] rc=1 vc=130 vn=- li=4 udi=25008 nc=2
 n32n     (  0)      iload  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ] (in GPR_0145) (cannotOverflow )  [0x7f278e840eb0] bci=[-1,0,9] rc=0 vc=130 vn=- li=4 udi=25008 nc=0 flg=0x1000
 n31n     (  0)      iconst -1 (X!=0 X<=0 )                                                           [0x7f278e840e60] bci=[-1,0,9] rc=0 vc=130 vn=- li=4 udi=- nc=0 flg=0x204
------------------------------

 [0x7f278e986230]	mov	GPR_0145, dword ptr [$0x00007f278d0674d0]		# L4RegMem, SymRef  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]
 [0x7f278e9862c0]	sub	GPR_0145, 0x00000001	# SUB4RegImms
 [0x7f278e986460]	mov	dword ptr [$0x00007f278d0674d0], GPR_0145		# S4MemReg, SymRef  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]

============================================================
; Live regs: GPR=1 FPR=0 VRF=0 {GPR_0145}
------------------------------
 n36n     (  0)  ificmpgt --> block_2 BBStart at n1n ()                                               [0x7f278e840ff0] bci=[-1,0,9] rc=0 vc=130 vn=- li=4 udi=- nc=2 flg=0x20
 n33n     (  1)    ==>iadd (in GPR_0145)
 n35n     (  1)    iconst 0 (X==0 X>=0 X<=0 )                                                         [0x7f278e840fa0] bci=[-1,0,9] rc=1 vc=130 vn=- li=4 udi=- nc=0 flg=0x302
------------------------------
------------------------------
 n36n     (  0)  ificmpgt --> block_2 BBStart at n1n ()                                               [0x7f278e840ff0] bci=[-1,0,9] rc=0 vc=130 vn=- li=4 udi=- nc=2 flg=0x20
 n33n     (  0)    ==>iadd (in GPR_0145)
 n35n     (  0)    iconst 0 (X==0 X>=0 X<=0 )                                                         [0x7f278e840fa0] bci=[-1,0,9] rc=0 vc=130 vn=- li=4 udi=- nc=0 flg=0x302
------------------------------

 [0x7f278e986780]	cmp	GPR_0145, 0x00000000	# CMP4RegImms
 [0x7f278e986810]	jg	Label L0017			# JG4

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n30n     (  0)  BBEnd </block_4> (cold)                                                              [0x7f278e840e10] bci=[-1,0,9] rc=0 vc=130 vn=- li=4 udi=- nc=0
------------------------------
------------------------------
 n30n     (  0)  BBEnd </block_4> (cold)                                                              [0x7f278e840e10] bci=[-1,0,9] rc=0 vc=130 vn=- li=4 udi=- nc=0
------------------------------

 [0x7f278e9869a0]	fence Relative [ 00007F278E8ACC74 ]	# fence BBEnd </block_4>

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n37n     (  0)  BBStart <block_5> (freq 0) (extension of previous block) (cold)                      [0x7f278e841040] bci=[-1,0,9] rc=0 vc=130 vn=- li=5 udi=- nc=0
------------------------------
------------------------------
 n37n     (  0)  BBStart <block_5> (freq 0) (extension of previous block) (cold)                      [0x7f278e841040] bci=[-1,0,9] rc=0 vc=130 vn=- li=5 udi=- nc=0
------------------------------

........................................
 [0x7f278e986ac0]	fence Relative [ 00007F278E8ACE70 ]	# fence BBStart <block_5> (frequency 0) (extension of previous block) (cold)

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n40n     (  0)  istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]                [0x7f278e841130] bci=[-1,0,9] rc=0 vc=130 vn=- li=5 udi=- nc=1
 n39n     (  1)    iconst 0x7fffffff (X!=0 X>=0 )                                                     [0x7f278e8410e0] bci=[-1,0,9] rc=1 vc=130 vn=- li=5 udi=- nc=0 flg=0x104
------------------------------
------------------------------
 n40n     (  0)  istore  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]                [0x7f278e841130] bci=[-1,0,9] rc=0 vc=130 vn=- li=5 udi=- nc=1
 n39n     (  0)    iconst 0x7fffffff (X!=0 X>=0 )                                                     [0x7f278e8410e0] bci=[-1,0,9] rc=0 vc=130 vn=- li=5 udi=- nc=0 flg=0x104
------------------------------

 [0x7f278e986d50]	mov	dword ptr [$0x00007f278d0674d0], 0x7fffffff	# S4MemImm4, SymRef  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n42n     (  0)  bstore  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]              [0x7f278e8411d0] bci=[-1,0,9] rc=0 vc=130 vn=- li=5 udi=- nc=1
 n41n     (  1)    bconst   2 (X!=0 X>=0 )                                                            [0x7f278e841180] bci=[-1,0,9] rc=1 vc=130 vn=- li=5 udi=- nc=0 flg=0x104
------------------------------
------------------------------
 n42n     (  0)  bstore  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]              [0x7f278e8411d0] bci=[-1,0,9] rc=0 vc=130 vn=- li=5 udi=- nc=1
 n41n     (  0)    bconst   2 (X!=0 X>=0 )                                                            [0x7f278e841180] bci=[-1,0,9] rc=0 vc=130 vn=- li=5 udi=- nc=0 flg=0x104
------------------------------

 [0x7f278e986ff0]	mov	byte ptr [$0x0000000000000000], 0x02	# S1MemImm1, SymRef  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n47n     (  0)  treetop                                                                              [0x7f278e841360] bci=[-1,0,9] rc=0 vc=130 vn=- li=5 udi=- nc=1
 n43n     (  1)    icall  jitRetranslateCallerWithPreparation[#71  helper Method] [flags 0x400 0x0 ] ()  [0x7f278e841220] bci=[-1,0,9] rc=1 vc=130 vn=- li=5 udi=- nc=3 flg=0x20
 n44n     (  1)      iconst 0x80000 (X!=0 X>=0 )                                                      [0x7f278e841270] bci=[-1,0,9] rc=1 vc=130 vn=- li=5 udi=- nc=0 flg=0x104
 n45n     (  1)      loadaddr  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ]              [0x7f278e8412c0] bci=[-1,0,9] rc=1 vc=130 vn=- li=5 udi=- nc=0
 n46n     (  1)      loadaddr  <J9Method>[#332  Static] [flags 0x8000307 0x40 ]                       [0x7f278e841310] bci=[-1,0,9] rc=1 vc=130 vn=- li=5 udi=- nc=0
------------------------------
------------------------------
 n47n     (  0)  treetop                                                                              [0x7f278e841360] bci=[-1,0,9] rc=0 vc=130 vn=- li=5 udi=- nc=1
 n43n     (  0)    icall  jitRetranslateCallerWithPreparation[#71  helper Method] [flags 0x400 0x0 ] (in GPR_0164) ()  [0x7f278e841220] bci=[-1,0,9] rc=0 vc=130 vn=- li=5 udi=33600 nc=3 flg=0x20
 n44n     (  0)      iconst 0x80000 (in GPR_0163) (X!=0 X>=0 )                                        [0x7f278e841270] bci=[-1,0,9] rc=0 vc=130 vn=- li=5 udi=32976 nc=0 flg=0x104
 n45n     (  0)      loadaddr  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ] (in GPR_0162)  [0x7f278e8412c0] bci=[-1,0,9] rc=0 vc=130 vn=- li=5 udi=32704 nc=0
 n46n     (  0)      loadaddr  <J9Method>[#332  Static] [flags 0x8000307 0x40 ] (in GPR_0161)         [0x7f278e841310] bci=[-1,0,9] rc=0 vc=130 vn=- li=5 udi=32288 nc=0
------------------------------

 [0x7f278e987ea0]	lea	GPR_0161, qword ptr [$0x0000000000229ed8]		# LEA8RegMem, SymRef  <J9Method>[#332  Static] [flags 0x8000307 0x40 ]
 [0x7f278e988040]	lea	GPR_0162, qword ptr [$0x0000000000000000]		# LEA8RegMem, SymRef  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ]
 [0x7f278e988150]	mov	GPR_0163, 0x00080000	# MOV4RegImm4
 [0x7f278e9883c0]	Label L0080:			# label	# (Start of internal control flow)
	 PRE: [GPR_0161 : eax] [GPR_0162 : esi] [GPR_0163 : edx]
 [0x7f278e9882a0]	call	jitRetranslateCallerWithPreparation# CALLImm4 (00007F27AF4289E0)# CALLImm4
 [0x7f278e9886c0]	assocreg                        # assocreg
	POST: None
 [0x7f278e988460]	Label L0081:			# label	# (End of internal control flow)
	 PRE: [GPR_0161 : eax] [GPR_0162 : esi] [GPR_0163 : edx]
	POST: [GPR_0000 : ebp] [GPR_0164 : eax] [GPR_0162 : esi] [GPR_0163 : edx]

============================================================
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n51n     (  0)  goto --> block_2 BBStart at n1n                                                      [0x7f278e8414a0] bci=[-1,0,9] rc=0 vc=130 vn=- li=5 udi=- nc=0
------------------------------
------------------------------
 n51n     (  0)  goto --> block_2 BBStart at n1n                                                      [0x7f278e8414a0] bci=[-1,0,9] rc=0 vc=130 vn=- li=5 udi=- nc=0
------------------------------

 [0x7f278e988b60]	jmp	Label L0017			# JMP4

============================================================
	block_5 branches backwards, so free all symbols in the _variableSizeSymRefPendingFreeList
; Live regs: GPR=0 FPR=0 VRF=0 {}
------------------------------
 n38n     (  0)  BBEnd </block_5> (cold)                                                              [0x7f278e841090] bci=[-1,0,9] rc=0 vc=130 vn=- li=5 udi=- nc=0
------------------------------
------------------------------
 n38n     (  0)  BBEnd </block_5> (cold)                                                              [0x7f278e841090] bci=[-1,0,9] rc=0 vc=130 vn=- li=5 udi=- nc=0
------------------------------

 [0x7f278e988c90]	fence Relative [ 00007F278E8ACE74 ]	# fence BBEnd </block_5>
 [0x7f278e988ee0]	assocreg                        # assocreg
	POST: [GPR_0164 : eax] [GPR_0163 : edx] [GPR_0162 : esi]
 [0x7f278e988fc0]	Label L0082:			# label

============================================================
	instruction selection is complete so free all symbols in the _variableSizeSymRefPendingFreeList

<instructions
	title="Post Instruction Selection Instructions"
	method="BT.foo()V"
	hotness="warm">

                +--------------------------------------- instruction address
                |       +------------------------------------------ 
                |       |       +----------------------------------------- instruction
                |       |       |
                V       V       V
 [0x7f278e97a2d0]	Label L0018:			# label
 [0x7f278e97a450]	mov	GPR_0016, 0x0000000000229ed8	# MOV8RegImm64
 [0x7f278e97a7a0]	mov	qword ptr [GPR_0017+0x8], GPR_0018		# S8MemReg, SymRef [#390 +8]
	 PRE: [GPR_0018 : eax] [GPR_0017 : esp]
	POST: [GPR_0018 : eax] [GPR_0017 : esp]
 [0x7f278e97aa90]	assocreg                        # assocreg
	POST: None
 [0x7f278e97a830]	jmp	j2iTransition           # JMP4 (00007F27AF4363C0)# JMP4
	 PRE: [GPR_0016 : edi]
 [0x7f278e97ab10]	nop			# Alignment (boundary=8, margin=21)
 [0x7f278e97aba0]	jmp	Label L0018			# JMP4
 [0x7f278e97ac40]	.short	0xcccc		# DWImm2
 [0x7f278e97ad60]	call	__samplingRecompileMethod# CALLImm4 (00007F27AEE7EDB0)# CALLImm4
 [0x7f278e97ae00]	.quad	0x00007f278d0674d0		# DQImm64
 [0x7f278e97ae90]	.int	0x00000000		# DDImm4
 [0x7f278e97b1b0]	assocreg                        # assocreg
	POST: [GPR_0016 : edi]
 [0x7f278e97af70]	proc                            # proc
	POST: [GPR_0000 : ebp]
 [0x7f278e97b2f0]	Label L0032:			# label
========================================
 [0x7f278e97b390]	fence Relative [ 00007F278E8ACA90 ]	# fence BBStart <block_3> (frequency 10000)
 [0x7f278e97b6a0]	cmp	dword ptr [$0x00007f27b011acd8], 0x00000001	# CMP4MemImms, SymRef  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ]
 [0x7f278e97b730]	je	Label L0016			# JE4
 [0x7f278e97b970]	fence Relative [ 00007F278E8ACA94 ]	# fence BBEnd </block_3>
 [0x7f278e97bbc0]	assocreg                        # assocreg
	POST: None
 [0x7f278e97bca0]	Label L0033:			# label
 [0x7f278e97be80]	Label L0017:			# label
========================================
 [0x7f278e97bf20]	fence Relative [ 00007F278E88C0E0 ]	# fence BBStart <block_2> (frequency 8001)
 [0x7f278e97c430]	nop			# Avoid boundary @8 [0x0:8]
 [0x7f278e97c3a0]	lea	GPR_0049, dword ptr [$0x0000000000000000]		# LEA4RegMem, SymRef  unknown class object[#392  unresolved Static] [flags 0x18307 0x0 ]
 [0x7f278e97dee0]	mov	GPR_0068, GPR_0049		# MOV8RegReg
 [0x7f278e97df70]	mov	GPR_0067, GPR_0000		# MOV8RegReg
 [0x7f278e97e780]	assocreg                        # assocreg
	POST: None
 [0x7f278e97e520]	call	jitNewObject            # CALLImm4 (00007F27AF410DC0)# CALLImm4
	 PRE: [GPR_0064 : eax] [GPR_0065 : ecx] [GPR_0066 : edx] [GPR_0067 : edi] [GPR_0068 : esi] [GPR_0069 : r8d] [GPR_0070 : r9d] [GPR_0071 : r10d] [GPR_0072 : r11d] [FPR_0073 : xmm0] [FPR_0074 : xmm1] [FPR_0075 : xmm2] [FPR_0076 : xmm3] [FPR_0077 : xmm4] [FPR_0078 : xmm5] [FPR_0079 : xmm6] [FPR_0080 : xmm7] [FPR_0081 : xmm8] [FPR_0082 : xmm9] [FPR_0083 : xmm10] [FPR_0084 : xmm11] [FPR_0085 : xmm12] [FPR_0086 : xmm13] [FPR_0087 : xmm14] [FPR_0088 : xmm15] [GPR_0000 : ebp]
	POST: [GPR_0064 : eax] [GPR_0065 : ecx] [GPR_0066 : edx] [GPR_0067 : edi] [GPR_0068 : esi] [GPR_0069 : r8d] [GPR_0070 : r9d] [GPR_0071 : r10d] [GPR_0072 : r11d] [FPR_0073 : xmm0] [FPR_0074 : xmm1] [FPR_0075 : xmm2] [FPR_0076 : xmm3] [FPR_0077 : xmm4] [FPR_0078 : xmm5] [FPR_0079 : xmm6] [FPR_0080 : xmm7] [FPR_0081 : xmm8] [FPR_0082 : xmm9] [FPR_0083 : xmm10] [FPR_0084 : xmm11] [FPR_0085 : xmm12] [FPR_0086 : xmm13] [FPR_0087 : xmm14] [FPR_0088 : xmm15] [GPR_0000 : ebp]
 [0x7f278e97eac0]	mov	&GPR_0089, GPR_0064		# MOV8RegReg
 [0x7f278e97f910]	mov	&GPR_0090, &GPR_0089		# MOV8RegReg
 [0x7f278e97fa20]	xor	GPR_0091, GPR_0091		# XOR4RegReg
 [0x7f278e97fb30]	xor	GPR_0092, GPR_0092		# XOR4RegReg
 [0x7f278e97fc40]	xor	GPR_0093, GPR_0093		# XOR4RegReg
 [0x7f278e97fd60]	mov	qword ptr [rsp], 0x00000000	# S8MemImm4
 [0x7f278e9806e0]	Label L0064:			# label	# (Start of internal control flow)
	 PRE: [&GPR_0090 : eax] [GPR_0091 : esi] [GPR_0092 : edx] [GPR_0093 : ecx]
 [0x7f278e980040]	nop			# Avoid boundary @8 [0x0:8]
 [0x7f278e97ffa0]	call	Snippet Label L0066     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7f278e9809e0]	assocreg                        # assocreg
	POST: [GPR_0064 : eax] [GPR_0065 : ecx] [GPR_0066 : edx] [GPR_0067 : edi] [GPR_0068 : esi] [GPR_0069 : r8d] [GPR_0070 : r9d] [GPR_0071 : r10d] [GPR_0072 : r11d]
 [0x7f278e980780]	Label L0065:			# label	# (End of internal control flow)
	 PRE: [&GPR_0090 : eax] [GPR_0091 : esi] [GPR_0092 : edx] [GPR_0093 : ecx]
	POST: [D_GPR_0094 : eax] [D_GPR_0095 : ecx] [D_GPR_0096 : edx] [D_GPR_0097 : edi] [D_GPR_0098 : esi] [D_GPR_0099 : r8d] [D_GPR_0100 : r10d] [D_GPR_0101 : r11d] [D_GPR_0102 : r12d] [D_GPR_0103 : r13d] [D_GPR_0104 : r14d] [D_GPR_0105 : r15d] [GPR_0000 : ebp]
 [0x7f278e981400]	nop			# Avoid boundary @8 [0x0:8]
 [0x7f278e981370]	mov	&GPR_0107, qword ptr [$0x0000000000000000]		# L8RegMem, SymRef  java/lang/System.out Ljava/io/PrintStream;[#395  unresolved volatile Static] [flags 0x2307 0x0 ]
 [0x7f278e981ee0]	mov	&GPR_0108, &GPR_0089		# MOV8RegReg
 [0x7f278e982e60]	Label L0068:			# label	# (Start of internal control flow)
	 PRE: [&GPR_0108 : eax]
 [0x7f278e982220]	mov	GPR_0110, dword ptr [&GPR_0089]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7f278e9822b0]	and	GPR_0110, 0xffffffffffffff00	# AND8RegImm4
 [0x7f278e9823d0]	call	dword ptr [GPR_0110-0x38]		# CALLMem, SymRef [#397 -56]
 [0x7f278e983160]	assocreg                        # assocreg
	POST: [D_GPR_0094 : eax] [&GPR_0089 : ebx] [D_GPR_0095 : ecx] [D_GPR_0096 : edx] [D_GPR_0097 : edi] [D_GPR_0098 : esi] [D_GPR_0099 : r8d] [D_GPR_0100 : r10d] [D_GPR_0101 : r11d] [D_GPR_0102 : r12d] [D_GPR_0103 : r13d] [D_GPR_0104 : r14d] [D_GPR_0105 : r15d]
 [0x7f278e982f00]	Label L0069:			# label	# (End of internal control flow)
	 PRE: [&GPR_0108 : eax]
	POST: [D_GPR_0111 : ecx] [D_GPR_0112 : edx] [D_GPR_0113 : edi] [D_GPR_0114 : esi] [D_GPR_0115 : r8d] [D_GPR_0116 : r10d] [D_GPR_0117 : r11d] [D_GPR_0118 : r12d] [D_GPR_0119 : r13d] [D_GPR_0120 : r14d] [D_GPR_0121 : r15d] [GPR_0000 : ebp] [&GPR_0122 : eax]
 [0x7f278e983ef0]	mov	&GPR_0123, &GPR_0107		# MOV8RegReg
 [0x7f278e984110]	mov	GPR_0125, dword ptr [&GPR_0107]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7f278e9841a0]	and	GPR_0125, 0xffffffffffffff00	# AND8RegImm4
 [0x7f278e984e50]	Label L0071:			# label	# (Start of internal control flow)
	 PRE: [&GPR_0123 : eax] [&GPR_0122 : esi]
 [0x7f278e984560]	nop			# Avoid boundary @8 [0x0:8]
 [0x7f278e9844c0]	mov	GPR_0126, 0x0000000000000000	# MOV8RegImm64
 [0x7f278e984600]	cmp	GPR_0126, GPR_0125		# CMP8RegReg
 [0x7f278e984690]	jne	Snippet Label L0074		# JNE4	# (VPic Data)
 [0x7f278e984730]	call	populateVPicSlotCall    # CALLImm4 (00007F27AEE275C0)# CALLImm4
 [0x7f278e985150]	assocreg                        # assocreg
	POST: [&GPR_0122 : eax] [&GPR_0107 : ebx] [D_GPR_0111 : ecx] [D_GPR_0112 : edx] [D_GPR_0113 : edi] [D_GPR_0114 : esi] [D_GPR_0115 : r8d] [D_GPR_0116 : r10d] [D_GPR_0117 : r11d] [D_GPR_0118 : r12d] [D_GPR_0119 : r13d] [D_GPR_0120 : r14d] [D_GPR_0121 : r15d]
 [0x7f278e984ef0]	Label L0072:			# label	# (End of internal control flow)
	 PRE: [&GPR_0123 : eax] [&GPR_0122 : esi]
	POST: [D_GPR_0127 : eax] [D_GPR_0128 : ecx] [D_GPR_0129 : edx] [D_GPR_0130 : edi] [D_GPR_0131 : esi] [D_GPR_0132 : r8d] [D_GPR_0133 : r10d] [D_GPR_0134 : r11d] [D_GPR_0135 : r12d] [D_GPR_0136 : r13d] [D_GPR_0137 : r14d] [D_GPR_0138 : r15d] [GPR_0000 : ebp]
 [0x7f278e9857a0]	ret                             # RET
 [0x7f278e9858b0]	fence Relative [ 00007F278E88C0E4 ]	# fence BBEnd </block_2>
 [0x7f278e985b00]	assocreg                        # assocreg
	POST: [D_GPR_0127 : eax] [D_GPR_0128 : ecx] [D_GPR_0129 : edx] [D_GPR_0130 : edi] [D_GPR_0131 : esi] [D_GPR_0132 : r8d] [D_GPR_0133 : r10d] [D_GPR_0134 : r11d] [D_GPR_0135 : r12d] [D_GPR_0136 : r13d] [D_GPR_0137 : r14d] [D_GPR_0138 : r15d]
 [0x7f278e985be0]	Label L0075:			# label
 [0x7f278e985dc0]	Label L0016:			# label
========================================
 [0x7f278e985e60]	fence Relative [ 00007F278E8ACC70 ]	# fence BBStart <block_4> (frequency 0) (cold)
 [0x7f278e986230]	mov	GPR_0145, dword ptr [$0x00007f278d0674d0]		# L4RegMem, SymRef  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]
 [0x7f278e9862c0]	sub	GPR_0145, 0x00000001	# SUB4RegImms
 [0x7f278e986460]	mov	dword ptr [$0x00007f278d0674d0], GPR_0145		# S4MemReg, SymRef  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]
 [0x7f278e986780]	cmp	GPR_0145, 0x00000000	# CMP4RegImms
 [0x7f278e986810]	jg	Label L0017			# JG4
 [0x7f278e9869a0]	fence Relative [ 00007F278E8ACC74 ]	# fence BBEnd </block_4>
........................................
 [0x7f278e986ac0]	fence Relative [ 00007F278E8ACE70 ]	# fence BBStart <block_5> (frequency 0) (extension of previous block) (cold)
 [0x7f278e986d50]	mov	dword ptr [$0x00007f278d0674d0], 0x7fffffff	# S4MemImm4, SymRef  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]
 [0x7f278e986ff0]	mov	byte ptr [$0x0000000000000000], 0x02	# S1MemImm1, SymRef  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]
 [0x7f278e987ea0]	lea	GPR_0161, qword ptr [$0x0000000000229ed8]		# LEA8RegMem, SymRef  <J9Method>[#332  Static] [flags 0x8000307 0x40 ]
 [0x7f278e988040]	lea	GPR_0162, qword ptr [$0x0000000000000000]		# LEA8RegMem, SymRef  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ]
 [0x7f278e988150]	mov	GPR_0163, 0x00080000	# MOV4RegImm4
 [0x7f278e9883c0]	Label L0080:			# label	# (Start of internal control flow)
	 PRE: [GPR_0161 : eax] [GPR_0162 : esi] [GPR_0163 : edx]
 [0x7f278e9882a0]	call	jitRetranslateCallerWithPreparation# CALLImm4 (00007F27AF4289E0)# CALLImm4
 [0x7f278e9886c0]	assocreg                        # assocreg
	POST: None
 [0x7f278e988460]	Label L0081:			# label	# (End of internal control flow)
	 PRE: [GPR_0161 : eax] [GPR_0162 : esi] [GPR_0163 : edx]
	POST: [GPR_0000 : ebp] [GPR_0164 : eax] [GPR_0162 : esi] [GPR_0163 : edx]
 [0x7f278e988b60]	jmp	Label L0017			# JMP4
 [0x7f278e988c90]	fence Relative [ 00007F278E8ACE74 ]	# fence BBEnd </block_5>
 [0x7f278e988ee0]	assocreg                        # assocreg
	POST: [GPR_0164 : eax] [GPR_0163 : edx] [GPR_0162 : esi]
 [0x7f278e988fc0]	Label L0082:			# label
</instructions>
totalSlotsInMap is 0, numLocalObjectPaddingSlots is 0

<instructions
	title="Post Register Assignment Instructions"
	method="BT.foo()V"
	hotness="warm">

                +--------------------------------------- instruction address
                |       +------------------------------------------ 
                |       |       +----------------------------------------- instruction
                |       |       |
                V       V       V
 [0x7f278e97a2d0]	Label L0018:			# label
 [0x7f278e97a450]	mov	rdi, 0x0000000000229ed8	# MOV8RegImm64
 [0x7f278e97a7a0]	mov	qword ptr [rsp+0x8], rax		# S8MemReg, SymRef [#390 +8]
 [0x7f278e97aa90]	assocreg                        # assocreg
 [0x7f278e97a830]	jmp	j2iTransition           # JMP4 (00007F27AF4363C0)# JMP4
 [0x7f278e97ab10]	nop			# Alignment (boundary=8, margin=21)
 [0x7f278e97aba0]	jmp	Label L0018			# JMP4
 [0x7f278e97ac40]	.short	0xcccc		# DWImm2
 [0x7f278e97ad60]	call	__samplingRecompileMethod# CALLImm4 (00007F27AEE7EDB0)# CALLImm4
 [0x7f278e97ae00]	.quad	0x00007f278d0674d0		# DQImm64
 [0x7f278e97ae90]	.int	0x00000000		# DDImm4
 [0x7f278e97b1b0]	assocreg                        # assocreg
 [0x7f278e97af70]	proc                            # proc
 [0x7f278e97b2f0]	Label L0032:			# label
========================================
 [0x7f278e97b390]	fence Relative [ 00007F278E8ACA90 ]	# fence BBStart <block_3> (frequency 10000)
 [0x7f278e97b6a0]	cmp	dword ptr [$0x00007f27b011acd8], 0x00000001	# CMP4MemImms, SymRef  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ]
 [0x7f278e97b730]	je	Label L0016			# JE4
 [0x7f278e97b970]	fence Relative [ 00007F278E8ACA94 ]	# fence BBEnd </block_3>
 [0x7f278e97bbc0]	assocreg                        # assocreg
 [0x7f278e97bca0]	Label L0033:			# label
 [0x7f278e97be80]	Label L0017:			# label
========================================
 [0x7f278e97bf20]	fence Relative [ 00007F278E88C0E0 ]	# fence BBStart <block_2> (frequency 8001)
 [0x7f278e97c430]	nop			# Avoid boundary @8 [0x0:8]
 [0x7f278e97c3a0]	lea	esi, dword ptr [$0x0000000000000000]		# LEA4RegMem, SymRef  unknown class object[#392  unresolved Static] [flags 0x18307 0x0 ]
 [0x7f278e97df70]	mov	rdi, rbp		# MOV8RegReg
 [0x7f278e97e780]	assocreg                        # assocreg
 [0x7f278e97e520]	call	jitNewObject            # CALLImm4 (00007F27AF410DC0)# CALLImm4
 [0x7f278e98a810]	mov	rbx, rax		# MOV8RegReg
 [0x7f278e97f910]	mov	rax, rbx		# MOV8RegReg
 [0x7f278e97fa20]	xor	esi, esi		# XOR4RegReg
 [0x7f278e97fb30]	xor	edx, edx		# XOR4RegReg
 [0x7f278e97fc40]	xor	ecx, ecx		# XOR4RegReg
 [0x7f278e97fd60]	mov	qword ptr [rsp], 0x00000000	# S8MemImm4
 [0x7f278e9806e0]	Label L0064:			# label	# (Start of internal control flow)
 [0x7f278e980040]	nop			# Avoid boundary @8 [0x0:8]
 [0x7f278e97ffa0]	call	Snippet Label L0066     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7f278e9809e0]	assocreg                        # assocreg
 [0x7f278e980780]	Label L0065:			# label	# (End of internal control flow)
 [0x7f278e98a740]	mov	r15, rbx		# MOV8RegReg
 [0x7f278e981400]	nop			# Avoid boundary @8 [0x0:8]
 [0x7f278e981370]	mov	rbx, qword ptr [$0x0000000000000000]		# L8RegMem, SymRef  java/lang/System.out Ljava/io/PrintStream;[#395  unresolved volatile Static] [flags 0x2307 0x0 ]
 [0x7f278e981ee0]	mov	rax, r15		# MOV8RegReg
 [0x7f278e982e60]	Label L0068:			# label	# (Start of internal control flow)
 [0x7f278e982220]	mov	ecx, dword ptr [r15]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7f278e9822b0]	and	rcx, 0xffffffffffffff00	# AND8RegImm4
 [0x7f278e9823d0]	call	dword ptr [rcx-0x38]		# CALLMem, SymRef [#397 -56]
 [0x7f278e983160]	assocreg                        # assocreg
 [0x7f278e982f00]	Label L0069:			# label	# (End of internal control flow)
 [0x7f278e98a630]	mov	rsi, rax		# MOV8RegReg
 [0x7f278e983ef0]	mov	rax, rbx		# MOV8RegReg
 [0x7f278e984110]	mov	edx, dword ptr [rbx]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7f278e9841a0]	and	rdx, 0xffffffffffffff00	# AND8RegImm4
 [0x7f278e984e50]	Label L0071:			# label	# (Start of internal control flow)
 [0x7f278e984560]	nop			# Avoid boundary @8 [0x0:8]
 [0x7f278e9844c0]	mov	rcx, 0x0000000000000000	# MOV8RegImm64
 [0x7f278e984600]	cmp	rcx, rdx		# CMP8RegReg
 [0x7f278e984690]	jne	Snippet Label L0074		# JNE4	# (VPic Data)
 [0x7f278e984730]	call	populateVPicSlotCall    # CALLImm4 (00007F27AEE275C0)# CALLImm4
 [0x7f278e985150]	assocreg                        # assocreg
 [0x7f278e984ef0]	Label L0072:			# label	# (End of internal control flow)
 [0x7f278e9857a0]	ret                             # RET
 [0x7f278e9858b0]	fence Relative [ 00007F278E88C0E4 ]	# fence BBEnd </block_2>
 [0x7f278e985b00]	assocreg                        # assocreg
 [0x7f278e985be0]	Label L0075:			# label
 [0x7f278e985dc0]	Label L0016:			# label
========================================
 [0x7f278e985e60]	fence Relative [ 00007F278E8ACC70 ]	# fence BBStart <block_4> (frequency 0) (cold)
 [0x7f278e986230]	mov	eax, dword ptr [$0x00007f278d0674d0]		# L4RegMem, SymRef  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]
 [0x7f278e9862c0]	sub	eax, 0x00000001	# SUB4RegImms
 [0x7f278e986460]	mov	dword ptr [$0x00007f278d0674d0], eax		# S4MemReg, SymRef  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]
 [0x7f278e986780]	cmp	eax, 0x00000000	# CMP4RegImms
 [0x7f278e986810]	jg	Label L0017			# JG4
 [0x7f278e9869a0]	fence Relative [ 00007F278E8ACC74 ]	# fence BBEnd </block_4>
........................................
 [0x7f278e986ac0]	fence Relative [ 00007F278E8ACE70 ]	# fence BBStart <block_5> (frequency 0) (extension of previous block) (cold)
 [0x7f278e986d50]	mov	dword ptr [$0x00007f278d0674d0], 0x7fffffff	# S4MemImm4, SymRef  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]
 [0x7f278e986ff0]	mov	byte ptr [$0x0000000000000000], 0x02	# S1MemImm1, SymRef  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]
 [0x7f278e987ea0]	lea	rax, qword ptr [$0x0000000000229ed8]		# LEA8RegMem, SymRef  <J9Method>[#332  Static] [flags 0x8000307 0x40 ]
 [0x7f278e988040]	lea	rsi, qword ptr [$0x0000000000000000]		# LEA8RegMem, SymRef  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ]
 [0x7f278e988150]	mov	edx, 0x00080000	# MOV4RegImm4
 [0x7f278e9883c0]	Label L0080:			# label	# (Start of internal control flow)
 [0x7f278e9882a0]	call	jitRetranslateCallerWithPreparation# CALLImm4 (00007F27AF4289E0)# CALLImm4
 [0x7f278e9886c0]	assocreg                        # assocreg
 [0x7f278e988460]	Label L0081:			# label	# (End of internal control flow)
 [0x7f278e988b60]	jmp	Label L0017			# JMP4
 [0x7f278e988c90]	fence Relative [ 00007F278E8ACE74 ]	# fence BBEnd </block_5>
 [0x7f278e988ee0]	assocreg                        # assocreg
 [0x7f278e988fc0]	Label L0082:			# label
</instructions>

<instructions
	title="Post Stack Map"
	method="BT.foo()V"
	hotness="warm">

 [0x7f278e97a2d0]	Label L0018:			# label
 [0x7f278e97a450]	mov	rdi, 0x0000000000229ed8	# MOV8RegImm64
 [0x7f278e97a7a0]	mov	qword ptr [rsp+0x8], rax		# S8MemReg, SymRef [#390 +8]
 [0x7f278e97aa90]	assocreg                        # assocreg
 [0x7f278e97a830]	jmp	j2iTransition           # JMP4 (00007F27AF4363C0)# JMP4
 [0x7f278e97ab10]	nop			# Alignment (boundary=8, margin=21)
 [0x7f278e97aba0]	jmp	Label L0018			# JMP4
 [0x7f278e97ac40]	.short	0xcccc		# DWImm2
 [0x7f278e97ad60]	call	__samplingRecompileMethod# CALLImm4 (00007F27AEE7EDB0)# CALLImm4
 [0x7f278e97ae00]	.quad	0x00007f278d0674d0		# DQImm64
 [0x7f278e97ae90]	.int	0x00000000		# DDImm4
 [0x7f278e97b1b0]	assocreg                        # assocreg
 [0x7f278e97af70]	proc                            # proc
 [0x7f278e97b2f0]	Label L0032:			# label
========================================
 [0x7f278e97b390]	fence Relative [ 00007F278E8ACA90 ]	# fence BBStart <block_3> (frequency 10000)
 [0x7f278e97b6a0]	cmp	dword ptr [$0x00007f27b011acd8], 0x00000001	# CMP4MemImms, SymRef  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ]
 [0x7f278e97b730]	je	Label L0016			# JE4
 [0x7f278e97b970]	fence Relative [ 00007F278E8ACA94 ]	# fence BBEnd </block_3>
 [0x7f278e97bbc0]	assocreg                        # assocreg
 [0x7f278e97bca0]	Label L0033:			# label
 [0x7f278e97be80]	Label L0017:			# label
========================================
 [0x7f278e97bf20]	fence Relative [ 00007F278E88C0E0 ]	# fence BBStart <block_2> (frequency 8001)
 [0x7f278e97c430]	nop			# Avoid boundary @8 [0x0:8]
 [0x7f278e97c3a0]	lea	esi, dword ptr [$0x0000000000000000]		# LEA4RegMem, SymRef  unknown class object[#392  unresolved Static] [flags 0x18307 0x0 ]
 [0x7f278e97df70]	mov	rdi, rbp		# MOV8RegReg
 [0x7f278e97e780]	assocreg                        # assocreg
 [0x7f278e97e520]	call	jitNewObject            # CALLImm4 (00007F27AF410DC0)# CALLImm4
 [0x7f278e98a810]	mov	rbx, rax		# MOV8RegReg
 [0x7f278e97f910]	mov	rax, rbx		# MOV8RegReg
 [0x7f278e97fa20]	xor	esi, esi		# XOR4RegReg
 [0x7f278e97fb30]	xor	edx, edx		# XOR4RegReg
 [0x7f278e97fc40]	xor	ecx, ecx		# XOR4RegReg
 [0x7f278e97fd60]	mov	qword ptr [rsp], 0x00000000	# S8MemImm4
 [0x7f278e9806e0]	Label L0064:			# label	# (Start of internal control flow)
 [0x7f278e980040]	nop			# Avoid boundary @8 [0x0:8]
 [0x7f278e97ffa0]	call	Snippet Label L0066     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7f278e9809e0]	assocreg                        # assocreg
 [0x7f278e980780]	Label L0065:			# label	# (End of internal control flow)
 [0x7f278e98a740]	mov	r15, rbx		# MOV8RegReg
 [0x7f278e981400]	nop			# Avoid boundary @8 [0x0:8]
 [0x7f278e981370]	mov	rbx, qword ptr [$0x0000000000000000]		# L8RegMem, SymRef  java/lang/System.out Ljava/io/PrintStream;[#395  unresolved volatile Static] [flags 0x2307 0x0 ]
 [0x7f278e981ee0]	mov	rax, r15		# MOV8RegReg
 [0x7f278e982e60]	Label L0068:			# label	# (Start of internal control flow)
 [0x7f278e982220]	mov	ecx, dword ptr [r15]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7f278e9822b0]	and	rcx, 0xffffffffffffff00	# AND8RegImm4
 [0x7f278e9823d0]	call	dword ptr [rcx-0x38]		# CALLMem, SymRef [#397 -56]
 [0x7f278e983160]	assocreg                        # assocreg
 [0x7f278e982f00]	Label L0069:			# label	# (End of internal control flow)
 [0x7f278e98a630]	mov	rsi, rax		# MOV8RegReg
 [0x7f278e983ef0]	mov	rax, rbx		# MOV8RegReg
 [0x7f278e984110]	mov	edx, dword ptr [rbx]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7f278e9841a0]	and	rdx, 0xffffffffffffff00	# AND8RegImm4
 [0x7f278e984e50]	Label L0071:			# label	# (Start of internal control flow)
 [0x7f278e984560]	nop			# Avoid boundary @8 [0x0:8]
 [0x7f278e9844c0]	mov	rcx, 0x0000000000000000	# MOV8RegImm64
 [0x7f278e984600]	cmp	rcx, rdx		# CMP8RegReg
 [0x7f278e984690]	jne	Snippet Label L0074		# JNE4	# (VPic Data)
 [0x7f278e984730]	call	populateVPicSlotCall    # CALLImm4 (00007F27AEE275C0)# CALLImm4
 [0x7f278e985150]	assocreg                        # assocreg
 [0x7f278e984ef0]	Label L0072:			# label	# (End of internal control flow)
 [0x7f278e9857a0]	ret                             # RET
 [0x7f278e9858b0]	fence Relative [ 00007F278E88C0E4 ]	# fence BBEnd </block_2>
 [0x7f278e985b00]	assocreg                        # assocreg
 [0x7f278e985be0]	Label L0075:			# label
 [0x7f278e985dc0]	Label L0016:			# label
========================================
 [0x7f278e985e60]	fence Relative [ 00007F278E8ACC70 ]	# fence BBStart <block_4> (frequency 0) (cold)
 [0x7f278e986230]	mov	eax, dword ptr [$0x00007f278d0674d0]		# L4RegMem, SymRef  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]
 [0x7f278e9862c0]	sub	eax, 0x00000001	# SUB4RegImms
 [0x7f278e986460]	mov	dword ptr [$0x00007f278d0674d0], eax		# S4MemReg, SymRef  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]
 [0x7f278e986780]	cmp	eax, 0x00000000	# CMP4RegImms
 [0x7f278e986810]	jg	Label L0017			# JG4
 [0x7f278e9869a0]	fence Relative [ 00007F278E8ACC74 ]	# fence BBEnd </block_4>
........................................
 [0x7f278e986ac0]	fence Relative [ 00007F278E8ACE70 ]	# fence BBStart <block_5> (frequency 0) (extension of previous block) (cold)
 [0x7f278e986d50]	mov	dword ptr [$0x00007f278d0674d0], 0x7fffffff	# S4MemImm4, SymRef  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]
 [0x7f278e986ff0]	mov	byte ptr [$0x0000000000000000], 0x02	# S1MemImm1, SymRef  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]
 [0x7f278e987ea0]	lea	rax, qword ptr [$0x0000000000229ed8]		# LEA8RegMem, SymRef  <J9Method>[#332  Static] [flags 0x8000307 0x40 ]
 [0x7f278e988040]	lea	rsi, qword ptr [$0x0000000000000000]		# LEA8RegMem, SymRef  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ]
 [0x7f278e988150]	mov	edx, 0x00080000	# MOV4RegImm4
 [0x7f278e9883c0]	Label L0080:			# label	# (Start of internal control flow)
 [0x7f278e9882a0]	call	jitRetranslateCallerWithPreparation# CALLImm4 (00007F27AF4289E0)# CALLImm4
 [0x7f278e9886c0]	assocreg                        # assocreg
 [0x7f278e988460]	Label L0081:			# label	# (End of internal control flow)
 [0x7f278e988b60]	jmp	Label L0017			# JMP4
 [0x7f278e988c90]	fence Relative [ 00007F278E8ACE74 ]	# fence BBEnd </block_5>
 [0x7f278e988ee0]	assocreg                        # assocreg
 [0x7f278e988fc0]	Label L0082:			# label
</instructions>

<instructions
	title="Post Instruction Expansion Instructions"
	method="BT.foo()V"
	hotness="warm">

                 +--------------------------------------- instruction address
                 |        +----------------------------------------- instruction offset from start of method
                 |        |                   +------------------------------------------ corresponding TR::Instruction instance
                 |        |                   |  +-------------------------------------------------- code bytes
                 |        |                   |  |                          +-------------------------------------- opcode and operands
                 |        |                   |  |                          |				+----------- additional information
                 |        |                   |  |                          |				|
                 V        V                   V  V                          V				V
 [0x7f278e97a2d0]	Label L0018:			# label
 [0x7f278e97a450]	mov	rdi, 0x0000000000229ed8	# MOV8RegImm64
 [0x7f278e97a7a0]	mov	qword ptr [rsp+0x8], rax		# S8MemReg, SymRef [#390 +8]
 [0x7f278e97aa90]	assocreg                        # assocreg
 [0x7f278e97a830]	jmp	j2iTransition           # JMP4 (00007F27AF4363C0)# JMP4
 [0x7f278e97ab10]	nop			# Alignment (boundary=8, margin=21)
 [0x7f278e97aba0]	jmp	Label L0018			# JMP4
 [0x7f278e97ac40]	.short	0xcccc		# DWImm2
 [0x7f278e97ad60]	call	__samplingRecompileMethod# CALLImm4 (00007F27AEE7EDB0)# CALLImm4
 [0x7f278e97ae00]	.quad	0x00007f278d0674d0		# DQImm64
 [0x7f278e97ae90]	.int	0x00000000		# DDImm4
 [0x7f278e97b1b0]	assocreg                        # assocreg
 [0x7f278e97af70]	proc                            # proc
 [0x7f278e97b2f0]	Label L0032:			# label
========================================
 [0x7f278e97b390]	fence Relative [ 00007F278E8ACA90 ]	# fence BBStart <block_3> (frequency 10000)
 [0x7f278e97b6a0]	cmp	dword ptr [$0x00007f27b011acd8], 0x00000001	# CMP4MemImms, SymRef  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ]
 [0x7f278e97b730]	je	Label L0016			# JE4
 [0x7f278e97b970]	fence Relative [ 00007F278E8ACA94 ]	# fence BBEnd </block_3>
 [0x7f278e97bbc0]	assocreg                        # assocreg
 [0x7f278e97bca0]	Label L0033:			# label
 [0x7f278e97be80]	Label L0017:			# label
========================================
 [0x7f278e97bf20]	fence Relative [ 00007F278E88C0E0 ]	# fence BBStart <block_2> (frequency 8001)
 [0x7f278e97c430]	nop			# Avoid boundary @8 [0x0:8]
 [0x7f278e97c3a0]	lea	esi, dword ptr [$0x0000000000000000]		# LEA4RegMem, SymRef  unknown class object[#392  unresolved Static] [flags 0x18307 0x0 ]
 [0x7f278e97df70]	mov	rdi, rbp		# MOV8RegReg
 [0x7f278e97e780]	assocreg                        # assocreg
 [0x7f278e97e520]	call	jitNewObject            # CALLImm4 (00007F27AF410DC0)# CALLImm4
 [0x7f278e98a810]	mov	rbx, rax		# MOV8RegReg
 [0x7f278e97f910]	mov	rax, rbx		# MOV8RegReg
 [0x7f278e97fa20]	xor	esi, esi		# XOR4RegReg
 [0x7f278e97fb30]	xor	edx, edx		# XOR4RegReg
 [0x7f278e97fc40]	xor	ecx, ecx		# XOR4RegReg
 [0x7f278e97fd60]	mov	qword ptr [rsp], 0x00000000	# S8MemImm4
 [0x7f278e9806e0]	Label L0064:			# label	# (Start of internal control flow)
 [0x7f278e980040]	nop			# Avoid boundary @8 [0x0:8]
 [0x7f278e97ffa0]	call	Snippet Label L0066     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7f278e9809e0]	assocreg                        # assocreg
 [0x7f278e980780]	Label L0065:			# label	# (End of internal control flow)
 [0x7f278e98a740]	mov	r15, rbx		# MOV8RegReg
 [0x7f278e981400]	nop			# Avoid boundary @8 [0x0:8]
 [0x7f278e981370]	mov	rbx, qword ptr [$0x0000000000000000]		# L8RegMem, SymRef  java/lang/System.out Ljava/io/PrintStream;[#395  unresolved volatile Static] [flags 0x2307 0x0 ]
 [0x7f278e981ee0]	mov	rax, r15		# MOV8RegReg
 [0x7f278e982e60]	Label L0068:			# label	# (Start of internal control flow)
 [0x7f278e982220]	mov	ecx, dword ptr [r15]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7f278e9822b0]	and	rcx, 0xffffffffffffff00	# AND8RegImm4
 [0x7f278e9823d0]	call	dword ptr [rcx-0x38]		# CALLMem, SymRef [#397 -56]
 [0x7f278e983160]	assocreg                        # assocreg
 [0x7f278e982f00]	Label L0069:			# label	# (End of internal control flow)
 [0x7f278e98a630]	mov	rsi, rax		# MOV8RegReg
 [0x7f278e983ef0]	mov	rax, rbx		# MOV8RegReg
 [0x7f278e984110]	mov	edx, dword ptr [rbx]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7f278e9841a0]	and	rdx, 0xffffffffffffff00	# AND8RegImm4
 [0x7f278e984e50]	Label L0071:			# label	# (Start of internal control flow)
 [0x7f278e984560]	nop			# Avoid boundary @8 [0x0:8]
 [0x7f278e9844c0]	mov	rcx, 0x0000000000000000	# MOV8RegImm64
 [0x7f278e984600]	cmp	rcx, rdx		# CMP8RegReg
 [0x7f278e984690]	jne	Snippet Label L0074		# JNE4	# (VPic Data)
 [0x7f278e984730]	call	populateVPicSlotCall    # CALLImm4 (00007F27AEE275C0)# CALLImm4
 [0x7f278e985150]	assocreg                        # assocreg
 [0x7f278e984ef0]	Label L0072:			# label	# (End of internal control flow)
 [0x7f278e9857a0]	ret                             # RET
 [0x7f278e9858b0]	fence Relative [ 00007F278E88C0E4 ]	# fence BBEnd </block_2>
 [0x7f278e985b00]	assocreg                        # assocreg
 [0x7f278e985be0]	Label L0075:			# label
 [0x7f278e985dc0]	Label L0016:			# label
========================================
 [0x7f278e985e60]	fence Relative [ 00007F278E8ACC70 ]	# fence BBStart <block_4> (frequency 0) (cold)
 [0x7f278e986230]	mov	eax, dword ptr [$0x00007f278d0674d0]		# L4RegMem, SymRef  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]
 [0x7f278e9862c0]	sub	eax, 0x00000001	# SUB4RegImms
 [0x7f278e986460]	mov	dword ptr [$0x00007f278d0674d0], eax		# S4MemReg, SymRef  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]
 [0x7f278e986780]	cmp	eax, 0x00000000	# CMP4RegImms
 [0x7f278e986810]	jg	Label L0017			# JG4
 [0x7f278e9869a0]	fence Relative [ 00007F278E8ACC74 ]	# fence BBEnd </block_4>
........................................
 [0x7f278e986ac0]	fence Relative [ 00007F278E8ACE70 ]	# fence BBStart <block_5> (frequency 0) (extension of previous block) (cold)
 [0x7f278e986d50]	mov	dword ptr [$0x00007f278d0674d0], 0x7fffffff	# S4MemImm4, SymRef  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]
 [0x7f278e986ff0]	mov	byte ptr [$0x0000000000000000], 0x02	# S1MemImm1, SymRef  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]
 [0x7f278e987ea0]	lea	rax, qword ptr [$0x0000000000229ed8]		# LEA8RegMem, SymRef  <J9Method>[#332  Static] [flags 0x8000307 0x40 ]
 [0x7f278e988040]	lea	rsi, qword ptr [$0x0000000000000000]		# LEA8RegMem, SymRef  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ]
 [0x7f278e988150]	mov	edx, 0x00080000	# MOV4RegImm4
 [0x7f278e9883c0]	Label L0080:			# label	# (Start of internal control flow)
 [0x7f278e9882a0]	call	jitRetranslateCallerWithPreparation# CALLImm4 (00007F27AF4289E0)# CALLImm4
 [0x7f278e9886c0]	assocreg                        # assocreg
 [0x7f278e988460]	Label L0081:			# label	# (End of internal control flow)
 [0x7f278e988b60]	jmp	Label L0017			# JMP4
 [0x7f278e988c90]	fence Relative [ 00007F278E8ACE74 ]	# fence BBEnd </block_5>
 [0x7f278e988ee0]	assocreg                        # assocreg
 [0x7f278e988fc0]	Label L0082:			# label
</instructions>
<proepilogue>
Stack size was 64, and is adjusted by +0 (alignment 16, return address width 8)

Frame size: S- locals=0 frame=56 peak=64

<instructions
	title="VFP Substitution">
 [0x7f278e97af70]	proc                            # proc
 [0x7f278e99e290]	vfpSave			# AdjustFramePtr
 [0x7f278e99e3b0]	cmp	rsp, qword ptr [rbp+0x50]		# CMP8RegMem, SymRef [#406 +80]
 [0x7f278e99e560]	Label L0096:			# label	# (Start of internal control flow)
 [0x7f278e99e600]	jbe	Outlined Label L0098			# JBE4
 [0x7f278e99e6a0]	Label L0097:			# label	# (End of internal control flow)
 [0x7f278e99eb10]	sub	rsp, 0x00000038	# SUB8RegImms
	# VFP=esp+56
 [0x7f278e99ec30]	mov	qword ptr [rsp+0x30], r9		# S8MemReg, SymRef [#407 +48]
 [0x7f278e99ed50]	mov	qword ptr [rsp+0x28], rbx		# S8MemReg, SymRef [#408 +40]
 [0x7f278e99ee70]	mov	qword ptr [rsp+0x40], rax		# S8MemReg, SymRef [#409 +64]
 [0x7f278e99e200]	vfpSave			# AdjustFramePtr
 [0x7f278e97b2f0]	Label L0032:			# label
========================================
 [0x7f278e97b390]	fence Relative [ 00007F278E8ACA90 ]	# fence BBStart <block_3> (frequency 10000)
 [0x7f278e97b6a0]	cmp	dword ptr [$0x00007f27b011acd8], 0x00000001	# CMP4MemImms, SymRef  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ]
 [0x7f278e97b730]	je	Label L0016			# JE4
 [0x7f278e97b970]	fence Relative [ 00007F278E8ACA94 ]	# fence BBEnd </block_3>
 [0x7f278e97bbc0]	assocreg                        # assocreg
 [0x7f278e97bca0]	Label L0033:			# label
 [0x7f278e97be80]	Label L0017:			# label
========================================
 [0x7f278e97bf20]	fence Relative [ 00007F278E88C0E0 ]	# fence BBStart <block_2> (frequency 8001)
 [0x7f278e97c430]	nop			# Avoid boundary @8 [0x0:8]
 [0x7f278e97c3a0]	lea	esi, dword ptr [$0x0000000000000000]		# LEA4RegMem, SymRef  unknown class object[#392  unresolved Static] [flags 0x18307 0x0 ]
 [0x7f278e97df70]	mov	rdi, rbp		# MOV8RegReg
 [0x7f278e97e780]	assocreg                        # assocreg
 [0x7f278e97e520]	call	jitNewObject            # CALLImm4 (00007F27AF410DC0)# CALLImm4
 [0x7f278e98a810]	mov	rbx, rax		# MOV8RegReg
 [0x7f278e97f910]	mov	rax, rbx		# MOV8RegReg
 [0x7f278e97fa20]	xor	esi, esi		# XOR4RegReg
 [0x7f278e97fb30]	xor	edx, edx		# XOR4RegReg
 [0x7f278e97fc40]	xor	ecx, ecx		# XOR4RegReg
 [0x7f278e97fd60]	mov	qword ptr [rsp], 0x00000000	# S8MemImm4
 [0x7f278e9806e0]	Label L0064:			# label	# (Start of internal control flow)
 [0x7f278e980040]	nop			# Avoid boundary @8 [0x0:8]
 [0x7f278e97ffa0]	call	Snippet Label L0066     # CALLImm4 (Call Snippet)# CALLImm4
 [0x7f278e9809e0]	assocreg                        # assocreg
 [0x7f278e980780]	Label L0065:			# label	# (End of internal control flow)
 [0x7f278e98a740]	mov	r15, rbx		# MOV8RegReg
 [0x7f278e981400]	nop			# Avoid boundary @8 [0x0:8]
 [0x7f278e981370]	mov	rbx, qword ptr [$0x0000000000000000]		# L8RegMem, SymRef  java/lang/System.out Ljava/io/PrintStream;[#395  unresolved volatile Static] [flags 0x2307 0x0 ]
 [0x7f278e981ee0]	mov	rax, r15		# MOV8RegReg
 [0x7f278e982e60]	Label L0068:			# label	# (Start of internal control flow)
 [0x7f278e982220]	mov	ecx, dword ptr [r15]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7f278e9822b0]	and	rcx, 0xffffffffffffff00	# AND8RegImm4
 [0x7f278e9823d0]	call	dword ptr [rcx-0x38]		# CALLMem, SymRef [#397 -56]
 [0x7f278e983160]	assocreg                        # assocreg
 [0x7f278e982f00]	Label L0069:			# label	# (End of internal control flow)
 [0x7f278e98a630]	mov	rsi, rax		# MOV8RegReg
 [0x7f278e983ef0]	mov	rax, rbx		# MOV8RegReg
 [0x7f278e984110]	mov	edx, dword ptr [rbx]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
 [0x7f278e9841a0]	and	rdx, 0xffffffffffffff00	# AND8RegImm4
 [0x7f278e984e50]	Label L0071:			# label	# (Start of internal control flow)
 [0x7f278e984560]	nop			# Avoid boundary @8 [0x0:8]
 [0x7f278e9844c0]	mov	rcx, 0x0000000000000000	# MOV8RegImm64
 [0x7f278e984600]	cmp	rcx, rdx		# CMP8RegReg
 [0x7f278e984690]	jne	Snippet Label L0074		# JNE4	# (VPic Data)
 [0x7f278e984730]	call	populateVPicSlotCall    # CALLImm4 (00007F27AEE275C0)# CALLImm4
 [0x7f278e985150]	assocreg                        # assocreg
 [0x7f278e984ef0]	Label L0072:			# label	# (End of internal control flow)
 [0x7f278e99fbf0]	mov	r9, qword ptr [rsp+0x30]		# L8RegMem, SymRef [#410 +48]
 [0x7f278e99fd10]	mov	rbx, qword ptr [rsp+0x28]		# L8RegMem, SymRef [#411 +40]
 [0x7f278e99fda0]	add	rsp, 0x00000038	# ADD8RegImms
	# VFP=esp+0
 [0x7f278e9857a0]	ret                             # RET
	# VFP=esp+56
 [0x7f278e9858b0]	fence Relative [ 00007F278E88C0E4 ]	# fence BBEnd </block_2>
 [0x7f278e985b00]	assocreg                        # assocreg
 [0x7f278e985be0]	Label L0075:			# label
 [0x7f278e985dc0]	Label L0016:			# label
========================================
 [0x7f278e985e60]	fence Relative [ 00007F278E8ACC70 ]	# fence BBStart <block_4> (frequency 0) (cold)
 [0x7f278e986230]	mov	eax, dword ptr [$0x00007f278d0674d0]		# L4RegMem, SymRef  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]
 [0x7f278e9862c0]	sub	eax, 0x00000001	# SUB4RegImms
 [0x7f278e986460]	mov	dword ptr [$0x00007f278d0674d0], eax		# S4MemReg, SymRef  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]
 [0x7f278e986780]	cmp	eax, 0x00000000	# CMP4RegImms
 [0x7f278e986810]	jg	Label L0017			# JG4
 [0x7f278e9869a0]	fence Relative [ 00007F278E8ACC74 ]	# fence BBEnd </block_4>
........................................
 [0x7f278e986ac0]	fence Relative [ 00007F278E8ACE70 ]	# fence BBStart <block_5> (frequency 0) (extension of previous block) (cold)
 [0x7f278e986d50]	mov	dword ptr [$0x00007f278d0674d0], 0x7fffffff	# S4MemImm4, SymRef  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]
 [0x7f278e986ff0]	mov	byte ptr [$0x0000000000000000], 0x02	# S1MemImm1, SymRef  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]
 [0x7f278e987ea0]	lea	rax, qword ptr [$0x0000000000229ed8]		# LEA8RegMem, SymRef  <J9Method>[#332  Static] [flags 0x8000307 0x40 ]
 [0x7f278e988040]	lea	rsi, qword ptr [$0x0000000000000000]		# LEA8RegMem, SymRef  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ]
 [0x7f278e988150]	mov	edx, 0x00080000	# MOV4RegImm4
 [0x7f278e9883c0]	Label L0080:			# label	# (Start of internal control flow)
 [0x7f278e9882a0]	call	jitRetranslateCallerWithPreparation# CALLImm4 (00007F27AF4289E0)# CALLImm4
 [0x7f278e9886c0]	assocreg                        # assocreg
 [0x7f278e988460]	Label L0081:			# label	# (End of internal control flow)
 [0x7f278e988b60]	jmp	Label L0017			# JMP4
 [0x7f278e988c90]	fence Relative [ 00007F278E8ACE74 ]	# fence BBEnd </block_5>
 [0x7f278e988ee0]	assocreg                        # assocreg
 [0x7f278e988fc0]	Label L0082:			# label
 [0x7f278e99e740]	vfpRestore [0x7f278e99e290]			# AdjustFramePtr
	# VFP=esp+0
 [0x7f278e99e7d0]	Outlined Label L0098:			# label
 [0x7f278e99e870]	mov	edi, 0x00000038	# MOV4RegImm4
 [0x7f278e99e990]	call	jitStackOverflow        # CALLImm4 (00007F27AF410AF0)# CALLImm4
 [0x7f278e99ea30]	jmp	Label L0097			# JMP4
</instructions>
</proepilogue>
<encode>
[    27] O^O OMIT HCR CLASS POINTER ASSUMPTION: class=0000000000000000, in code at 00007F278FC331D0
</encode>

<instructions
	title="Post Binary Instructions"
	method="BT.foo()V"
	hotness="warm">

                 +--------------------------------------- instruction address
                 |        +----------------------------------------- instruction offset from start of method
                 |        |                   +------------------------------------------ corresponding TR::Instruction instance
                 |        |                   |  +-------------------------------------------------- code bytes
                 |        |                   |  |                          +-------------------------------------- opcode and operands
                 |        |                   |  |                          |				+----------- additional information
                 |        |                   |  |                          |				|
                 V        V                   V  V                          V				V
0x7f278fc33170 ffffffd0 [0x7f278e97a2d0]                                    Label L0018:			# label
0x7f278fc33170 ffffffd0 [0x7f278e97a450] 48 bf d8 9e 22 00 00 00 00 00      mov	rdi, 0x0000000000229ed8	# MOV8RegImm64
0x7f278fc3317a ffffffda [0x7f278e97a7a0] 48 89 44 24 08                     mov	qword ptr [rsp+0x8], rax		# S8MemReg, SymRef [#390 +8]
0x7f278fc3317f ffffffdf [0x7f278e97aa90]                                    assocreg                        # assocreg
0x7f278fc3317f ffffffdf [0x7f278e97a830] e9 3c 32 80 1f                     jmp	j2iTransition           # JMP4 (00007F27AF4363C0)# JMP4
0x7f278fc33184 ffffffe4 [0x7f278e97ab10] 0f 1f 80 00 00 00 00               nop (7 bytes)		# Alignment (boundary=8, margin=21)
0x7f278fc3318b ffffffeb [0x7f278e97aba0] eb e3                              jmp	Label L0018			# JMP1
0x7f278fc3318d ffffffed [0x7f278e97ac40] cc cc                              .short	0xcccc		# DWImm2
0x7f278fc3318f ffffffef [0x7f278e97ad60] e8 1c bc 24 1f                     call	__samplingRecompileMethod# CALLImm4 (00007F27AEE7EDB0)# CALLImm4
0x7f278fc33194 fffffff4 [0x7f278e97ae00] d0 74 06 8d 27 7f 00 00            .quad	0x00007f278d0674d0		# DQImm64
0x7f278fc3319c fffffffc [0x7f278e97ae90] 10 00 05 00                        .int	0x00050010		# DDImm4
0x7f278fc331a0 00000000 [0x7f278e97b1b0]                                    assocreg                        # assocreg
0x7f278fc331a0 00000000 [0x7f278e99e0d0] 48 8b 44 24 08                     mov	rax, qword ptr [rsp+0x8]		# L8RegMem, SymRef [#405 +8]
0x7f278fc331a5 00000005 [0x7f278e99e160]                                    nop (0 bytes)		# Align patchable code @32 [0x0:2]
0x7f278fc331a5 00000005 [0x7f278e97af70]                                    proc                            # proc
0x7f278fc331a5 00000005 [0x7f278e99e290]                                    vfpSave			# AdjustFramePtr
0x7f278fc331a5 00000005 [0x7f278e99e3b0] 48 3b 65 50                        cmp	rsp, qword ptr [rbp+0x50]		# CMP8RegMem, SymRef [#406 +80]
0x7f278fc331a9 00000009 [0x7f278e99e560]                                    Label L0096:			# label	# (Start of internal control flow)
0x7f278fc331a9 00000009 [0x7f278e99e600] 0f 86 51 ce 3c 70                  jbe	Outlined Label L0098			# JBE4
0x7f278fc331af 0000000f [0x7f278e99e6a0]                                    Label L0097:			# label	# (End of internal control flow)
0x7f278fc331af 0000000f [0x7f278e99eb10] 48 83 ec 38                        sub	rsp, 0x00000038	# SUB8RegImms
0x7f278fc331b3 00000013 [0x7f278e99ec30] 4c 89 4c 24 30                     mov	qword ptr [rsp+0x30], r9		# S8MemReg, SymRef [#407 +48]
0x7f278fc331b8 00000018 [0x7f278e99ed50] 48 89 5c 24 28                     mov	qword ptr [rsp+0x28], rbx		# S8MemReg, SymRef [#408 +40]
0x7f278fc331bd 0000001d [0x7f278e99ee70] 48 89 44 24 40                     mov	qword ptr [rsp+0x40], rax		# S8MemReg, SymRef [#409 +64]
0x7f278fc331c2 00000022 [0x7f278e99e200]                                    vfpSave			# AdjustFramePtr
0x7f278fc331c2 00000022 [0x7f278e97b2f0]                                    Label L0032:			# label
========================================
0x7f278fc331c2 00000022 [0x7f278e97b390]                                    fence Relative [ 00007F278E8ACA90 ]	# fence BBStart <block_3> (frequency 10000)
0x7f278fc331c2 00000022 [0x7f278e97b6a0] 83 3d 0f 7b 4e 20 01               cmp	dword ptr [$0x00007f27b011acd8], 0x00000001	# CMP4MemImms, SymRef  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ]
0x7f278fc331c9 00000029 [0x7f278e97b730] 0f 84 31 ce 3c 70                  je	Label L0016			# JE4
0x7f278fc331cf 0000002f [0x7f278e97b970]                                    fence Relative [ 00007F278E8ACA94 ]	# fence BBEnd </block_3>
0x7f278fc331cf 0000002f [0x7f278e97bbc0]                                    assocreg                        # assocreg
0x7f278fc331cf 0000002f [0x7f278e97bca0]                                    Label L0033:			# label
0x7f278fc331cf 0000002f [0x7f278e97be80]                                    Label L0017:			# label
========================================
0x7f278fc331cf 0000002f [0x7f278e97bf20]                                    fence Relative [ 00007F278E88C0E0 ]	# fence BBStart <block_2> (frequency 8001)
0x7f278fc331cf 0000002f [0x7f278e97c430] 90                                 nop (1 byte)		# Avoid boundary @8 [0x0:8]
0x7f278fc331d0 00000030 [0x7f278e9a0760] e8 e8 00 00 00 00 00 00 00 00      mov	rax, 0x0000000000000000	# MOV8RegImm64
0x7f278fc331da 0000003a [0x7f278e97c3a0] 8d 34 05 00 00 00 00               lea	esi, dword ptr [1*rax]		# LEA4RegMem
0x7f278fc331e1 00000041 [0x7f278e97df70] 48 8b fd                           mov	rdi, rbp		# MOV8RegReg
0x7f278fc331e4 00000044 [0x7f278e97e780]                                    assocreg                        # assocreg
0x7f278fc331e4 00000044 [0x7f278e97e520] e8 d7 db 7d 1f                     call	jitNewObject            # CALLImm4 (00007F27AF410DC0)# CALLImm4
0x7f278fc331e9 00000049 [0x7f278e98a810] 48 8b d8                           mov	rbx, rax		# MOV8RegReg
0x7f278fc331ec 0000004c [0x7f278e97f910] 48 8b c3                           mov	rax, rbx		# MOV8RegReg
0x7f278fc331ef 0000004f [0x7f278e97fa20] 33 f6                              xor	esi, esi		# XOR4RegReg
0x7f278fc331f1 00000051 [0x7f278e97fb30] 33 d2                              xor	edx, edx		# XOR4RegReg
0x7f278fc331f3 00000053 [0x7f278e97fc40] 33 c9                              xor	ecx, ecx		# XOR4RegReg
0x7f278fc331f5 00000055 [0x7f278e97fd60] 48 c7 04 24 00 00 00 00            mov	qword ptr [rsp], 0x00000000	# S8MemImm4
0x7f278fc331fd 0000005d [0x7f278e9806e0]                                    Label L0064:			# label	# (Start of internal control flow)
0x7f278fc331fd 0000005d [0x7f278e980040] 0f 1f 00                           nop (3 bytes)		# Avoid boundary @8 [0x0:8]
0x7f278fc33200 00000060 [0x7f278e97ffa0] e8 fb cd 3c 70                     call	Snippet Label L0066     # CALLImm4 (Call Snippet)# CALLImm4
0x7f278fc33205 00000065 [0x7f278e9809e0]                                    assocreg                        # assocreg
0x7f278fc33205 00000065 [0x7f278e980780]                                    Label L0065:			# label	# (End of internal control flow)
0x7f278fc33205 00000065 [0x7f278e98a740] 4c 8b fb                           mov	r15, rbx		# MOV8RegReg
0x7f278fc33208 00000068 [0x7f278e981400]                                    nop (0 bytes)		# Avoid boundary @8 [0x0:8]
0x7f278fc33208 00000068 [0x7f278e9a08c0] e8 f8 00 00 00 00 00 00 00 00      mov	rax, 0x0000000000000000	# MOV8RegImm64
0x7f278fc33212 00000072 [0x7f278e981370] 48 8b 1c 05 00 00 00 00            mov	rbx, qword ptr [1*rax]		# L8RegMem
0x7f278fc3321a 0000007a [0x7f278e981ee0] 49 8b c7                           mov	rax, r15		# MOV8RegReg
0x7f278fc3321d 0000007d [0x7f278e982e60]                                    Label L0068:			# label	# (Start of internal control flow)
0x7f278fc3321d 0000007d [0x7f278e982220] 41 8b 0f                           mov	ecx, dword ptr [r15]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
0x7f278fc33220 00000080 [0x7f278e9822b0] 48 81 e1 00 ff ff ff               and	rcx, 0xffffffffffffff00	# AND8RegImm4
0x7f278fc33227 00000087 [0x7f278e9823d0] ff 91 c8 ff ff ff                  call	dword ptr [rcx-0x38]		# CALLMem, SymRef [#397 -56]
0x7f278fc3322d 0000008d [0x7f278e983160]                                    assocreg                        # assocreg
0x7f278fc3322d 0000008d [0x7f278e982f00]                                    Label L0069:			# label	# (End of internal control flow)
0x7f278fc3322d 0000008d [0x7f278e98a630] 48 8b f0                           mov	rsi, rax		# MOV8RegReg
0x7f278fc33230 00000090 [0x7f278e983ef0] 48 8b c3                           mov	rax, rbx		# MOV8RegReg
0x7f278fc33233 00000093 [0x7f278e984110] 8b 13                              mov	edx, dword ptr [rbx]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
0x7f278fc33235 00000095 [0x7f278e9841a0] 48 81 e2 00 ff ff ff               and	rdx, 0xffffffffffffff00	# AND8RegImm4
0x7f278fc3323c 0000009c [0x7f278e984e50]                                    Label L0071:			# label	# (Start of internal control flow)
0x7f278fc3323c 0000009c [0x7f278e984560] 0f 1f 40 00                        nop (4 bytes)		# Avoid boundary @8 [0x0:8]
0x7f278fc33240 000000a0 [0x7f278e9844c0] e8 1b 42 1f 1f 00 00 00 00 00      mov	rcx, 0x0000000000000000	# MOV8RegImm64
0x7f278fc3324a 000000aa [0x7f278e984600] 48 3b ca                           cmp	rcx, rdx		# CMP8RegReg
0x7f278fc3324d 000000ad [0x7f278e984690] 0f 85 ad cd 3c 70                  jne	Snippet Label L0074		# JNE4	# (VPic Data)
0x7f278fc33253 000000b3 [0x7f278e984730] e8 68 43 1f 1f                     call	populateVPicSlotCall    # CALLImm4 (00007F27AEE275C0)# CALLImm4
0x7f278fc33258 000000b8 [0x7f278e985150]                                    assocreg                        # assocreg
0x7f278fc33258 000000b8 [0x7f278e984ef0]                                    Label L0072:			# label	# (End of internal control flow)
0x7f278fc33258 000000b8 [0x7f278e99fbf0] 4c 8b 4c 24 30                     mov	r9, qword ptr [rsp+0x30]		# L8RegMem, SymRef [#410 +48]
0x7f278fc3325d 000000bd [0x7f278e99fd10] 48 8b 5c 24 28                     mov	rbx, qword ptr [rsp+0x28]		# L8RegMem, SymRef [#411 +40]
0x7f278fc33262 000000c2 [0x7f278e99fda0] 48 83 c4 38                        add	rsp, 0x00000038	# ADD8RegImms
0x7f278fc33266 000000c6 [0x7f278e9857a0] c3                                 ret                             # RET
0x7f278fc33267 000000c7 [0x7f278e9858b0]                                    fence Relative [ 00007F278E88C0E4 ]	# fence BBEnd </block_2>
0x7f278fc33267 000000c7 [0x7f278e985b00]                                    assocreg                        # assocreg
0x7f278fc33267 000000c7 [0x7f278e985be0]                                    Label L0075:			# label
0x7f278fc33267 000000c7 [0x7f278e985dc0]                                    Label L0016:			# label
========================================
0x7f278fc33267 000000c7 [0x7f278e985e60]                                    fence Relative [ 00007F278E8ACC70 ]	# fence BBStart <block_4> (frequency 0) (cold)
0x7f278fc33267 000000c7 [0x7f278e986230] 8b 05 63 42 43 fd                  mov	eax, dword ptr [$0x00007f278d0674d0]		# L4RegMem, SymRef  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]
0x7f278fc3326d 000000cd [0x7f278e9862c0] 83 e8 01                           sub	eax, 0x00000001	# SUB4RegImms
0x7f278fc33270 000000d0 [0x7f278e986460] 89 05 5a 42 43 fd                  mov	dword ptr [$0x00007f278d0674d0], eax		# S4MemReg, SymRef  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]
0x7f278fc33276 000000d6 [0x7f278e986780] 83 f8 00                           cmp	eax, 0x00000000	# CMP4RegImms
0x7f278fc33279 000000d9 [0x7f278e986810] 0f 8f 50 ff ff ff                  jg	Label L0017			# JG4
0x7f278fc3327f 000000df [0x7f278e9869a0]                                    fence Relative [ 00007F278E8ACC74 ]	# fence BBEnd </block_4>
........................................
0x7f278fc3327f 000000df [0x7f278e986ac0]                                    fence Relative [ 00007F278E8ACE70 ]	# fence BBStart <block_5> (frequency 0) (extension of previous block) (cold)
0x7f278fc3327f 000000df [0x7f278e986d50] c7 05 47 42 43 fd ff ff ff 7f      mov	dword ptr [$0x00007f278d0674d0], 0x7fffffff	# S4MemImm4, SymRef  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]
0x7f278fc33289 000000e9 [0x7f278e986ff0] c6 05 38 ff ff ff 02               mov	byte ptr [$0x00007f278fc331c8], 0x02	# S1MemImm1, SymRef  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]
0x7f278fc33290 000000f0 [0x7f278e987ea0] 48 8d 04 25 d8 9e 22 00            lea	rax, qword ptr [$0x0000000000229ed8]		# LEA8RegMem, SymRef  <J9Method>[#332  Static] [flags 0x8000307 0x40 ]
0x7f278fc33298 000000f8 [0x7f278e988040] 48 8d 35 01 ff ff ff               lea	rsi, qword ptr [$0x00007f278fc331a0]		# LEA8RegMem, SymRef  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ]
0x7f278fc3329f 000000ff [0x7f278e988150] ba 00 00 08 00                     mov	edx, 0x00080000	# MOV4RegImm4
0x7f278fc332a4 00000104 [0x7f278e9883c0]                                    Label L0080:			# label	# (Start of internal control flow)
0x7f278fc332a4 00000104 [0x7f278e9882a0] e8 37 57 7f 1f                     call	jitRetranslateCallerWithPreparation# CALLImm4 (00007F27AF4289E0)# CALLImm4
0x7f278fc332a9 00000109 [0x7f278e9886c0]                                    assocreg                        # assocreg
0x7f278fc332a9 00000109 [0x7f278e988460]                                    Label L0081:			# label	# (End of internal control flow)
0x7f278fc332a9 00000109 [0x7f278e988b60] e9 21 ff ff ff                     jmp	Label L0017			# JMP4
0x7f278fc332ae 0000010e [0x7f278e988c90]                                    fence Relative [ 00007F278E8ACE74 ]	# fence BBEnd </block_5>
0x7f278fc332ae 0000010e [0x7f278e988ee0]                                    assocreg                        # assocreg
0x7f278fc332ae 0000010e [0x7f278e988fc0]                                    Label L0082:			# label
0x7f278fc332ae 0000010e [0x7f278e99e740]                                    vfpRestore [0x7f278e99e290]			# AdjustFramePtr
0x7f278fc332ae 0000010e [0x7f278e99e7d0]                                    Outlined Label L0098:			# label
0x7f278fc332ae 0000010e [0x7f278e99e870] bf 38 00 00 00                     mov	edi, 0x00000038	# MOV4RegImm4
0x7f278fc332b3 00000113 [0x7f278e99e990] e8 38 d8 7d 1f                     call	jitStackOverflow        # CALLImm4 (00007F27AF410AF0)# CALLImm4
0x7f278fc332b8 00000118 [0x7f278e99ea30] e9 f2 fe ff ff                     jmp	Label L0097			# JMP4
</instructions>
<snippets>

00007F278FC332BD 0000011d                                                 Snippet Label L0048:		# Unresolved Data Snippet for instr [0x7f278e9a0760]
0x7f278fc332bd 0000011d                      e8 0e 5a 1f 1f                 call	interpreterUnresolvedClassGlue
0x7f278fc332c2 00000122                      c0 9d 22 00 00 00 00 00        .quad	0000000000229DC0	# address of constant pool for this method
0x7f278fc332ca 0000012a                      06 00 00 40                    .int	0x00000006				# constant pool index
0x7f278fc332ce 0000012e                      48 b8                          .short								# REX + op of TR::InstOpCode::MOV8RegImm64

00007F278FC332D0 00000130                                                 Snippet Label L0066:		# Call Snippet
0x7f278fc332d0 00000130                      48 89 44 24 28                 mov 	qword ptr[rsp+40], rax		#save registers for interpreter call snippet
0x7f278fc332d5 00000135                      89 74 24 20                    mov 	dword ptr[rsp+32], esi		#save registers for interpreter call snippet
0x7f278fc332d9 00000139                      89 54 24 18                    mov 	dword ptr[rsp+24], edx		#save registers for interpreter call snippet
0x7f278fc332dd 0000013d                      89 4c 24 10                    mov 	dword ptr[rsp+16], ecx		#save registers for interpreter call snippet
0x7f278fc332e1 00000141                      0f 1f 80 00                    mov 	dword ptr[rsp+8], icallVMprJavaSendNativeStatic		#save registers for interpreter call snippet
0x7f278fc332e5 00000145                      00 00 00 e8 33 54 1f 1f 00 00  mov 	rdi, 0x0		# TR::InstOpCode::MOV8RegImm64
0x7f278fc332ef 0000014f                      00 00 00 e9 59                 jmp 	interpreterVoidStaticGlue		# jump out of snippet code

00007F278FC33305 00000165                                                 Snippet Label L0067:		# Unresolved Data Snippet for instr [0x7f278e9a08c0]
0x7f278fc33305 00000165                      e8 26 5b 1f 1f                 call	interpreterUnresolvedStaticFieldGlue
0x7f278fc3330a 0000016a                      c0 9d 22 00 00 00 00 00        .quad	0000000000229DC0	# address of constant pool for this method
0x7f278fc33312 00000172                      08 00 00 60                    .int	0x00000008				# constant pool index
0x7f278fc33316 00000176                      48 b8 00 00 00 00 00 00 00 00  .byte	(11)				# patch instruction bytes + TR::InstOpCode::RET

00007F278FC33324 00000184                                                 <<< VPic Data >>>
0x7f278fc33324 00000184                      48                             .byte	48								# REX of MOVRegImm64
0x7f278fc33325 00000185                      b9                             .byte	b9								# MOV opcode of MOVRegImm64
0x7f278fc33326 00000186                      48                             .byte	48								# REX of CallMem
0x7f278fc33327 00000187                      92                             .byte	92								# ModRM for TR::InstOpCode::CALLMem
0x7f278fc33328 00000188                      c0 9d 22 00 00 00 00 00        DQ	0000000000229DC0		# owning method cpAddr
0x7f278fc33330 00000190                      0b 00 00 00 00 00 00 00        DQ	000000000000000B		# cpIndex
0x7f278fc33338 00000198                      00 00 00 00 00 00 00 00        DQ	0000000000000000		# direct J9Method (initially null)
0x7f278fc33340 000001a0                      70 c0 b3 8f 27 7f 00 00        DQ	00007F278FB3C070		# j2i virtual thunk

00007F278FC33348 000001a8                                                 Snippet Label L0074:		# VPic Data
0x7f278fc33348 000001a8                      e8 93 44 1f 1f 00 00           call	populateVPicVTableDispatch 		# 00007F27AEE277E0	patched with vtable call
0x7f278fc3334f 000001af                      e9 04 ff ff ff                 jmp	Label L0072
</snippets>

<atlas>

Internal stack atlas:
  numberOfMaps=11
  numberOfSlotsMapped=0
  numberOfParmSlots=0
  parmBaseOffset=16
  localBaseOffset=0

  Locals information : 
  Local [0x7f278e8416b0] (GC map index :  -1, Offset :   8, Size : 8) is an uninitialized collected parm 

  No internal pointers in this method

  Map number : 1
  Code offset range starts at [000001ac]
  GC stack map information : 
    number of stack slots mapped = 0
    live stack slots containing addresses --> {}
  GC register map information : 
    slot pushes: 0    registers: {}

  Map number : 2
  Code offset range starts at [00000113]
  GC stack map information : 
    number of stack slots mapped = 0
    live stack slots containing addresses --> {}
  GC register map information : 
    slot pushes: 0    registers: {}

  Map number : 3
  Code offset range starts at [00000104]
  GC stack map information : 
    number of stack slots mapped = 0
    live stack slots containing addresses --> {}
  GC register map information : 
    slot pushes: 0    registers: {}

  Map number : 4
  Code offset range starts at [000000b3]
  GC stack map information : 
    number of stack slots mapped = 0
    live stack slots containing addresses --> {}
  GC register map information : 
    slot pushes: 0    registers: {}

  Map number : 5
  Code offset range starts at [000000a0]
  GC stack map information : 
    number of stack slots mapped = 0
    live stack slots containing addresses --> {}
  GC register map information : 
    slot pushes: 0    registers: {}

  Map number : 6
  Code offset range starts at [00000093]
  GC stack map information : 
    number of stack slots mapped = 0
    live stack slots containing addresses --> {}
  GC register map information : 
    slot pushes: 0    registers: {eax ebx esi }

  Map number : 7
  Code offset range starts at [00000087]
  GC stack map information : 
    number of stack slots mapped = 0
    live stack slots containing addresses --> {}
  GC register map information : 
    slot pushes: 0    registers: {ebx }

  Map number : 8
  Code offset range starts at [00000068]
  GC stack map information : 
    number of stack slots mapped = 0
    live stack slots containing addresses --> {}
  GC register map information : 
    slot pushes: 0    registers: {r15d }

  Map number : 9
  Code offset range starts at [00000060]
  GC stack map information : 
    number of stack slots mapped = 0
    live stack slots containing addresses --> {}
  GC register map information : 
    slot pushes: 0    registers: {ebx }

  Map number : 10
  Code offset range starts at [00000044]
  GC stack map information : 
    number of stack slots mapped = 0
    live stack slots containing addresses --> {}
  GC register map information : 
    slot pushes: 0    registers: {}

  Map number : 11
  Code offset range starts at [00000030]
  GC stack map information : 
    number of stack slots mapped = 0
    live stack slots containing addresses --> {}
  GC register map information : 
    slot pushes: 0    registers: {}


</atlas>
Map with code offset range starting at [000000a0] is identical to the previous map [000000b3], merging and eliminating previous

<instructions
	title="Post Relocation Instructions"
	method="BT.foo()V"
	hotness="warm">

                 +--------------------------------------- instruction address
                 |        +----------------------------------------- instruction offset from start of method
                 |        |                   +------------------------------------------ corresponding TR::Instruction instance
                 |        |                   |  +-------------------------------------------------- code bytes
                 |        |                   |  |                          +-------------------------------------- opcode and operands
                 |        |                   |  |                          |				+----------- additional information
                 |        |                   |  |                          |				|
                 V        V                   V  V                          V				V
0x7f278fc33170 ffffffd0 [0x7f278e97a2d0]                                    Label L0018:			# label
0x7f278fc33170 ffffffd0 [0x7f278e97a450] 48 bf d8 9e 22 00 00 00 00 00      mov	rdi, 0x0000000000229ed8	# MOV8RegImm64
0x7f278fc3317a ffffffda [0x7f278e97a7a0] 48 89 44 24 08                     mov	qword ptr [rsp+0x8], rax		# S8MemReg, SymRef [#390 +8]
0x7f278fc3317f ffffffdf [0x7f278e97aa90]                                    assocreg                        # assocreg
0x7f278fc3317f ffffffdf [0x7f278e97a830] e9 3c 32 80 1f                     jmp	j2iTransition           # JMP4 (00007F27AF4363C0)# JMP4
0x7f278fc33184 ffffffe4 [0x7f278e97ab10] 0f 1f 80 00 00 00 00               nop (7 bytes)		# Alignment (boundary=8, margin=21)
0x7f278fc3318b ffffffeb [0x7f278e97aba0] eb e3                              jmp	Label L0018			# JMP1
0x7f278fc3318d ffffffed [0x7f278e97ac40] cc cc                              .short	0xcccc		# DWImm2
0x7f278fc3318f ffffffef [0x7f278e97ad60] e8 1c bc 24 1f                     call	__samplingRecompileMethod# CALLImm4 (00007F27AEE7EDB0)# CALLImm4
0x7f278fc33194 fffffff4 [0x7f278e97ae00] d0 74 06 8d 27 7f 00 00            .quad	0x00007f278d0674d0		# DQImm64
0x7f278fc3319c fffffffc [0x7f278e97ae90] 10 00 05 00                        .int	0x00050010		# DDImm4
0x7f278fc331a0 00000000 [0x7f278e97b1b0]                                    assocreg                        # assocreg
0x7f278fc331a0 00000000 [0x7f278e99e0d0] 48 8b 44 24 08                     mov	rax, qword ptr [rsp+0x8]		# L8RegMem, SymRef [#405 +8]
0x7f278fc331a5 00000005 [0x7f278e99e160]                                    nop (0 bytes)		# Align patchable code @32 [0x0:2]
0x7f278fc331a5 00000005 [0x7f278e97af70]                                    proc                            # proc
0x7f278fc331a5 00000005 [0x7f278e99e290]                                    vfpSave			# AdjustFramePtr
0x7f278fc331a5 00000005 [0x7f278e99e3b0] 48 3b 65 50                        cmp	rsp, qword ptr [rbp+0x50]		# CMP8RegMem, SymRef [#406 +80]
0x7f278fc331a9 00000009 [0x7f278e99e560]                                    Label L0096:			# label	# (Start of internal control flow)
0x7f278fc331a9 00000009 [0x7f278e99e600] 0f 86 ff 00 00 00                  jbe	Outlined Label L0098			# JBE4
0x7f278fc331af 0000000f [0x7f278e99e6a0]                                    Label L0097:			# label	# (End of internal control flow)
0x7f278fc331af 0000000f [0x7f278e99eb10] 48 83 ec 38                        sub	rsp, 0x00000038	# SUB8RegImms
0x7f278fc331b3 00000013 [0x7f278e99ec30] 4c 89 4c 24 30                     mov	qword ptr [rsp+0x30], r9		# S8MemReg, SymRef [#407 +48]
0x7f278fc331b8 00000018 [0x7f278e99ed50] 48 89 5c 24 28                     mov	qword ptr [rsp+0x28], rbx		# S8MemReg, SymRef [#408 +40]
0x7f278fc331bd 0000001d [0x7f278e99ee70] 48 89 44 24 40                     mov	qword ptr [rsp+0x40], rax		# S8MemReg, SymRef [#409 +64]
0x7f278fc331c2 00000022 [0x7f278e99e200]                                    vfpSave			# AdjustFramePtr
0x7f278fc331c2 00000022 [0x7f278e97b2f0]                                    Label L0032:			# label
========================================
0x7f278fc331c2 00000022 [0x7f278e97b390]                                    fence Relative [ 00007F278E8ACA90 ]	# fence BBStart <block_3> (frequency 10000)
0x7f278fc331c2 00000022 [0x7f278e97b6a0] 83 3d 0f 7b 4e 20 01               cmp	dword ptr [$0x00007f27b011acd8], 0x00000001	# CMP4MemImms, SymRef  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ]
0x7f278fc331c9 00000029 [0x7f278e97b730] 0f 84 98 00 00 00                  je	Label L0016			# JE4
0x7f278fc331cf 0000002f [0x7f278e97b970]                                    fence Relative [ 00007F278E8ACA94 ]	# fence BBEnd </block_3>
0x7f278fc331cf 0000002f [0x7f278e97bbc0]                                    assocreg                        # assocreg
0x7f278fc331cf 0000002f [0x7f278e97bca0]                                    Label L0033:			# label
0x7f278fc331cf 0000002f [0x7f278e97be80]                                    Label L0017:			# label
========================================
0x7f278fc331cf 0000002f [0x7f278e97bf20]                                    fence Relative [ 00007F278E88C0E0 ]	# fence BBStart <block_2> (frequency 8001)
0x7f278fc331cf 0000002f [0x7f278e97c430] 90                                 nop (1 byte)		# Avoid boundary @8 [0x0:8]
0x7f278fc331d0 00000030 [0x7f278e9a0760] e8 e8 00 00 00 00 00 00 00 00      mov	rax, 0x0000000000000000	# MOV8RegImm64
0x7f278fc331da 0000003a [0x7f278e97c3a0] 8d 34 05 00 00 00 00               lea	esi, dword ptr [1*rax]		# LEA4RegMem
0x7f278fc331e1 00000041 [0x7f278e97df70] 48 8b fd                           mov	rdi, rbp		# MOV8RegReg
0x7f278fc331e4 00000044 [0x7f278e97e780]                                    assocreg                        # assocreg
0x7f278fc331e4 00000044 [0x7f278e97e520] e8 d7 db 7d 1f                     call	jitNewObject            # CALLImm4 (00007F27AF410DC0)# CALLImm4
0x7f278fc331e9 00000049 [0x7f278e98a810] 48 8b d8                           mov	rbx, rax		# MOV8RegReg
0x7f278fc331ec 0000004c [0x7f278e97f910] 48 8b c3                           mov	rax, rbx		# MOV8RegReg
0x7f278fc331ef 0000004f [0x7f278e97fa20] 33 f6                              xor	esi, esi		# XOR4RegReg
0x7f278fc331f1 00000051 [0x7f278e97fb30] 33 d2                              xor	edx, edx		# XOR4RegReg
0x7f278fc331f3 00000053 [0x7f278e97fc40] 33 c9                              xor	ecx, ecx		# XOR4RegReg
0x7f278fc331f5 00000055 [0x7f278e97fd60] 48 c7 04 24 00 00 00 00            mov	qword ptr [rsp], 0x00000000	# S8MemImm4
0x7f278fc331fd 0000005d [0x7f278e9806e0]                                    Label L0064:			# label	# (Start of internal control flow)
0x7f278fc331fd 0000005d [0x7f278e980040] 0f 1f 00                           nop (3 bytes)		# Avoid boundary @8 [0x0:8]
0x7f278fc33200 00000060 [0x7f278e97ffa0] e8 cb 00 00 00                     call	Snippet Label L0066     # CALLImm4 (Call Snippet)# CALLImm4
0x7f278fc33205 00000065 [0x7f278e9809e0]                                    assocreg                        # assocreg
0x7f278fc33205 00000065 [0x7f278e980780]                                    Label L0065:			# label	# (End of internal control flow)
0x7f278fc33205 00000065 [0x7f278e98a740] 4c 8b fb                           mov	r15, rbx		# MOV8RegReg
0x7f278fc33208 00000068 [0x7f278e981400]                                    nop (0 bytes)		# Avoid boundary @8 [0x0:8]
0x7f278fc33208 00000068 [0x7f278e9a08c0] e8 f8 00 00 00 00 00 00 00 00      mov	rax, 0x0000000000000000	# MOV8RegImm64
0x7f278fc33212 00000072 [0x7f278e981370] 48 8b 1c 05 00 00 00 00            mov	rbx, qword ptr [1*rax]		# L8RegMem
0x7f278fc3321a 0000007a [0x7f278e981ee0] 49 8b c7                           mov	rax, r15		# MOV8RegReg
0x7f278fc3321d 0000007d [0x7f278e982e60]                                    Label L0068:			# label	# (Start of internal control flow)
0x7f278fc3321d 0000007d [0x7f278e982220] 41 8b 0f                           mov	ecx, dword ptr [r15]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
0x7f278fc33220 00000080 [0x7f278e9822b0] 48 81 e1 00 ff ff ff               and	rcx, 0xffffffffffffff00	# AND8RegImm4
0x7f278fc33227 00000087 [0x7f278e9823d0] ff 91 c8 ff ff ff                  call	dword ptr [rcx-0x38]		# CALLMem, SymRef [#397 -56]
0x7f278fc3322d 0000008d [0x7f278e983160]                                    assocreg                        # assocreg
0x7f278fc3322d 0000008d [0x7f278e982f00]                                    Label L0069:			# label	# (End of internal control flow)
0x7f278fc3322d 0000008d [0x7f278e98a630] 48 8b f0                           mov	rsi, rax		# MOV8RegReg
0x7f278fc33230 00000090 [0x7f278e983ef0] 48 8b c3                           mov	rax, rbx		# MOV8RegReg
0x7f278fc33233 00000093 [0x7f278e984110] 8b 13                              mov	edx, dword ptr [rbx]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
0x7f278fc33235 00000095 [0x7f278e9841a0] 48 81 e2 00 ff ff ff               and	rdx, 0xffffffffffffff00	# AND8RegImm4
0x7f278fc3323c 0000009c [0x7f278e984e50]                                    Label L0071:			# label	# (Start of internal control flow)
0x7f278fc3323c 0000009c [0x7f278e984560] 0f 1f 40 00                        nop (4 bytes)		# Avoid boundary @8 [0x0:8]
0x7f278fc33240 000000a0 [0x7f278e9844c0] e8 1b 42 1f 1f 00 00 00 00 00      mov	rcx, 0x0000000000000000	# MOV8RegImm64
0x7f278fc3324a 000000aa [0x7f278e984600] 48 3b ca                           cmp	rcx, rdx		# CMP8RegReg
0x7f278fc3324d 000000ad [0x7f278e984690] 0f 85 f5 00 00 00                  jne	Snippet Label L0074		# JNE4	# (VPic Data)
0x7f278fc33253 000000b3 [0x7f278e984730] e8 68 43 1f 1f                     call	populateVPicSlotCall    # CALLImm4 (00007F27AEE275C0)# CALLImm4
0x7f278fc33258 000000b8 [0x7f278e985150]                                    assocreg                        # assocreg
0x7f278fc33258 000000b8 [0x7f278e984ef0]                                    Label L0072:			# label	# (End of internal control flow)
0x7f278fc33258 000000b8 [0x7f278e99fbf0] 4c 8b 4c 24 30                     mov	r9, qword ptr [rsp+0x30]		# L8RegMem, SymRef [#410 +48]
0x7f278fc3325d 000000bd [0x7f278e99fd10] 48 8b 5c 24 28                     mov	rbx, qword ptr [rsp+0x28]		# L8RegMem, SymRef [#411 +40]
0x7f278fc33262 000000c2 [0x7f278e99fda0] 48 83 c4 38                        add	rsp, 0x00000038	# ADD8RegImms
0x7f278fc33266 000000c6 [0x7f278e9857a0] c3                                 ret                             # RET
0x7f278fc33267 000000c7 [0x7f278e9858b0]                                    fence Relative [ 00007F278E88C0E4 ]	# fence BBEnd </block_2>
0x7f278fc33267 000000c7 [0x7f278e985b00]                                    assocreg                        # assocreg
0x7f278fc33267 000000c7 [0x7f278e985be0]                                    Label L0075:			# label
0x7f278fc33267 000000c7 [0x7f278e985dc0]                                    Label L0016:			# label
========================================
0x7f278fc33267 000000c7 [0x7f278e985e60]                                    fence Relative [ 00007F278E8ACC70 ]	# fence BBStart <block_4> (frequency 0) (cold)
0x7f278fc33267 000000c7 [0x7f278e986230] 8b 05 63 42 43 fd                  mov	eax, dword ptr [$0x00007f278d0674d0]		# L4RegMem, SymRef  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]
0x7f278fc3326d 000000cd [0x7f278e9862c0] 83 e8 01                           sub	eax, 0x00000001	# SUB4RegImms
0x7f278fc33270 000000d0 [0x7f278e986460] 89 05 5a 42 43 fd                  mov	dword ptr [$0x00007f278d0674d0], eax		# S4MemReg, SymRef  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]
0x7f278fc33276 000000d6 [0x7f278e986780] 83 f8 00                           cmp	eax, 0x00000000	# CMP4RegImms
0x7f278fc33279 000000d9 [0x7f278e986810] 0f 8f 50 ff ff ff                  jg	Label L0017			# JG4
0x7f278fc3327f 000000df [0x7f278e9869a0]                                    fence Relative [ 00007F278E8ACC74 ]	# fence BBEnd </block_4>
........................................
0x7f278fc3327f 000000df [0x7f278e986ac0]                                    fence Relative [ 00007F278E8ACE70 ]	# fence BBStart <block_5> (frequency 0) (extension of previous block) (cold)
0x7f278fc3327f 000000df [0x7f278e986d50] c7 05 47 42 43 fd ff ff ff 7f      mov	dword ptr [$0x00007f278d0674d0], 0x7fffffff	# S4MemImm4, SymRef  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]
0x7f278fc33289 000000e9 [0x7f278e986ff0] c6 05 38 ff ff ff 02               mov	byte ptr [$0x00007f278fc331c8], 0x02	# S1MemImm1, SymRef  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]
0x7f278fc33290 000000f0 [0x7f278e987ea0] 48 8d 04 25 d8 9e 22 00            lea	rax, qword ptr [$0x0000000000229ed8]		# LEA8RegMem, SymRef  <J9Method>[#332  Static] [flags 0x8000307 0x40 ]
0x7f278fc33298 000000f8 [0x7f278e988040] 48 8d 35 01 ff ff ff               lea	rsi, qword ptr [$0x00007f278fc331a0]		# LEA8RegMem, SymRef  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ]
0x7f278fc3329f 000000ff [0x7f278e988150] ba 00 00 08 00                     mov	edx, 0x00080000	# MOV4RegImm4
0x7f278fc332a4 00000104 [0x7f278e9883c0]                                    Label L0080:			# label	# (Start of internal control flow)
0x7f278fc332a4 00000104 [0x7f278e9882a0] e8 37 57 7f 1f                     call	jitRetranslateCallerWithPreparation# CALLImm4 (00007F27AF4289E0)# CALLImm4
0x7f278fc332a9 00000109 [0x7f278e9886c0]                                    assocreg                        # assocreg
0x7f278fc332a9 00000109 [0x7f278e988460]                                    Label L0081:			# label	# (End of internal control flow)
0x7f278fc332a9 00000109 [0x7f278e988b60] e9 21 ff ff ff                     jmp	Label L0017			# JMP4
0x7f278fc332ae 0000010e [0x7f278e988c90]                                    fence Relative [ 00007F278E8ACE74 ]	# fence BBEnd </block_5>
0x7f278fc332ae 0000010e [0x7f278e988ee0]                                    assocreg                        # assocreg
0x7f278fc332ae 0000010e [0x7f278e988fc0]                                    Label L0082:			# label
0x7f278fc332ae 0000010e [0x7f278e99e740]                                    vfpRestore [0x7f278e99e290]			# AdjustFramePtr
0x7f278fc332ae 0000010e [0x7f278e99e7d0]                                    Outlined Label L0098:			# label
0x7f278fc332ae 0000010e [0x7f278e99e870] bf 38 00 00 00                     mov	edi, 0x00000038	# MOV4RegImm4
0x7f278fc332b3 00000113 [0x7f278e99e990] e8 38 d8 7d 1f                     call	jitStackOverflow        # CALLImm4 (00007F27AF410AF0)# CALLImm4
0x7f278fc332b8 00000118 [0x7f278e99ea30] e9 f2 fe ff ff                     jmp	Label L0097			# JMP4
</instructions>
<snippets>

00007F278FC332BD 0000011d                                                 Snippet Label L0048:		# Unresolved Data Snippet for instr [0x7f278e9a0760]
0x7f278fc332bd 0000011d                      e8 0e 5a 1f 1f                 call	interpreterUnresolvedClassGlue
0x7f278fc332c2 00000122                      c0 9d 22 00 00 00 00 00        .quad	0000000000229DC0	# address of constant pool for this method
0x7f278fc332ca 0000012a                      06 00 00 40                    .int	0x00000006				# constant pool index
0x7f278fc332ce 0000012e                      48 b8                          .short								# REX + op of TR::InstOpCode::MOV8RegImm64

00007F278FC332D0 00000130                                                 Snippet Label L0066:		# Call Snippet
0x7f278fc332d0 00000130                      48 89 44 24 28                 mov 	qword ptr[rsp+40], rax		#save registers for interpreter call snippet
0x7f278fc332d5 00000135                      89 74 24 20                    mov 	dword ptr[rsp+32], esi		#save registers for interpreter call snippet
0x7f278fc332d9 00000139                      89 54 24 18                    mov 	dword ptr[rsp+24], edx		#save registers for interpreter call snippet
0x7f278fc332dd 0000013d                      89 4c 24 10                    mov 	dword ptr[rsp+16], ecx		#save registers for interpreter call snippet
0x7f278fc332e1 00000141                      0f 1f 80 00                    mov 	dword ptr[rsp+8], icallVMprJavaSendNativeStatic		#save registers for interpreter call snippet
0x7f278fc332e5 00000145                      00 00 00 e8 33 54 1f 1f 00 00  mov 	rdi, 0x0		# TR::InstOpCode::MOV8RegImm64
0x7f278fc332ef 0000014f                      00 00 00 e9 59                 jmp 	interpreterVoidStaticGlue		# jump out of snippet code

00007F278FC33305 00000165                                                 Snippet Label L0067:		# Unresolved Data Snippet for instr [0x7f278e9a08c0]
0x7f278fc33305 00000165                      e8 26 5b 1f 1f                 call	interpreterUnresolvedStaticFieldGlue
0x7f278fc3330a 0000016a                      c0 9d 22 00 00 00 00 00        .quad	0000000000229DC0	# address of constant pool for this method
0x7f278fc33312 00000172                      08 00 00 60                    .int	0x00000008				# constant pool index
0x7f278fc33316 00000176                      48 b8 00 00 00 00 00 00 00 00  .byte	(11)				# patch instruction bytes + TR::InstOpCode::RET

00007F278FC33324 00000184                                                 <<< VPic Data >>>
0x7f278fc33324 00000184                      48                             .byte	48								# REX of MOVRegImm64
0x7f278fc33325 00000185                      b9                             .byte	b9								# MOV opcode of MOVRegImm64
0x7f278fc33326 00000186                      48                             .byte	48								# REX of CallMem
0x7f278fc33327 00000187                      92                             .byte	92								# ModRM for TR::InstOpCode::CALLMem
0x7f278fc33328 00000188                      c0 9d 22 00 00 00 00 00        DQ	0000000000229DC0		# owning method cpAddr
0x7f278fc33330 00000190                      0b 00 00 00 00 00 00 00        DQ	000000000000000B		# cpIndex
0x7f278fc33338 00000198                      00 00 00 00 00 00 00 00        DQ	0000000000000000		# direct J9Method (initially null)
0x7f278fc33340 000001a0                      70 c0 b3 8f 27 7f 00 00        DQ	00007F278FB3C070		# j2i virtual thunk

00007F278FC33348 000001a8                                                 Snippet Label L0074:		# VPic Data
0x7f278fc33348 000001a8                      e8 93 44 1f 1f 00 00           call	populateVPicVTableDispatch 		# 00007F27AEE277E0	patched with vtable call
0x7f278fc3334f 000001af                      e9 04 ff ff ff                 jmp	Label L0072
</snippets>
</codegen>
<metadata>
J9JITExceptionTable [00007F278CE39038]
CP=[0000000000229DC0], slots=[0000000000000001], NumExcpRanges=[0000000000000000], size=[000000000000017D]
startPC=     [00007F278FC331A0]
endWarmPC=   [00007F278FC33354]
startColdPC= [0000000000000000]
endPC=       [00007F278FC33354]
hotness=     [2]
scalarTempSlots=0, objectTempSlots=0
prologuePushes=2, tempOffset=0
registerSaveDescription=[0000000000000202]
totalFrameSize=7 { Real Frame Size: 64 }
bodyInfo= [00007F278D0674D0]

Stack Atlas:
  numberOfSlotsMapped=0
  numberOfMaps=10
  numberOfMapBytes=1
  parmBaseOffset=16
  numberOfParmSlots=0
  localBaseOffset=0
  syncObjectTempOffset=-1

Offset info: 
    stackmap location: 00007F278CE39131
    map range: starting at [00007F278FC331D0]
      lowOffset: 00000030
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=0>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [8CE39137] { 00000000 }
      registers: 00000000	{ }
      stack map: 	{ }

    stackmap location: 00007F278CE39140
    map range: starting at [00007F278FC331E4]
      lowOffset: 00000044
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=0>, _isSameReceiver=0, _doNotProfile=1
      ByteCodeInfo Map

    stackmap location: 00007F278CE39146
    map range: starting at [00007F278FC33200]
      lowOffset: 00000060
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=8>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [8CE3914C] { 00000000 }
      registers: 00000002	{ 1:ebx }
      stack map: 	{ }

    stackmap location: 00007F278CE39155
    map range: starting at [00007F278FC33208]
      lowOffset: 00000068
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=12>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [8CE3915B] { 00000000 }
      registers: 00008000	{ 15:r15 }
      stack map: 	{ }

    stackmap location: 00007F278CE39164
    map range: starting at [00007F278FC33227]
      lowOffset: 00000087
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=16>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [8CE3916A] { 00000000 }
      registers: 00000002	{ 1:ebx }
      stack map: 	{ }

    stackmap location: 00007F278CE39173
    map range: starting at [00007F278FC33233]
      lowOffset: 00000093
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=19>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [8CE39179] { 00000000 }
      registers: 00000023	{ 0:eax 1:ebx 5:esi }
      stack map: 	{ }

    stackmap location: 00007F278CE39182
    map range: starting at [00007F278FC33240]
      lowOffset: 000000A0
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=19>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [8CE39188] { 00000000 }
      registers: 00000000	{ }
      stack map: 	{ }

    stackmap location: 00007F278CE39191
    map range: starting at [00007F278FC332A4]
      lowOffset: 00000104
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=0>, _isSameReceiver=0, _doNotProfile=1
      ByteCodeInfo Map

    stackmap location: 00007F278CE39197
    map range: starting at [00007F278FC332B3]
      lowOffset: 00000113
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=0>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [8CE3919D] { 00000000 }
      registers: 7FF20000	{ 17:st(0) 20:st(3) 21:st(4) 22:st(5) 23:st(6) 24:st(7) 25:xmm0 26:xmm1 27:xmm2 28:xmm3 29:xmm4 30:xmm5 }
      stack map: 	{ }

    stackmap location: 00007F278CE391A6
    map range: starting at [00007F278FC3334C]
      lowOffset: 000001AC
      byteCodeInfo: <_callerIndex=-1, byteCodeIndex=19>, _isSameReceiver=0, _doNotProfile=0
      registerSaveDescription: starting at [8CE391AC] { 00000000 }
      registers: 00000000	{ }
      stack map: 	{ }



</metadata>
<instructions
	title="Mixed Mode Disassembly"
	method="BT.foo()V">


 \\ BT.foo()V
 \\    0 JBnewdup 6 BLine

0x7f278fc33170 ffffffd0 [0x7f278e97a2d0]                                    Label L0018:			# label
0x7f278fc33170 ffffffd0 [0x7f278e97a450] 48 bf d8 9e 22 00 00 00 00 00      mov	rdi, 0x0000000000229ed8	# MOV8RegImm64
0x7f278fc3317a ffffffda [0x7f278e97a7a0] 48 89 44 24 08                     mov	qword ptr [rsp+0x8], rax		# S8MemReg, SymRef [#390 +8]
0x7f278fc3317f ffffffdf [0x7f278e97aa90]                                    assocreg                        # assocreg
0x7f278fc3317f ffffffdf [0x7f278e97a830] e9 3c 32 80 1f                     jmp	j2iTransition           # JMP4 (00007F27AF4363C0)# JMP4
0x7f278fc33184 ffffffe4 [0x7f278e97ab10] 0f 1f 80 00 00 00 00               nop (7 bytes)		# Alignment (boundary=8, margin=21)
0x7f278fc3318b ffffffeb [0x7f278e97aba0] eb e3                              jmp	Label L0018			# JMP1
0x7f278fc3318d ffffffed [0x7f278e97ac40] 48 3b                              .short	0xcccc		# DWImm2
0x7f278fc3318f ffffffef [0x7f278e97ad60] e8 1c bc 24 1f                     call	__samplingRecompileMethod# CALLImm4 (00007F27AEE7EDB0)# CALLImm4
0x7f278fc33194 fffffff4 [0x7f278e97ae00] d0 74 06 8d 27 7f 00 00            .quad	0x00007f278d0674d0		# DQImm64
0x7f278fc3319c fffffffc [0x7f278e97ae90] 10 00 05 00                        .int	0x00050010		# DDImm4
0x7f278fc331a0 00000000 [0x7f278e97b1b0]                                    assocreg                        # assocreg
0x7f278fc331a0 00000000 [0x7f278e99e0d0] 48 8b 44 24 08                     mov	rax, qword ptr [rsp+0x8]		# L8RegMem, SymRef [#405 +8]
0x7f278fc331a5 00000005 [0x7f278e99e160]                                    nop (0 bytes)		# Align patchable code @32 [0x0:2]
0x7f278fc331a5 00000005 [0x7f278e97af70]                                    proc                            # proc
0x7f278fc331a5 00000005 [0x7f278e99e290]                                    vfpSave			# AdjustFramePtr
0x7f278fc331a5 00000005 [0x7f278e99e3b0] 48 3b 65 50                        cmp	rsp, qword ptr [rbp+0x50]		# CMP8RegMem, SymRef [#406 +80]
0x7f278fc331a9 00000009 [0x7f278e99e560]                                    Label L0096:			# label	# (Start of internal control flow)
0x7f278fc331a9 00000009 [0x7f278e99e600] 0f 86 ff 00 00 00                  jbe	Outlined Label L0098			# JBE4
0x7f278fc331af 0000000f [0x7f278e99e6a0]                                    Label L0097:			# label	# (End of internal control flow)
0x7f278fc331af 0000000f [0x7f278e99eb10] 48 83 ec 38                        sub	rsp, 0x00000038	# SUB8RegImms
0x7f278fc331b3 00000013 [0x7f278e99ec30] 4c 89 4c 24 30                     mov	qword ptr [rsp+0x30], r9		# S8MemReg, SymRef [#407 +48]
0x7f278fc331b8 00000018 [0x7f278e99ed50] 48 89 5c 24 28                     mov	qword ptr [rsp+0x28], rbx		# S8MemReg, SymRef [#408 +40]
0x7f278fc331bd 0000001d [0x7f278e99ee70] 48 89 44 24 40                     mov	qword ptr [rsp+0x40], rax		# S8MemReg, SymRef [#409 +64]
0x7f278fc331c2 00000022 [0x7f278e99e200]                                    vfpSave			# AdjustFramePtr
0x7f278fc331c2 00000022 [0x7f278e97b2f0]                                    Label L0032:			# label
========================================
0x7f278fc331c2 00000022 [0x7f278e97b390]                                    fence Relative [ 00007F278E8ACA90 ]	# fence BBStart <block_3> (frequency 10000)
0x7f278fc331c2 00000022 [0x7f278e97b6a0] 83 3d 0f 7b 4e 20 01               cmp	dword ptr [$0x00007f27b011acd8], 0x00000001	# CMP4MemImms, SymRef  <count-for-recompile>[#328  Static] [flags 0x2000303 0x40 ]
0x7f278fc331c9 00000029 [0x7f278e97b730] 0f 84 98 00 00 00                  je	Label L0016			# JE4
0x7f278fc331cf 0000002f [0x7f278e97b970]                                    fence Relative [ 00007F278E8ACA94 ]	# fence BBEnd </block_3>
0x7f278fc331cf 0000002f [0x7f278e97bbc0]                                    assocreg                        # assocreg
0x7f278fc331cf 0000002f [0x7f278e97bca0]                                    Label L0033:			# label
0x7f278fc331cf 0000002f [0x7f278e97be80]                                    Label L0017:			# label
========================================
0x7f278fc331cf 0000002f [0x7f278e97bf20]                                    fence Relative [ 00007F278E88C0E0 ]	# fence BBStart <block_2> (frequency 8001)
0x7f278fc331cf 0000002f [0x7f278e97c430] 90                                 nop (1 byte)		# Avoid boundary @8 [0x0:8]
0x7f278fc331d0 00000030 [0x7f278e9a0760] e8 e8 00 00 00 00 00 00 00 00      mov	rax, 0x0000000000000000	# MOV8RegImm64
0x7f278fc331da 0000003a [0x7f278e97c3a0] 8d 34 05 00 00 00 00               lea	esi, dword ptr [1*rax]		# LEA4RegMem
0x7f278fc331e1 00000041 [0x7f278e97df70] 48 8b fd                           mov	rdi, rbp		# MOV8RegReg
0x7f278fc331e4 00000044 [0x7f278e97e780]                                    assocreg                        # assocreg
0x7f278fc331e4 00000044 [0x7f278e97e520] e8 d7 db 7d 1f                     call	jitNewObject            # CALLImm4 (00007F27AF410DC0)# CALLImm4
0x7f278fc331e9 00000049 [0x7f278e98a810] 48 8b d8                           mov	rbx, rax		# MOV8RegReg
0x7f278fc331ec 0000004c [0x7f278e97f910] 48 8b c3                           mov	rax, rbx		# MOV8RegReg
0x7f278fc331ef 0000004f [0x7f278e97fa20] 33 f6                              xor	esi, esi		# XOR4RegReg
0x7f278fc331f1 00000051 [0x7f278e97fb30] 33 d2                              xor	edx, edx		# XOR4RegReg
0x7f278fc331f3 00000053 [0x7f278e97fc40] 33 c9                              xor	ecx, ecx		# XOR4RegReg

 \\ BT.foo()V
 \\    4 JBiconst0 

0x7f278fc331f5 00000055 [0x7f278e97fd60] 48 c7 04 24 00 00 00 00            mov	qword ptr [rsp], 0x00000000	# S8MemImm4
0x7f278fc331fd 0000005d [0x7f278e9806e0]                                    Label L0064:			# label	# (Start of internal control flow)

 \\ BT.foo()V
 \\    8 JBinvokespecial 7 BLine.<init>(IIII)V

0x7f278fc331fd 0000005d [0x7f278e980040] 0f 1f 00                           nop (3 bytes)		# Avoid boundary @8 [0x0:8]
0x7f278fc33200 00000060 [0x7f278e97ffa0] e8 cb 00 00 00                     call	Snippet Label L0066     # CALLImm4 (Call Snippet)# CALLImm4
0x7f278fc33205 00000065 [0x7f278e9809e0]                                    assocreg                        # assocreg
0x7f278fc33205 00000065 [0x7f278e980780]                                    Label L0065:			# label	# (End of internal control flow)
0x7f278fc33205 00000065 [0x7f278e98a740] 4c 8b fb                           mov	r15, rbx		# MOV8RegReg
0x7f278fc33208 00000068 [0x7f278e981400]                                    nop (0 bytes)		# Avoid boundary @8 [0x0:8]

 \\ BT.foo()V
 \\   12 JBgetstatic 8 java/lang/System.out Ljava/io/PrintStream;

0x7f278fc33208 00000068 [0x7f278e9a08c0] e8 f8 00 00 00 00 00 00 00 00      mov	rax, 0x0000000000000000	# MOV8RegImm64
0x7f278fc33212 00000072 [0x7f278e981370] 48 8b 1c 05 00 00 00 00            mov	rbx, qword ptr [1*rax]		# L8RegMem

 \\ BT.foo()V
 \\    0 JBnewdup 6 BLine

0x7f278fc3321a 0000007a [0x7f278e981ee0] 49 8b c7                           mov	rax, r15		# MOV8RegReg
0x7f278fc3321d 0000007d [0x7f278e982e60]                                    Label L0068:			# label	# (Start of internal control flow)

 \\ BT.foo()V
 \\   16 JBinvokevirtual 10 java/lang/Object.toString()Ljava/lang/String;

0x7f278fc3321d 0000007d [0x7f278e982220] 41 8b 0f                           mov	ecx, dword ptr [r15]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
0x7f278fc33220 00000080 [0x7f278e9822b0] 48 81 e1 00 ff ff ff               and	rcx, 0xffffffffffffff00	# AND8RegImm4
0x7f278fc33227 00000087 [0x7f278e9823d0] ff 91 c8 ff ff ff                  call	dword ptr [rcx-0x38]		# CALLMem, SymRef [#397 -56]
0x7f278fc3322d 0000008d [0x7f278e983160]                                    assocreg                        # assocreg
0x7f278fc3322d 0000008d [0x7f278e982f00]                                    Label L0069:			# label	# (End of internal control flow)
0x7f278fc3322d 0000008d [0x7f278e98a630] 48 8b f0                           mov	rsi, rax		# MOV8RegReg

 \\ BT.foo()V
 \\   12 JBgetstatic 8 java/lang/System.out Ljava/io/PrintStream;

0x7f278fc33230 00000090 [0x7f278e983ef0] 48 8b c3                           mov	rax, rbx		# MOV8RegReg

 \\ BT.foo()V
 \\   19 JBinvokevirtual 11 java/io/PrintStream.println(Ljava/lang/String;)V

0x7f278fc33233 00000093 [0x7f278e984110] 8b 13                              mov	edx, dword ptr [rbx]		# L4RegMem, SymRef  <vft-symbol>[#309  Shadow] [flags 0x18607 0x0 ]
0x7f278fc33235 00000095 [0x7f278e9841a0] 48 81 e2 00 ff ff ff               and	rdx, 0xffffffffffffff00	# AND8RegImm4
0x7f278fc3323c 0000009c [0x7f278e984e50]                                    Label L0071:			# label	# (Start of internal control flow)
0x7f278fc3323c 0000009c [0x7f278e984560] 0f 1f 40 00                        nop (4 bytes)		# Avoid boundary @8 [0x0:8]
0x7f278fc33240 000000a0 [0x7f278e9844c0] e8 1b 42 1f 1f 00 00 00 00 00      mov	rcx, 0x0000000000000000	# MOV8RegImm64
0x7f278fc3324a 000000aa [0x7f278e984600] 48 3b ca                           cmp	rcx, rdx		# CMP8RegReg
0x7f278fc3324d 000000ad [0x7f278e984690] 0f 85 f5 00 00 00                  jne	Snippet Label L0074		# JNE4	# (VPic Data)
0x7f278fc33253 000000b3 [0x7f278e984730] e8 68 43 1f 1f                     call	populateVPicSlotCall    # CALLImm4 (00007F27AEE275C0)# CALLImm4
0x7f278fc33258 000000b8 [0x7f278e985150]                                    assocreg                        # assocreg
0x7f278fc33258 000000b8 [0x7f278e984ef0]                                    Label L0072:			# label	# (End of internal control flow)
0x7f278fc33258 000000b8 [0x7f278e99fbf0] 4c 8b 4c 24 30                     mov	r9, qword ptr [rsp+0x30]		# L8RegMem, SymRef [#410 +48]
0x7f278fc3325d 000000bd [0x7f278e99fd10] 48 8b 5c 24 28                     mov	rbx, qword ptr [rsp+0x28]		# L8RegMem, SymRef [#411 +40]
0x7f278fc33262 000000c2 [0x7f278e99fda0] 48 83 c4 38                        add	rsp, 0x00000038	# ADD8RegImms

 \\ BT.foo()V
 \\   22 JBreturn0 

0x7f278fc33266 000000c6 [0x7f278e9857a0] c3                                 ret                             # RET
0x7f278fc33267 000000c7 [0x7f278e9858b0]                                    fence Relative [ 00007F278E88C0E4 ]	# fence BBEnd </block_2>
0x7f278fc33267 000000c7 [0x7f278e985b00]                                    assocreg                        # assocreg
0x7f278fc33267 000000c7 [0x7f278e985be0]                                    Label L0075:			# label
0x7f278fc33267 000000c7 [0x7f278e985dc0]                                    Label L0016:			# label
========================================
0x7f278fc33267 000000c7 [0x7f278e985e60]                                    fence Relative [ 00007F278E8ACC70 ]	# fence BBStart <block_4> (frequency 0) (cold)

 \\ BT.foo()V
 \\    0 JBnewdup 6 BLine

0x7f278fc33267 000000c7 [0x7f278e986230] 8b 05 63 42 43 fd                  mov	eax, dword ptr [$0x00007f278d0674d0]		# L4RegMem, SymRef  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]
0x7f278fc3326d 000000cd [0x7f278e9862c0] 83 e8 01                           sub	eax, 0x00000001	# SUB4RegImms
0x7f278fc33270 000000d0 [0x7f278e986460] 89 05 5a 42 43 fd                  mov	dword ptr [$0x00007f278d0674d0], eax		# S4MemReg, SymRef  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]
0x7f278fc33276 000000d6 [0x7f278e986780] 83 f8 00                           cmp	eax, 0x00000000	# CMP4RegImms
0x7f278fc33279 000000d9 [0x7f278e986810] 0f 8f 50 ff ff ff                  jg	Label L0017			# JG4
0x7f278fc3327f 000000df [0x7f278e9869a0]                                    fence Relative [ 00007F278E8ACC74 ]	# fence BBEnd </block_4>
........................................
0x7f278fc3327f 000000df [0x7f278e986ac0]                                    fence Relative [ 00007F278E8ACE70 ]	# fence BBStart <block_5> (frequency 0) (extension of previous block) (cold)
0x7f278fc3327f 000000df [0x7f278e986d50] c7 05 47 42 43 fd ff ff ff 7f      mov	dword ptr [$0x00007f278d0674d0], 0x7fffffff	# S4MemImm4, SymRef  <recompilation-counter>[#311  Static] [flags 0x1000303 0x40 ]
0x7f278fc33289 000000e9 [0x7f278e986ff0] c6 05 38 ff ff ff 02               mov	byte ptr [$0x00007f278fc331c8], 0x02	# S1MemImm1, SymRef  "(null)" <gcr-patch-point>[#329  Static] [flags 0xc00301 0x40 ]
0x7f278fc33290 000000f0 [0x7f278e987ea0] 48 8d 04 25 d8 9e 22 00            lea	rax, qword ptr [$0x0000000000229ed8]		# LEA8RegMem, SymRef  <J9Method>[#332  Static] [flags 0x8000307 0x40 ]
0x7f278fc33298 000000f8 [0x7f278e988040] 48 8d 35 01 ff ff ff               lea	rsi, qword ptr [$0x00007f278fc331a0]		# LEA8RegMem, SymRef  "(null)" <start-PC>[#331  Static] [flags 0x4800303 0x40 ]
0x7f278fc3329f 000000ff [0x7f278e988150] ba 00 00 08 00                     mov	edx, 0x00080000	# MOV4RegImm4
0x7f278fc332a4 00000104 [0x7f278e9883c0]                                    Label L0080:			# label	# (Start of internal control flow)
0x7f278fc332a4 00000104 [0x7f278e9882a0] e8 37 57 7f 1f                     call	jitRetranslateCallerWithPreparation# CALLImm4 (00007F27AF4289E0)# CALLImm4
0x7f278fc332a9 00000109 [0x7f278e9886c0]                                    assocreg                        # assocreg
0x7f278fc332a9 00000109 [0x7f278e988460]                                    Label L0081:			# label	# (End of internal control flow)
0x7f278fc332a9 00000109 [0x7f278e988b60] e9 21 ff ff ff                     jmp	Label L0017			# JMP4
0x7f278fc332ae 0000010e [0x7f278e988c90]                                    fence Relative [ 00007F278E8ACE74 ]	# fence BBEnd </block_5>
0x7f278fc332ae 0000010e [0x7f278e988ee0]                                    assocreg                        # assocreg
0x7f278fc332ae 0000010e [0x7f278e988fc0]                                    Label L0082:			# label
0x7f278fc332ae 0000010e [0x7f278e99e740]                                    vfpRestore [0x7f278e99e290]			# AdjustFramePtr
0x7f278fc332ae 0000010e [0x7f278e99e7d0]                                    Outlined Label L0098:			# label
0x7f278fc332ae 0000010e [0x7f278e99e870] bf 38 00 00 00                     mov	edi, 0x00000038	# MOV4RegImm4
0x7f278fc332b3 00000113 [0x7f278e99e990] e8 38 d8 7d 1f                     call	jitStackOverflow        # CALLImm4 (00007F27AF410AF0)# CALLImm4
0x7f278fc332b8 00000118 [0x7f278e99ea30] e9 f2 fe ff ff                     jmp	Label L0097			# JMP4
</instructions>
<snippets>

00007F278FC332BD 0000011d                                                 Snippet Label L0048:		# Unresolved Data Snippet for instr [0x7f278e9a0760]
0x7f278fc332bd 0000011d                      e8 0e 5a 1f 1f                 call	interpreterUnresolvedClassGlue
0x7f278fc332c2 00000122                      c0 9d 22 00 00 00 00 00        .quad	0000000000229DC0	# address of constant pool for this method
0x7f278fc332ca 0000012a                      06 00 00 40                    .int	0x00000006				# constant pool index
0x7f278fc332ce 0000012e                      48 b8                          .short								# REX + op of TR::InstOpCode::MOV8RegImm64

00007F278FC332D0 00000130                                                 Snippet Label L0066:		# Call Snippet
0x7f278fc332d0 00000130                      48 89 44 24 28                 mov 	qword ptr[rsp+40], rax		#save registers for interpreter call snippet
0x7f278fc332d5 00000135                      89 74 24 20                    mov 	dword ptr[rsp+32], esi		#save registers for interpreter call snippet
0x7f278fc332d9 00000139                      89 54 24 18                    mov 	dword ptr[rsp+24], edx		#save registers for interpreter call snippet
0x7f278fc332dd 0000013d                      89 4c 24 10                    mov 	dword ptr[rsp+16], ecx		#save registers for interpreter call snippet
0x7f278fc332e1 00000141                      0f 1f 80 00                    mov 	dword ptr[rsp+8], icallVMprJavaSendNativeStatic		#save registers for interpreter call snippet
0x7f278fc332e5 00000145                      00 00 00 e8 33 54 1f 1f 00 00  mov 	rdi, 0x0		# TR::InstOpCode::MOV8RegImm64
0x7f278fc332ef 0000014f                      00 00 00 e9 59                 jmp 	interpreterVoidStaticGlue		# jump out of snippet code

00007F278FC33305 00000165                                                 Snippet Label L0067:		# Unresolved Data Snippet for instr [0x7f278e9a08c0]
0x7f278fc33305 00000165                      e8 26 5b 1f 1f                 call	interpreterUnresolvedStaticFieldGlue
0x7f278fc3330a 0000016a                      c0 9d 22 00 00 00 00 00        .quad	0000000000229DC0	# address of constant pool for this method
0x7f278fc33312 00000172                      08 00 00 60                    .int	0x00000008				# constant pool index
0x7f278fc33316 00000176                      48 b8 00 00 00 00 00 00 00 00  .byte	(11)				# patch instruction bytes + TR::InstOpCode::RET

00007F278FC33324 00000184                                                 <<< VPic Data >>>
0x7f278fc33324 00000184                      48                             .byte	48								# REX of MOVRegImm64
0x7f278fc33325 00000185                      b9                             .byte	b9								# MOV opcode of MOVRegImm64
0x7f278fc33326 00000186                      48                             .byte	48								# REX of CallMem
0x7f278fc33327 00000187                      92                             .byte	92								# ModRM for TR::InstOpCode::CALLMem
0x7f278fc33328 00000188                      c0 9d 22 00 00 00 00 00        DQ	0000000000229DC0		# owning method cpAddr
0x7f278fc33330 00000190                      0b 00 00 00 00 00 00 00        DQ	000000000000000B		# cpIndex
0x7f278fc33338 00000198                      00 00 00 00 00 00 00 00        DQ	0000000000000000		# direct J9Method (initially null)
0x7f278fc33340 000001a0                      70 c0 b3 8f 27 7f 00 00        DQ	00007F278FB3C070		# j2i virtual thunk

00007F278FC33348 000001a8                                                 Snippet Label L0074:		# VPic Data
0x7f278fc33348 000001a8                      e8 93 44 1f 1f 00 00           call	populateVPicVTableDispatch 		# 00007F27AEE277E0	patched with vtable call
0x7f278fc3334f 000001af                      e9 04 ff ff ff                 jmp	Label L0072
</snippets>
</jitlog>
